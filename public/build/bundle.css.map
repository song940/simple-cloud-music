{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Album.svelte",
    "ListGrid.svelte",
    "Loading.svelte",
    "Lyric.svelte",
    "MiniPlay.svelte",
    "Play.svelte",
    "Singer.svelte",
    "Song.svelte",
    "TopTitle.svelte",
    "Button.svelte",
    "Cell.svelte",
    "Divider.svelte",
    "Input.svelte",
    "NavBar.svelte",
    "Pagination.svelte",
    "Picker.svelte",
    "Progress.svelte",
    "Radio.svelte",
    "Switch.svelte",
    "TabBar.svelte",
    "Tip.svelte",
    "Title.svelte",
    "About.svelte",
    "AllCollectSongers.svelte",
    "Artist.svelte",
    "BrSelect.svelte",
    "Comments.svelte",
    "Discover.svelte",
    "Login.svelte",
    "Love.svelte",
    "LoveListDetail.svelte",
    "Mine.svelte",
    "MoreList.svelte",
    "MoreSong.svelte",
    "MoreSonger.svelte",
    "MyAllPlayList.svelte",
    "PlayList.svelte",
    "Search.svelte",
    "Setting.svelte",
    "SongerDesc.svelte",
    "TodayListDetail.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Lazy from \"svelte-lazy\";\n  import { push } from \"svelte-stack-router\";\n  import { PlayMiniLine } from \"svelte-remixicon\";\n\n  import { isHomePageStore } from \"../store/common\";\n  import { tranNumber, imageURL } from \"../utils/common\";\n\n  export let id = 0;\n  export let name = \"\";\n  export let coverImgUrl = \"\";\n  export let playCount = 0;\n  export let copywriter = \"\";\n  export let width = 150;\n  export let trackCount = 0;\n\n  const noop = () => void 0;\n  noop(\"trackCount\", trackCount);\n\n  function goToDetail() {\n    isHomePageStore.set(false);\n    push(`/playlist?id=${id}`);\n  }\n</script>\n\n<div class=\"cover\" on:click={goToDetail} style=\"width:{width}px\">\n  <div class=\"cover-img\" style=\"width:{width}px; height:{width}px\">\n    <Lazy height={width}>\n      <img src={imageURL(coverImgUrl, { width })} alt=\"\" />\n    </Lazy>\n  </div>\n  <div class=\"play-num\">\n    <span style=\"position: relative;top:1px\">\n      <PlayMiniLine />\n    </span>\n    {tranNumber(playCount)}\n  </div>\n  <div class=\"name\" style=\"width:{width}px;\">{name}</div>\n  {#if copywriter && copywriter !== null && copywriter !== \"\"}\n    <div class=\"copywriter\">{copywriter}</div>\n  {/if}\n</div>\n\n<style>\n  .play-num {\n    margin: 4px auto;\n    font-size: 10px;\n    color: rgb(146, 146, 146);\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  .copywriter {\n    margin: 4px auto;\n    font-size: 12px;\n    color: rgb(146, 146, 146);\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    height: 26px;\n  }\n  .cover {\n    width: 105px;\n    padding-bottom: 10px;\n  }\n  .cover-img {\n    overflow: hidden;\n    width: 150px;\n    height: 150px;\n  }\n  img {\n    width: 100%;\n    border-radius: 6px;\n  }\n  .name {\n    margin-top: 4px;\n    line-height: 16px;\n    width: 150px;\n    height: 32px;\n    font-size: 12px;\n    text-align: left;\n    font-weight: bold;\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { ArrowRightSLine } from \"svelte-remixicon\";\n\n  import { Tip } from \"./base\";\n  import Album from \"./Album.svelte\";\n\n  export let title = \"\";\n  export let playList = [];\n  export let isShowMore = true;\n  export let isShowTip = false;\n  export let tipTextList = \"\";\n  export let iconText = \"更多\";\n\n  const dispatch = createEventDispatcher();\n  function onClickTitle() {\n    dispatch(\"titleClick\");\n  }\n</script>\n\n<div class=\"grid\">\n  <div class=\"title\" on:click={onClickTitle}>\n    <div class=\"title-left\">{title}</div>\n    {#if isShowMore}\n      <div class=\"title-right\">\n        {iconText}\n        <span class=\"title-icon\">\n          <ArrowRightSLine size=\"24\" style=\"vertical-align: middle;\" />\n        </span>\n      </div>\n    {/if}\n  </div>\n  {#if isShowTip}\n    <div class=\"tip\">\n      <Tip {tipTextList} />\n    </div>\n  {/if}\n  <slot />\n  <div class=\"list\">\n    {#each playList as album}\n      <div class=\"item\">\n        <Album\n          name={album.name}\n          coverImgUrl={album.coverImgUrl}\n          id={album.id}\n          width={220}\n          playCount={album.playCount}\n          copywriter={album.copywriter || \"\"}\n          trackCount={album.trackCount}\n        />\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .tip {\n    padding: 10px 20px;\n  }\n  .title-icon {\n    position: relative;\n    top: -2px;\n  }\n  .title-right {\n    line-height: 24px;\n    border-radius: 10px;\n    font-size: 14px;\n    color: #666;\n    height: 24px;\n    text-align: center;\n    margin-right: 20px;\n  }\n  .title {\n    text-align: left;\n    margin-left: 20px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    display: flex;\n    justify-content: space-between;\n  }\n  .list {\n    text-align: left;\n    white-space: nowrap;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    display: flex;\n  }\n  .item {\n    margin-right: 20px;\n    flex-shrink: 0;\n    display: inline-block;\n  }\n  .list > :global(:first-child) {\n    margin-left: 20px;\n  }\n  .list > :global(:last-child) {\n    margin-right: 20px;\n  }\n  ::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n  }\n</style>\n",
    "<div class=\"bg\">\n  <div class=\"sk-chase\">\n    <div class=\"sk-chase-dot\" />\n    <div class=\"sk-chase-dot\" />\n    <div class=\"sk-chase-dot\" />\n    <div class=\"sk-chase-dot\" />\n    <div class=\"sk-chase-dot\" />\n    <div class=\"sk-chase-dot\" />\n  </div>\n</div>\n\n<style>\n  .bg {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 499;\n    background-color: rgba(138, 138, 138, 0.4);\n    align-items: center;\n    text-align: center;\n  }\n  .sk-chase {\n    display: inline-block;\n    position: relative;\n    top: 45%;\n    width: 60px;\n    height: 60px;\n    animation: sk-chase 2.5s infinite linear both;\n  }\n  .sk-chase-dot {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    animation: sk-chase-dot 2s infinite ease-in-out both;\n  }\n  .sk-chase-dot:before {\n    content: \"\";\n    display: block;\n    width: 25%;\n    height: 25%;\n    background-color: #fff;\n    border-radius: 100%;\n    animation: sk-chase-dot-before 2s infinite ease-in-out both;\n  }\n  .sk-chase-dot:nth-child(1) {\n    animation-delay: -1.1s;\n  }\n  .sk-chase-dot:nth-child(2) {\n    animation-delay: -1s;\n  }\n  .sk-chase-dot:nth-child(3) {\n    animation-delay: -0.9s;\n  }\n  .sk-chase-dot:nth-child(4) {\n    animation-delay: -0.8s;\n  }\n  .sk-chase-dot:nth-child(5) {\n    animation-delay: -0.7s;\n  }\n  .sk-chase-dot:nth-child(6) {\n    animation-delay: -0.6s;\n  }\n  .sk-chase-dot:nth-child(1):before {\n    animation-delay: -1.1s;\n  }\n  .sk-chase-dot:nth-child(2):before {\n    animation-delay: -1s;\n  }\n  .sk-chase-dot:nth-child(3):before {\n    animation-delay: -0.9s;\n  }\n  .sk-chase-dot:nth-child(4):before {\n    animation-delay: -0.8s;\n  }\n  .sk-chase-dot:nth-child(5):before {\n    animation-delay: -0.7s;\n  }\n  .sk-chase-dot:nth-child(6):before {\n    animation-delay: -0.6s;\n  }\n  @keyframes sk-chase {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes sk-chase-dot {\n    80%,\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes sk-chase-dot-before {\n    50% {\n      transform: scale(0.4);\n    }\n    100%,\n    0% {\n      transform: scale(1);\n    }\n  }\n</style>\n",
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import { parse, cue } from \"lyric.js\";\n  import { scrollSmoothTo } from \"../utils/common\";\n  import { currentLyricStore } from \"../store/play\";\n\n  export let maxHeight = \"\";\n\n  $: lyric = $currentLyricStore.lyric;\n  $: tlyric = $currentLyricStore.tlyric;\n\n  $: lyricArr = [];\n  $: currentIndex = 0;\n\n  let boxDom;\n  let update;\n  const timeupdate = () => {\n    const { currentTime } = window.audioDOM;\n    update(currentTime);\n  };\n\n  const mergeLyric = (a, b) => {\n    const arr = [];\n    for (const x of b) {\n      const y = a.find((y) => x.timestamp === y.timestamp);\n      if (y) {\n        y.content_t = x.content;\n      } else {\n        a.push(x);\n      }\n    }\n    return a;\n  };\n\n  onMount(() => {\n    const a = parse(lyric);\n    const b = parse(tlyric);\n    lyricArr = mergeLyric(a.lines, b.lines);\n    update = cue(lyricArr, (line, i) => {\n      currentIndex = i;\n      const active = boxDom.querySelector(\".active\");\n      const offset = Math.max(0, active.offsetTop - 200);\n      console.debug(line, active.offsetTop, offset);\n      scrollSmoothTo(boxDom, offset);\n    });\n    window.audioDOM.addEventListener(\"timeupdate\", timeupdate);\n  });\n\n  onDestroy(() =>\n    window.audioDOM.removeEventListener(\"timeupdate\", timeupdate)\n  );\n</script>\n\n<div class=\"lyric\" bind:this={boxDom}>\n  <div class=\"box\" style=\"max-height:{maxHeight}\">\n    {#each lyricArr as lyric, i}\n      <div class=\"ly\" class:active={i === currentIndex}>\n        <div>{lyric.content}</div>\n        {#if tlyric && lyric.content_t}\n          <div class=\"t-text\">{lyric.content_t}</div>\n        {/if}\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .lyric {\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n    -webkit-overflow-scrolling: auto;\n  }\n  .ly {\n    word-wrap: break-word;\n    font-size: 18px;\n    font-weight: bold;\n    color: #fff;\n    padding: 10px;\n    transition: all 0.5s ease-in;\n    -webkit-transition: all 0.5s ease-in;\n    opacity: 0.5;\n    filter: blur(1px);\n    -webkit-filter: blur(1px);\n    text-align: center;\n  }\n  .active {\n    opacity: 1;\n    filter: none;\n    -webkit-filter: none;\n  }\n  .t-text {\n    font-size: 16px;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Lazy from \"svelte-lazy\";\n  import { PlayFill, PauseFill, SkipForwardMiniFill } from \"svelte-remixicon\";\n\n  import {\n    playIsMaxStore,\n    isPlaying,\n    currentSongStore,\n    currentPlayListStore,\n    currentSongIndexStore,\n    playerTop,\n    isFMPlaying,\n    FMPlayNextStore,\n    FMPlayStore,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import { isHomePageStore } from \"../store/common\";\n\n  import { getSongUrl, personalFM } from \"../api/song\";\n\n  import {\n    formatURL,\n    imageURL,\n    ripple,\n    songerListToStr,\n    Toast,\n  } from \"../utils/common\";\n\n  export let currentTimeLong =\n    window.audioDOM.currentTime / window.audioDOM.duration; //进度条长度\n\n  let pauseDom;\n  let nextDom;\n  let touchStartX; //滑动开始时候触摸点Y坐标\n  let touchEndX; //滑动结束时候触摸点Y坐标\n  let touchStartTime = 0; //滑动开始时间戳\n  let touchEndTime = 0; //滑动结束时间戳\n  $: moveLong = 0; //移动距离\n\n  onMount(() => {\n    if (pauseDom) ripple(pauseDom);\n    if (nextDom) ripple(nextDom);\n  });\n\n  function showPlayer() {\n    playIsMaxStore.set(true);\n    playerTop.set(\"0px\");\n  }\n\n  function miniPlayFun() {\n    if ($isPlaying) {\n      window.audioDOM.pause();\n      isPlaying.set(false);\n      localStorage.setItem(\"pauseTimes\", new Date().getTime());\n    } else {\n      //解决长时间不播放URL失效问题(暂定30分钟过期)\n      if (\n        (new Date().getTime() - Number(localStorage.getItem(\"pauseTimes\"))) /\n          1000 /\n          60 >\n        30\n      ) {\n        window.audioDOM.src = `https://music.163.com/song/media/outer/url?id=${$currentSongStore.id}.mp3`;\n      }\n      window.audioDOM.play();\n      isPlaying.set(true);\n    }\n  }\n  function miniNextFun() {\n    if ($isFMPlaying) {\n      //正在私人FM\n      getSongUrlFun($FMPlayNextStore, \"fm\");\n    } else {\n      if ($currentSongIndexStore === $currentPlayListStore.length - 1) {\n        Toast(\"已经是最后一首了\");\n      } else {\n        //随机模式\n        if ($playRepeatModelStore === \"shuffle\") {\n          let index = Math.floor(\n            Math.random() * ($currentPlayListStore.length - 1)\n          );\n          getSongUrlFun($currentPlayListStore[index], \"shuffle\", index);\n        } else {\n          currentSongIndexStore.set($currentSongIndexStore + 1);\n          getSongUrlFun($currentPlayListStore[$currentSongIndexStore], \"next\");\n        }\n      }\n    }\n  }\n  //获取歌曲URL\n  async function getSongUrlFun(song, type, index) {\n    const res = await getSongUrl(song.id);\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($isFMPlaying) {\n          //私人FM\n          personalFMFun();\n          FMPlayStore.set(song);\n          currentSongStore.set(song);\n          currentPlayListStore.set([$FMPlayStore]);\n          currentSongIndexStore.set(0);\n          localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        } else {\n          if (type === \"shuffle\") {\n            //随机\n            currentSongStore.set(song);\n            localStorage.setItem(\"currentSong\", JSON.stringify(song));\n            currentSongIndexStore.set(index);\n          } else {\n            currentSongStore.set(song);\n            localStorage.setItem(\"currentSong\", JSON.stringify(song));\n            if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\n              getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n            }\n          }\n        }\n      } else {\n        Toast(\n          `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n          2000\n        );\n      }\n    }\n  }\n  //私人FM\n  async function personalFMFun() {\n    const res = await personalFM();\n    if (res.code === 200) {\n      res.data[0].al = res.data[0].album;\n      res.data[0].ar = res.data[0].artists;\n      res.data[0].alia = res.data[0].alias;\n      FMPlayNextStore.set(res.data[0]);\n    }\n  }\n  //播放私人FM\n  function playFMFun() {\n    getSongUrlFun(FMSong);\n    isFMPlaying.set(true);\n    localStorage.setItem(\"isFMPlay\", \"1\");\n    localStorage.setItem(\"FMPlay\", JSON.stringify(FMSong));\n    personalFMFun(true);\n  }\n  //滑动开始\n  function touchStart(e) {\n    touchStartTime = new Date().getTime();\n    touchStartX = e.changedTouches[0].clientX;\n  }\n  //滑动结束\n  function touchEnd(e) {\n    moveLong = 0;\n    touchEndTime = new Date().getTime();\n    touchEndX = e.changedTouches[0].clientX;\n    // 移动距离大于100，直接下一曲；\n    // 移动距离不超过100的时候，考虑速度，速度超过0.5，直接下一曲；\n    // 其他情况都是不触发\n    if (touchStartX - touchEndX > 100) {\n      miniNextFun();\n    } else if (\n      touchStartX - touchEndX <= 100 &&\n      (touchStartX - touchEndX) / (touchEndTime - touchStartTime) >= 0.5\n    ) {\n      miniNextFun();\n    } else {\n    }\n  }\n  //滑动过程\n  function touchMove(e) {\n    //阻止滑动时穿透问题\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.changedTouches[0].clientX - touchStartX < 0) {\n      moveLong = e.changedTouches[0].clientX - touchStartX;\n    }\n  }\n</script>\n\n<div\n  class=\"play secondary\"\n  style=\"bottom: {$isHomePageStore ? 56 : 0}px\"\n  on:touchstart={touchStart}\n  on:touchend={touchEnd}\n  on:touchmove={touchMove}\n>\n  <div\n    class=\"progress\"\n    style=\"width:{(currentTimeLong / 100) * window.screen.width}px;\"\n    on:click={showPlayer}\n  />\n  <div class=\"cover\" on:click={showPlayer} style=\"left:{moveLong}px\">\n    <Lazy height={50}>\n      <img src={imageURL($currentSongStore.al.picUrl, { width: 800 })} alt=\"\" />\n    </Lazy>\n  </div>\n  <div class=\"info\" on:click={showPlayer} style=\"left:{moveLong}px\">\n    <div class=\"name\">\n      {$currentSongStore.name}\n      <span class=\"alia\">\n        {$currentSongStore.alia && $currentSongStore.alia.length > 0\n          ? `(${$currentSongStore.alia[0]})`\n          : \"\"}\n      </span>\n    </div>\n    <div class=\"songer\">\n      {songerListToStr($currentSongStore.ar)}\n      <span>\n        {$currentSongStore.al.name === \"\"\n          ? \"\"\n          : `- ${$currentSongStore.al.name}`}\n      </span>\n    </div>\n  </div>\n  <div class=\"pause\" on:click={miniPlayFun} bind:this={pauseDom}>\n    {#if $isPlaying}\n      <PauseFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\n    {:else}\n      <PlayFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\n    {/if}\n  </div>\n  <div class=\"next\" on:click={miniNextFun} bind:this={nextDom}>\n    <SkipForwardMiniFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\n  </div>\n</div>\n\n<style>\n  .alia {\n    color: rgb(138, 138, 138);\n    font-size: 14px;\n    font-weight: normal;\n  }\n  .progress {\n    z-index: 100;\n    position: absolute;\n    bottom: 0;\n    width: 0%;\n    height: 60px;\n    background-image: linear-gradient(\n      to right,\n      rgba(197, 197, 197, 0.01),\n      rgba(197, 197, 197, 0.3)\n    );\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .play {\n    z-index: 10;\n    width: 100%;\n    height: 60px;\n    position: fixed;\n    bottom: 0px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n    border-top: 1px solid rgba(197, 197, 197, 0.4);\n    backdrop-filter: blur(20px);\n    -webkit-backdrop-filter: blur(20px);\n    background-color: rgba(255, 255, 255, 0.7);\n    transition: all 0.4s ease-in-out;\n    -webkit-transition: all 0.4s ease-in-out;\n  }\n  img {\n    width: 50px;\n    height: 50px;\n    border: rgb(214, 214, 214) solid 1px;\n    border-radius: 5px;\n    object-fit: cover;\n    overflow: hidden;\n  }\n  .cover {\n    width: 50px;\n    height: 50px;\n    padding: 5px;\n    overflow: hidden;\n    position: relative;\n    left: 0px;\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n  }\n  .pause {\n    flex: 1;\n    line-height: 57px;\n    z-index: 101;\n    border-radius: 30px;\n  }\n  .next {\n    z-index: 101;\n    flex: 1;\n    line-height: 57px;\n    border-radius: 30px;\n  }\n  .info {\n    flex: 3;\n    text-align: left;\n    font-size: 16px;\n    position: relative;\n    left: 0px;\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n  }\n  .name {\n    font-weight: bold;\n    align-items: center;\n    width: 186px;\n    height: 36px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box; /*作为弹性伸缩盒子模型显示。*/\n    -webkit-box-orient: vertical; /*设置伸缩盒子的子元素排列方式--从上到下垂直排列8*/\n    -webkit-line-clamp: 2;\n  }\n  .songer {\n    margin-top: 4px;\n    font-size: 12px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box; /*作为弹性伸缩盒子模型显示。*/\n    -webkit-box-orient: vertical; /*设置伸缩盒子的子元素排列方式--从上到下垂直排列8*/\n    -webkit-line-clamp: 1;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { push, location } from \"svelte-stack-router\";\n  import {\n    SkipBackFill,\n    SkipForwardFill,\n    PlayFill,\n    PauseFill,\n    ChatQuoteLine,\n    ChatQuoteFill,\n    Message2Line,\n    RadioLine,\n    Heart2Line,\n    Heart2Fill,\n    DislikeLine,\n    RepeatOneLine,\n    ShuffleLine,\n    PlayListLine,\n    PlayListFill,\n    SortDesc,\n    HeartPulseLine,\n  } from \"svelte-remixicon\";\n\n  import Lyric from \"../components/Lyric.svelte\";\n  import SongList from \"../components/SongList.svelte\";\n  import { Picker, Progress } from \"../components/base\";\n\n  import {\n    getSongUrl,\n    personalFM,\n    likeThisSong,\n    getLyric,\n    fmTrash,\n  } from \"../api/song\";\n\n  import {\n    isPlaying,\n    currentSongStore,\n    currentPlayListStore,\n    currentSongIndexStore,\n    playerTop,\n    playIsMaxStore,\n    isFMPlaying,\n    FMPlayNextStore,\n    FMPlayStore,\n    currentLyricStore,\n    playerShowType,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import {\n    isLoginStore,\n    isHomePageStore,\n    currentDetailSongerIdStore,\n    isShowCommentStore,\n  } from \"../store/common\";\n  import { userLikedSongIdsStore } from \"../store/user\";\n\n  import {\n    timeToMinute,\n    songerListToStr,\n    Toast,\n    ripple,\n    formatURL,\n    imageURL,\n  } from \"../utils/common\";\n\n  export let currentTime = \"0:00\"; //当前播放时间\n  export let currentTimeLong = 0; //进度条长度\n  export let endTime = 0; //结束时间\n\n  let lyricDom;\n  let listDom;\n  let loveDom;\n  let disloveDom;\n  let repeatDom;\n  let commentDom;\n  let preDom;\n  let playDom;\n  let nextDom;\n  let coverDom;\n\n  let playBgDom;\n  let touchMoveToTop = 0; //播放器顶部距离整个视窗顶部的距离\n  let touchStartY; //滑动开始时候触摸点Y坐标\n  let touchEndY; //滑动结束时候触摸点Y坐标\n  let touchStartTime = 0; //滑动开始时间戳\n  let touchEndTime = 0; //滑动结束时间戳\n  let playListDom;\n\n  $: isLikeCurrentSong = $isLoginStore && $userLikedSongIdsStore.includes($currentSongStore.id); //是否喜欢当前歌曲\n  $: likeLoading = false; //优化点击红心请求时候loading效果\n  $: noLikeLoading = false; //优化FM点击不喜欢红心请求时候loading效果\n  $: lyricLoading = false; //优化点击歌词请求时候loading效果\n  $: PickerShow = false;\n  $: songers = $currentSongStore.ar;\n\n  const setMin = () => {\n    playIsMaxStore.set(false);\n    playerTop.set(window.screen.height + \"px\");\n  };\n\n  const setMax = () => {\n    playerTop.set(\"0px\");\n  };\n\n  onMount(() => {\n    setMin();\n    playerShowType.set(\"cover\");\n    if (lyricDom) ripple(lyricDom);\n    if (listDom) ripple(listDom);\n    if (loveDom) ripple(loveDom);\n    if (disloveDom) ripple(disloveDom);\n    if (repeatDom) ripple(repeatDom);\n    if (commentDom) ripple(commentDom);\n    if (preDom) ripple(preDom);\n    if (playDom) ripple(playDom);\n    if (nextDom) ripple(nextDom);\n    if (coverDom) ripple(coverDom);\n  });\n  //接收子组件（Progress）发送来的事件（setCurrent），获取当前进度点的值（event.detail.current）。\n  function getCurrent(event) {\n    window.audioDOM.currentTime =\n      (event.detail.current / 100) * window.audioDOM.duration;\n    currentTime = timeToMinute(window.audioDOM.currentTime);\n    currentTimeLong =\n      (window.audioDOM.currentTime / window.audioDOM.duration) * 100;\n    endTime =\n      \"-\" +\n      timeToMinute(window.audioDOM.duration - window.audioDOM.currentTime);\n    window.audioDOM.play();\n    isPlaying.set(true);\n  }\n  //接收子组件（Progress）发送来的事件（setTimeCurrent），获取当前进度时间点的值（event.detail.timeCurrent ）。\n  function getTimeCurrent(event) {\n    window.audioDOM.currentTime =\n      (event.detail.timeCurrent / 100) * window.audioDOM.duration;\n    currentTime = timeToMinute(window.audioDOM.currentTime);\n    currentTimeLong =\n      (window.audioDOM.currentTime / window.audioDOM.duration) * 100;\n    endTime =\n      \"-\" +\n      timeToMinute(window.audioDOM.duration - window.audioDOM.currentTime);\n  }\n  function handleDown() {\n    setMin();\n    playerShowType.set(\"cover\");\n  }\n  //切换下一首\n  function playNextFun() {\n    if ($isFMPlaying) {\n      //正在私人FM\n      getSongUrlFun($FMPlayNextStore, \"next\");\n      playerShowType.set(\"cover\");\n    } else {\n      if ($currentSongIndexStore === $currentPlayListStore.length - 1) {\n        Toast(\"已经是最后一首了\");\n      } else {\n        if ($playerShowType === \"lyric\") playerShowType.set(\"cover\");\n        //随机模式\n        if ($playRepeatModelStore === \"shuffle\") {\n          // Math.floor(Math.random() * 21);\n          let index = Math.floor(\n            Math.random() * ($currentPlayListStore.length - 1)\n          );\n          getSongUrlFun($currentPlayListStore[index], \"shuffle\", index);\n        } else {\n          currentSongIndexStore.set($currentSongIndexStore + 1);\n          getSongUrlFun($currentPlayListStore[$currentSongIndexStore], \"next\");\n        }\n      }\n    }\n  }\n  //切换上一首\n  function playPreFun() {\n    if ($currentSongIndexStore === 0) {\n      Toast(\"已经是第一首了\");\n    } else {\n      if ($playerShowType === \"lyric\") playerShowType.set(\"cover\");\n      getSongUrlFun($currentPlayListStore[$currentSongIndexStore - 1], \"pre\");\n    }\n  }\n  //获取歌单url\n  async function getSongUrlFun(song, type, index) {\n    const res = await getSongUrl(song.id);\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        currentSongStore.set(song);\n        localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($isFMPlaying) {\n          //私人FM\n          personalFMFun();\n          FMPlayStore.set(song);\n          currentSongStore.set(song);\n          currentPlayListStore.set([$FMPlayStore]);\n          currentSongIndexStore.set(0);\n          localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        } else {\n          //切换下一首和上一首之后，修改播放歌曲在播放列表中的位置\n          if (type === \"next\") {\n            if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\n              getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n            }\n          } else if (type === \"shuffle\") {\n            //随机\n            if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\n              currentSongIndexStore.set(index);\n            }\n          } else {\n            //上一首\n            currentSongIndexStore.set($currentSongIndexStore - 1);\n          }\n        }\n      } else {\n        Toast(\n          `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n          2000\n        );\n      }\n    }\n  }\n  //私人FM\n  async function personalFMFun() {\n    const res = await personalFM();\n    if (res.code === 200) {\n      res.data[0].al = res.data[0].album;\n      res.data[0].ar = res.data[0].artists;\n      res.data[0].alia = res.data[0].alias;\n      FMPlayNextStore.set(res.data[0]);\n      getSongUrl(res.data[0].id);\n    }\n  }\n  //点击红心\n  async function handleLoveFun() {\n    if ($isLoginStore) {\n      likeLoading = true;\n      const res = await likeThisSong({\n        id: $currentSongStore.id,\n        like: !isLikeCurrentSong,\n      });\n      if (res.code === 200) {\n        const ids = JSON.parse(localStorage.getItem(\"useLoveSongIds\"));\n        if (isLikeCurrentSong) {\n          let i = ids.indexOf($currentSongStore.id);\n          ids.splice(i, 1);\n        } else {\n          ids.unshift($currentSongStore.id);\n        }\n        likeLoading = false;\n        userLikedSongIdsStore.set(JSON.stringify(ids));\n        localStorage.setItem(\"useLoveSongIds\", JSON.stringify(ids));\n      } else {\n        likeLoading = false;\n      }\n    } else {\n      Toast(\"当前未登录\");\n    }\n  }\n  //FM 不喜欢\n  async function handleFMNoLoveFun() {\n    noLikeLoading = true;\n    const res = await fmTrash($currentSongStore.id);\n    if (res.code === 200) {\n      noLikeLoading = false;\n      playNextFun();\n    }\n  }\n  //切换歌词显示\n  function showLyric() {\n    if ($playerShowType !== \"lyric\") {\n      requestLyric();\n    } else {\n      playerShowType.set(\"cover\");\n    }\n  }\n  //请求歌词\n  async function requestLyric() {\n    if ($currentLyricStore.songId === $currentSongStore.id) {\n      playerShowType.set(\"lyric\");\n      return;\n    }\n    lyricLoading = true;\n    const res = await getLyric($currentSongStore.id);\n    lyricLoading = false;\n    if (res.code === 200) {\n      if (res.nolyric || res.needDesc || res.lrc.lyric === \"\") {\n        currentLyricStore.set({\n          songId: null,\n          lyric: null,\n          tlyric: null,\n        });\n        Toast(\"🙈🙈么有歌词哦!!🙈🙈\");\n        return;\n      }\n    }\n    playerShowType.set(\"lyric\");\n    currentLyricStore.set({\n      songId: $currentSongStore.id,\n      lyric: res.lrc.lyric,\n      tlyric: res.tlyric.lyric,\n    });\n  }\n  //切换播放列表显示\n  function changeListFun() {\n    if ($playerShowType !== \"list\") {\n      if ($currentSongIndexStore > 200) {\n        let r = confirm(\n          \"当前播放歌曲在播放列表中位置超过 200，显示播放列表将自动滚动至当前歌曲，极短时间内渲染大量页面会严重消耗设备性能😈😈。可以考虑到歌单详情页（已做了懒加载）查看列表哦😅。🤔确定显示播放列表吗🤔？\"\n        );\n        if (r === true) {\n          if ($currentPlayListStore.length > 200) {\n            Toast(\"列表太长，等我加载...🥱🥱\", 1000, () => {\n              playerShowType.set(\"list\");\n              setTimeout(() => {\n                playListDom.scrollTop = 60 * $currentSongIndexStore;\n              }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\n            });\n          } else {\n            playerShowType.set(\"list\");\n            setTimeout(() => {\n              playListDom.scrollTop = 60 * $currentSongIndexStore;\n            }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\n          }\n        }\n      } else {\n        if ($currentPlayListStore.length > 200) {\n          Toast(\"列表太长，等我加载...🥱🥱\", 1000, () => {\n            playerShowType.set(\"list\");\n            setTimeout(() => {\n              playListDom.scrollTop = 60 * $currentSongIndexStore;\n            }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\n          });\n        } else {\n          playerShowType.set(\"list\");\n          setTimeout(() => {\n            playListDom.scrollTop = 60 * $currentSongIndexStore;\n          }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\n        }\n      }\n    } else {\n      playerShowType.set(\"cover\");\n    }\n  }\n  // 切换播放循环模式\n  function changeRrpeatFun(e) {\n    if ($playRepeatModelStore === \"heart\") {\n      Toast(\"心动模式无需切换\");\n    } else {\n      if ($playRepeatModelStore === \"repeat\") {\n        playRepeatModelStore.set(\"shuffle\");\n      } else if ($playRepeatModelStore === \"shuffle\") {\n        playRepeatModelStore.set(\"repeatOnce\");\n      } else {\n        playRepeatModelStore.set(\"repeat\");\n      }\n    }\n  }\n  //歌词区域点击\n  function lyricClickFun() {\n    playerShowType.set(\"cover\");\n  }\n  //去歌曲评论页面\n  function gotoComments() {\n    playerShowType.set(\"cover\");\n    // setMin();\n    if (!($location === \"/comments\")) {\n      if ($isHomePageStore) isHomePageStore.set(false);\n      push(`/comments?id=${$currentSongStore.id}`);\n    }\n  }\n  //滑动开始\n  function touchStart(e) {\n    touchStartTime = new Date().getTime();\n    touchStartY = e.changedTouches[0].clientY;\n    touchMoveToTop = 0;\n    playerTop.set(touchMoveToTop + \"px\");\n  }\n  //滑动结束\n  function touchEnd(e) {\n    touchEndTime = new Date().getTime();\n    touchEndY = e.changedTouches[0].clientY;\n    // 移动距离小于100不触发任何行为\n    // 移动结束时，播放器顶部距整个视窗顶部的距离大于屏幕高度一半的时候，可以不用考虑滑动速度，直接最小化播放器\n    // 移动距离超过100，播放器顶部距整个视窗顶部的距离还不到一半的时候，考虑速度，速度超过0.8，直接最小化；\n    // 速度小于0.3，不判断为最小化；0.3-0.8之间，如果移动距离超过250，最小化，不到250则不触发最小化。\n    if (touchMoveToTop >= window.screen.height / 2) {\n      //最小化\n      setMin();\n      playerShowType.set(\"cover\");\n    } else if (touchEndY - touchStartY <= 100) {\n      setMax();\n    } else if (\n      touchEndY - touchStartY > 100 &&\n      (touchEndY - touchStartY) / (touchEndTime - touchStartTime) >= 0.8\n    ) {\n      setMin();\n      playerShowType.set(\"cover\");\n    } else if (\n      touchEndY - touchStartY > 100 &&\n      (touchEndY - touchStartY) / (touchEndTime - touchStartTime) <= 0.3\n    ) {\n      setMax();\n    } else if (\n      0.3 < (touchEndY - touchStartY) / (touchEndTime - touchStartTime) < 0.8 &&\n      touchEndY - touchStartY > 250\n    ) {\n      setMin();\n      playerShowType.set(\"cover\");\n    } else {\n      setMax();\n    }\n  }\n  //滑动过程\n  function touchMove(e) {\n    //阻止滑动时穿透问题\n    e.preventDefault();\n    e.stopPropagation();\n    if (parseFloat(playBgDom.style[\"top\"]) >= 0) {\n      touchMoveToTop = e.changedTouches[0].clientY - touchStartY;\n      playerTop.set(touchMoveToTop + \"px\");\n    }\n  }\n</script>\n\n<div\n  bind:this={playBgDom}\n  class=\"play-bg\"\n  style=\"background: url({imageURL($currentSongStore.al.picUrl, {\n    height: 800,\n  })});top:{$playerTop}\"\n>\n  <div class=\"play\">\n    <div class=\"top-box\">\n      <div\n        class=\"down\"\n        on:click={handleDown}\n        on:touchstart={touchStart}\n        on:touchend={touchEnd}\n        on:touchmove={touchMove}\n      >\n        <div class=\"down-line\" />\n      </div>\n      {#if $playerShowType === \"cover\"}\n        <div\n          class=\"cover\"\n          on:click={handleDown}\n          on:touchstart={touchStart}\n          on:touchend={touchEnd}\n          on:touchmove={touchMove}\n          bind:this={coverDom}\n        >\n          <div>\n            <img\n              style=\"width:{$isPlaying\n                ? '280px'\n                : '240px'};height:{$isPlaying ? '280px' : '240px'}\"\n              src={imageURL($currentSongStore.al.picUrl, { width: 800 })}\n              alt=\"\"\n              class=\"cover-img\"\n            />\n          </div>\n        </div>\n      {:else if $playerShowType === \"lyric\"}\n        <div class=\"lyric-cover\" on:click={lyricClickFun}>\n          <Lyric maxHeight=\"54vh\" />\n        </div>\n      {:else if !$isFMPlaying && $playerShowType === \"list\"}\n        <div class=\"song-list-box\" bind:this={playListDom}>\n          <SongList songList={$currentPlayListStore} />\n        </div>\n      {/if}\n    </div>\n    <div class=\"control-box\">\n      <div class=\"info\">\n        <div class=\"song\">\n          <div class=\"name\">\n            {$currentSongStore.name}\n            <span class=\"alia\">\n              {$currentSongStore.alia && $currentSongStore.alia.length > 0\n                ? `(${$currentSongStore.alia[0]})`\n                : \"\"}\n            </span>\n          </div>\n          <div\n            class=\"songer\"\n            on:click={() => {\n              if (songers.length === 1) {\n                if (songers[0].id != 0) {\n                  playerShowType.set(\"cover\");\n                  setMin();\n                  isHomePageStore.set(false);\n                  currentDetailSongerIdStore.set(songers[0].id);\n                  push(`/artist?id=${songers[0].id}`);\n                }\n              } else {\n                PickerShow = true;\n              }\n            }}\n          >\n            {songerListToStr($currentSongStore.ar)}\n            <span>\n              {$currentSongStore.al.name === \"\"\n                ? \"\"\n                : `- ${$currentSongStore.al.name}`}\n            </span>\n          </div>\n        </div>\n        <div class=\"progress\">\n          <div class=\"line\">\n            <Progress\n              on:setCurrent={getCurrent}\n              on:setTimeCurrent={getTimeCurrent}\n              current={currentTimeLong}\n            />\n          </div>\n          <!-- 时间显示 -->\n          <div class=\"time\">\n            <div class=\"time-item start\">{currentTime}</div>\n            <div\n              class=\"time-item quality\"\n              on:click={() => {\n                playerShowType.set(\"cover\");\n                setMin();\n                if (!($location === \"/brSelect\")) {\n                  if ($isHomePageStore) isHomePageStore.set(false);\n                  push(\"/brSelect\");\n                }\n              }}\n            >\n              <span class=\"quality-span\">\n                {$currentSongQualityStore === \"FLAC\" ||\n                $currentSongQualityStore === \"试听\"\n                  ? $currentSongQualityStore\n                  : $currentSongQualityStore\n                      .toString()\n                      .substring(\n                        0,\n                        $currentSongQualityStore.toString().length - 3\n                      ) + \"K\"}\n              </span>\n            </div>\n            <div class=\"time-item end\">{endTime}</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"tool\">\n        <!-- 歌词 -->\n        <div class=\"tool-item lyric\" on:click={showLyric} bind:this={lyricDom}>\n          {#if lyricLoading}\n            <span style=\"line-height: 30px;\">\n              <embed\n                width=\"24\"\n                height=\"24\"\n                src=\"/images/Ripple.svg\"\n                type=\"image/svg+xml\"\n              />\n            </span>\n          {:else if $playerShowType === \"lyric\"}\n            <ChatQuoteFill size=\"20\" style=\"vertical-align: middle\" />\n          {:else}\n            <ChatQuoteLine size=\"20\" style=\"vertical-align: middle\" />\n          {/if}\n        </div>\n        {#if !$isFMPlaying}\n          <!-- 播放列表 -->\n          <div\n            class=\"tool-item list\"\n            on:click={changeListFun}\n            bind:this={listDom}\n          >\n            {#if $playerShowType === \"list\"}\n              <PlayListFill size=\"20\" style=\"vertical-align: middle\" />\n            {:else}\n              <PlayListLine size=\"20\" style=\"vertical-align: middle\" />\n            {/if}\n          </div>\n        {/if}\n        {#if $isFMPlaying && $isLoginStore}\n          <!-- FM 不喜欢 -->\n          <div\n            class=\"tool-item list\"\n            on:click={handleFMNoLoveFun}\n            bind:this={disloveDom}\n          >\n            {#if noLikeLoading}\n              <span style=\"line-height: 30px;\">\n                <embed\n                  width=\"24\"\n                  height=\"24\"\n                  src=\"/images/Ripple.svg\"\n                  type=\"image/svg+xml\"\n                />\n              </span>\n            {:else}\n              <DislikeLine size=\"20\" style=\"vertical-align: middle\" />\n            {/if}\n          </div>\n        {/if}\n        {#if $isLoginStore}\n          <!-- 喜欢 -->\n          <div\n            class=\"tool-item love\"\n            on:click={handleLoveFun}\n            bind:this={loveDom}\n          >\n            {#if likeLoading}\n              <span style=\"line-height: 30px;\">\n                <embed\n                  width=\"24\"\n                  height=\"24\"\n                  src=\"/images/Ripple.svg\"\n                  type=\"image/svg+xml\"\n                />\n              </span>\n            {:else}\n              <span\n                style=\"color:{isLikeCurrentSong\n                  ? 'var(--primary-text-color)'\n                  : '#fff'}\"\n              >\n                {#if isLikeCurrentSong}\n                  <Heart2Fill size=\"20\" style=\"vertical-align: middle\" />\n                {:else}\n                  <Heart2Line size=\"20\" style=\"vertical-align: middle\" />\n                {/if}\n              </span>\n            {/if}\n          </div>\n        {/if}\n        {#if !$isFMPlaying}\n          <!-- 播放模式 -->\n          <div\n            class=\"tool-item mode\"\n            on:click={(e) => changeRrpeatFun(e)}\n            bind:this={repeatDom}\n          >\n            {#if $playRepeatModelStore === \"repeat\"}\n              <SortDesc size=\"20\" style=\"vertical-align: middle\" />\n            {:else if $playRepeatModelStore === \"repeatOnce\"}\n              <RepeatOneLine size=\"20\" style=\"vertical-align: middle\" />\n            {:else if $playRepeatModelStore === \"heart\"}\n              <span class:heart-beat={$isPlaying}>\n                <HeartPulseLine size=\"20\" style=\"vertical-align: middle\" />\n              </span>\n            {:else}\n              <ShuffleLine size=\"20\" style=\"vertical-align: middle\" />\n            {/if}\n          </div>\n        {/if}\n        <!-- 评论 -->\n        {#if $isShowCommentStore != \"0\"}\n          <div\n            class=\"tool-item comment\"\n            on:click={gotoComments}\n            bind:this={commentDom}\n          >\n            <Message2Line size=\"20\" style=\"vertical-align: middle\" />\n          </div>\n        {/if}\n      </div>\n      <div class=\"control\">\n        <div\n          class=\"con-item pre\"\n          on:click={() => {\n            if (!$isFMPlaying) playPreFun();\n          }}\n          bind:this={preDom}\n        >\n          {#if $isFMPlaying}\n            <RadioLine\n              size=\"24px\"\n              style=\"vertical-align: middle;;height:80px\"\n            />\n          {:else}\n            <SkipBackFill\n              size=\"40px\"\n              style=\"vertical-align: middle;height:80px\"\n            />\n          {/if}\n        </div>\n        <div\n          class=\"con-item pause\"\n          bind:this={playDom}\n          on:click={() => {\n            if ($isPlaying) {\n              window.audioDOM.pause();\n              isPlaying.set(false);\n              localStorage.setItem(\"pauseTimes\", new Date().getTime());\n            } else {\n              //解决长时间不播放URL失效问题(暂定30分钟过期)\n              if (\n                (new Date().getTime() -\n                  Number(localStorage.getItem(\"pauseTimes\"))) /\n                  1000 /\n                  60 >\n                30\n              ) {\n                window.audioDOM.src = `https://music.163.com/song/media/outer/url?id=${$currentSongStore.id}.mp3`;\n              }\n              window.audioDOM.play();\n              isPlaying.set(true);\n            }\n          }}\n        >\n          {#if $isPlaying}\n            <PauseFill size=\"80px\" style=\"vertical-align: middle;height:80px\" />\n          {:else}\n            <PlayFill size=\"80px\" style=\"vertical-align: middle;height:80px\" />\n          {/if}\n        </div>\n        <div class=\"con-item next\" on:click={playNextFun} bind:this={nextDom}>\n          <SkipForwardFill\n            size=\"40px\"\n            style=\"vertical-align: middle;height:80px\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n{#if $playIsMaxStore && 0 < parseFloat($playerTop) < window.screen.height - 40}\n  <div\n    class=\"play-mask\"\n    style=\"background-color: rgba(0, 0, 0, {0.9 -\n      parseFloat($playerTop) / window.screen.height});\"\n  />\n{/if}\n\n<Picker\n  isShow={PickerShow}\n  title=\"请选择歌手\"\n  on:ChangeShow={(e) => {\n    PickerShow = e.detail.isShow;\n  }}\n  on:PickerClick={(e) => {\n    const { item: artist } = e.detail;\n    if (artist.id != 0) {\n      playerShowType.set(\"cover\");\n      setMin();\n      isHomePageStore.set(false);\n      currentDetailSongerIdStore.set(artist.id);\n      push(`/artist?id=${artist.id}`);\n    }\n  }}\n  list={songers}\n/>\n\n<style>\n  .alia {\n    color: rgb(255, 255, 255, 0.7);\n    font-size: 14px;\n    font-weight: normal;\n  }\n  .down {\n    text-align: center;\n    height: 6vh;\n    display: flex;\n  }\n  .down-line {\n    margin: auto;\n    width: 40px;\n    height: 6px;\n    border-radius: 3px;\n    margin: auto;\n    background: rgba(255, 255, 255, 0.8);\n  }\n  .line {\n    padding: 10px 20px;\n  }\n  .time {\n    font-size: 10px;\n    columns: 2;\n    padding: 0 18px;\n    color: rgba(255, 255, 255, 0.6);\n    display: flex;\n  }\n  .time-item {\n    flex: 1;\n  }\n  .start {\n    text-align: left;\n  }\n  .quality {\n    text-align: center;\n    display: inline-block;\n    opacity: 0.6;\n  }\n  .quality-span {\n    line-height: 13px;\n    font-size: 8px;\n    padding: 0 2px;\n    background-color: #fff;\n    border-radius: 2px;\n    color: rgb(99, 99, 99);\n  }\n  .end {\n    text-align: right;\n  }\n  .name {\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n  .info {\n    text-align: left;\n  }\n  .song {\n    padding: 0 20px;\n  }\n  .songer {\n    margin-top: 6px;\n    font-size: 14px;\n    color: rgb(255, 255, 255, 0.7);\n  }\n  .play-bg {\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    bottom: 0;\n    z-index: 999;\n    background-size: cover !important;\n    background-position: center !important;\n    transition: top 0.4s cubic-bezier(0.25, 1, 0.5, 1);\n    -webkit-transition: top 0.4s cubic-bezier(0.25, 1, 0.5, 1);\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .cover-img {\n    object-fit: cover;\n    transition: all 0.3s ease;\n    -webkit-transition: all 0.3s ease;\n  }\n  .play {\n    position: absolute;\n    z-index: 1001;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.4);\n    backdrop-filter: blur(20px);\n    -webkit-backdrop-filter: blur(20px);\n    color: #fff;\n    font-size: 26px;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  img {\n    display: block;\n    width: 220px;\n    height: 220px;\n    margin: auto;\n    border-radius: 10px;\n    box-shadow: 0 0 20px 0 rgb(0 0 0 / 20%);\n  }\n  .tool {\n    display: flex;\n    text-align: center;\n    width: 100%;\n    color: rgba(255, 255, 255, 0.8);\n  }\n  .tool-item {\n    flex: 1;\n    height: 30px;\n    position: relative;\n    overflow: hidden;\n    border-radius: 6px;\n  }\n  .control-box {\n    height: 40vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .control {\n    display: flex;\n    font-size: 40px;\n    text-align: center;\n    width: 100%;\n    color: rgba(255, 255, 255, 0.9);\n    align-items: center;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .con-item {\n    margin-bottom: 20px;\n    flex: 1;\n    border-radius: 40px;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n  .top-box {\n    height: 60vh;\n  }\n  .play-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.01);\n    z-index: 100;\n  }\n  .cover {\n    height: 54vh;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .song-list-box {\n    scroll-behavior: smooth;\n    position: relative;\n    top: 0px;\n    max-height: 54vh;\n    overflow-x: auto;\n    transition: top 0.5s cubic-bezier(0.25, 1, 0.5, 1);\n    -webkit-transition: top 0.5s cubic-bezier(0.25, 1, 0.5, 1);\n  }\n  .heart-beat {\n    display: inline-block;\n    /* // 一个完整动画的持续时间 */\n    animation-duration: 1s;\n    /* // 动画循环次数：无限循环 */\n    animation-iteration-count: infinite;\n    /* // 调用的动画名，对应上面的 .heart-bounce */\n    animation-name: heart-bounce;\n  }\n  @keyframes heart-bounce {\n    from {\n      transform: scale(1);\n    }\n    12% {\n      transform: scale(1.02);\n    }\n    20% {\n      transform: scale(0.99);\n    }\n    28% {\n      transform: scale(0.98);\n    }\n    32% {\n      transform: scale(1.2);\n    }\n    38% {\n      transform: scale(0.96);\n    }\n    50% {\n      transform: scale(1);\n    }\n    58% {\n      transform: scale(0.98);\n    }\n    70% {\n      transform: scale(0.9);\n    }\n    80% {\n      transform: scale(0.98);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Lazy from \"svelte-lazy\";\n  import { push } from \"svelte-stack-router\";\n  import { StarSFill } from \"svelte-remixicon\";\n\n  import { imageURL } from \"../utils/common\";\n  import { isHomePageStore } from \"../store/common\";\n\n  export let songer = {};\n  export let coverSize = 200;\n\n  let useLoveSongerIds = [];\n\n  function gotoArtist() {\n    isHomePageStore.set(false);\n    push(`/artist?id=${songer.id}`);\n  }\n</script>\n\n<div class=\"singer\" on:click={gotoArtist}>\n  {#if useLoveSongerIds.includes(songer.id)}\n    <div class=\"star\">\n      <StarSFill size=\"14\" style=\"vertical-align: middle\" />\n    </div>\n  {/if}\n  <div class=\"cover\">\n    <Lazy height={100}>\n      <img src={imageURL(songer.img1v1Url, { size: coverSize })} alt=\"\" />\n    </Lazy>\n  </div>\n  <div class=\"name\">{songer.name}</div>\n</div>\n\n<style>\n  .singer {\n    padding: 10px 0;\n    text-align: center;\n    position: relative;\n  }\n  .star {\n    position: absolute;\n    left: 0;\n    top: 0;\n    color: var(--primary-text-color);\n  }\n  .cover img {\n    border-radius: 100%;\n    width: 100%;\n    height: 100%;\n  }\n  .name {\n    margin-top: 6px;\n    font-size: 12px;\n    height: 26px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n  import Lazy from 'svelte-lazy';\n  import { HeartFill } from 'svelte-remixicon';\n\n  import { isLoginStore } from '../store/common';\n  import { userLikedSongIdsStore } from '../store/user';\n  import { currentSongStore, isPlaying } from '../store/play';\n\n  import { ripple, songerListToStr, fullWidth, imageURL } from '../utils/common';\n\n  const dispatch = createEventDispatcher();\n\n  function setSongClick(index) {\n    dispatch('songClick', { index });\n  }\n\n  export let song = {};\n  export let index = 0;\n  export let customCoverUrl = null;\n\n  let songDom;\n\n  onMount(() => {\n    if (songDom) {\n      ripple(songDom);\n    }\n  });\n</script>\n\n<div\n  class=\"song\"\n  on:click={() => {\n    if (song.id === $currentSongStore.id) {\n      window.audioDOM.play();\n      isPlaying.set(true);\n    } else {\n      setSongClick(index);\n    }\n  }}\n  bind:this={songDom}\n>\n  <div class=\"love-span\">\n    {#if $isLoginStore && $userLikedSongIdsStore.includes(song.id)}\n      <HeartFill size=\"16\" style=\"vertical-align: middle\" />\n    {/if}\n  </div>\n  <div class=\"song-cover\">\n    <Lazy height={46}>\n      <img\n        class=\"img-song\"\n        src={imageURL(customCoverUrl ? customCoverUrl : song.al.picUrl, { width: 100 })}\n        alt=\"\"\n      />\n    </Lazy>\n    {#if song.id === $currentSongStore.id && $isPlaying}\n      <div class=\"song-play\">\n        <div class=\"pull_down pull_down1\" />\n        <div class=\"pull_down pull_down2\" />\n        <div class=\"pull_down pull_down3\" />\n        <div class=\"pull_down pull_down4\" />\n      </div>\n    {/if}\n    {#if song.id === $currentSongStore.id && !$isPlaying}\n      <div class=\"song-no-play\">\n        <div class=\"no_pull_down\" />\n        <div class=\"no_pull_down\" />\n        <div class=\"no_pull_down\" />\n        <div class=\"no_pull_down\" />\n      </div>\n    {/if}\n  </div>\n  <div class=\"song-info\" style=\"max-width:{fullWidth() - 72}px;\">\n    <div class=\"song-name\">\n      {song.name}\n      <span class=\"alia\">\n        {song.alia && song.alia.length > 0 ? `(${song.alia[0]})` : ''}\n      </span>\n    </div>\n    <div class=\"song-songer\">\n      {songerListToStr(song.ar)}\n      <span>{song.al.name === '' ? '' : `- ${song.al.name}`}</span>\n    </div>\n  </div>\n</div>\n\n<style>\n  .song {\n    font-size: 14px;\n    text-align: center;\n    align-items: center;\n    padding: 14px auto;\n    display: flex;\n    height: 60px;\n    justify-content: space-between;\n    border-bottom: 1px solid rgba(197, 197, 197, 0.3);\n    box-sizing: border-box;\n  }\n  .love-span {\n    color: var(--primary-text-color);\n    line-height: 20px;\n    text-align: center;\n    width: 20px;\n    height: 20px;\n  }\n  .song-cover {\n    width: 46px;\n    height: 46px;\n    margin-right: 6px;\n    border-radius: 4px;\n    overflow: hidden;\n    background-color: #fff;\n    box-sizing: border-box;\n  }\n  .img-song {\n    width: 100%;\n    object-fit: cover;\n  }\n  .song-play {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    top: -44px;\n    left: 4px;\n    z-index: 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 4px;\n  }\n  .song-play {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    top: -44px;\n    left: 4px;\n    z-index: 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 4px;\n  }\n  .song-no-play {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    top: -44px;\n    left: 4px;\n    z-index: 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 4px;\n  }\n  .no_pull_down {\n    flex: 1;\n    height: 6px;\n    margin: 0 1.2px;\n    background: #fff;\n    border-top: 1px solid var(--primary-text-color);\n  }\n  .pull_down {\n    flex: 1;\n    height: 30px;\n    margin: 0 1.2px;\n    background: #fff;\n    border-top: 1px solid var(--primary-text-color);\n  }\n  .pull_down1 {\n    -webkit-animation: jumpYa 0.8s infinite ease-in-out;\n    -o-animation: jumpYa 0.8s infinite ease-in-out;\n    animation: jumpYa 0.8s infinite ease-in-out;\n  }\n  .pull_down2 {\n    -webkit-animation: jumpYb 1.2s infinite ease-in-out;\n    -o-animation: jumpYb 1.2s infinite ease-in-out;\n    animation: jumpYb 1.2s infinite ease-in-out;\n  }\n  .pull_down3 {\n    -webkit-animation: jumpYc 1s infinite ease-in-out;\n    -o-animation: jumpYc 1s infinite ease-in-out;\n    animation: jumpYc 1s infinite ease-in-out;\n  }\n  .pull_down4 {\n    -webkit-animation: jumpYd 1.1s infinite ease-in-out;\n    -o-animation: jumpYd 1.1s infinite ease-in-out;\n    animation: jumpYd 1.1s infinite ease-in-out;\n  }\n  @keyframes jumpYa {\n    0% {\n      height: 20px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 20px;\n    }\n  }\n  @keyframes jumpYb {\n    0% {\n      height: 24px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 24px;\n    }\n  }\n  @keyframes jumpYc {\n    0% {\n      height: 30px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 30px;\n    }\n  }\n  @keyframes jumpYd {\n    0% {\n      height: 30px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 30px;\n    }\n  }\n  .song-info {\n    padding-top: 4px;\n    text-align: left;\n    flex: auto;\n  }\n  .song-name {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 18px;\n  }\n  .song-songer {\n    margin-top: 6px;\n    margin-bottom: 6px;\n    color: rgb(185, 185, 185);\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\n\n  import { ripple } from '../utils/common';\n\n  export let title = '首页';\n  export let desc = '暂无描述';\n  export let isRefresh = false; //是否刷新中\n  export let topTitleRightList = {};\n  const dispatch = createEventDispatcher();\n  function setClick(index) {\n    dispatch('IconClick', {\n      index,\n    });\n  }\n\n  let rightDoms;\n\n  onMount(() => {\n    if (rightDoms) {\n      ripple(rightDoms);\n    }\n    return () => {\n      rightDoms = null;\n    };\n  });\n  afterUpdate(() => {\n    if (rightDoms) {\n      ripple(rightDoms);\n    }\n  });\n</script>\n\n<div class=\"top-title\">\n  <div class=\"title\">\n    <h1>{title}<span class=\"desc\">&nbsp;&nbsp;&nbsp;{desc}</span></h1>\n  </div>\n  {#if topTitleRightList}\n    <div class=\"right\" bind:this={rightDoms}>\n      {#if topTitleRightList.type === 'icon'}\n        <span class:rotate-icon={isRefresh} on:click={() => setClick(0)}>\n          <svelte:component this={topTitleRightList.path} size=\"24\" />\n        </span>\n      {:else}\n        <span class=\"right-text\" on:click={() => setClick(0)}>{topTitleRightList.text}</span>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .rotate-icon {\n    display: inline-block;\n    -webkit-animation: myRotate 2s linear infinite;\n    animation: myRotate 2s linear infinite;\n  }\n  @keyframes myRotate {\n    0% {\n      transform: rotate(0deg);\n    }\n    50% {\n      transform: rotate(180deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  .top-title {\n    background-image: linear-gradient(#fff, #f4f4f4);\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n  }\n  .right-text {\n    display: inline-block;\n    font-size: 16px;\n    line-height: 32px;\n  }\n  .right {\n    font-size: 32px;\n    line-height: 36px;\n  }\n  h1 {\n    text-align: left;\n    font-size: 32px;\n    font-weight: bold;\n    margin: 0px;\n  }\n  .desc {\n    font-size: 12px;\n    font-weight: 400;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  import { ripple } from '../../utils/common';\n\n  export let type = 'default'; //primary\n  const dispatch = createEventDispatcher();\n  function setClick() {\n    dispatch('BtnClick');\n  }\n\n  let btnDom;\n\n  onMount(() => {\n    if (btnDom) {\n      ripple(btnDom);\n    }\n  });\n</script>\n\n<button\n  on:click={setClick}\n  class=\"botton\"\n  class:default={type === 'default'}\n  class:primary={type === 'primary'}\n  bind:this={btnDom}\n>\n  <slot />\n</button>\n\n<style>\n  .botton {\n    text-align: center;\n    align-items: center;\n    width: 100%;\n    margin: auto;\n    height: 46px;\n    line-height: 46px;\n    background: var(--primary-text-color);\n    color: #fff;\n    border-radius: 6px;\n    border: none;\n    font-size: 16px;\n    font-weight: bold;\n  }\n  .default {\n    background: var(--secondary-background-color);\n    color: var(--primary-text-color);\n  }\n  .primary {\n    background: var(--primary-text-color);\n    color: #fff;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { ArrowRightSLine } from 'svelte-remixicon';\n  import { ripple } from '../../utils/common';\n\n  import Switch from './Switch.svelte';\n\n  let cellDom;\n  export let title = '标题';\n  export let titleDesc = '';\n  export let arrow = false;\n  export let desc = '';\n  export let cellCheck = false;\n\n  const dispatch = createEventDispatcher();\n\n  onMount(() => {\n    if (cellDom) {\n      ripple(cellDom);\n    }\n  });\n  function cellClick() {\n    if (desc === 'Switch') {\n      cellCheck = !cellCheck;\n      dispatch('cellClick', {\n        cellCheck,\n      });\n    } else {\n      dispatch('cellClick');\n    }\n  }\n</script>\n\n<div class=\"cell\" on:click={cellClick} bind:this={cellDom}>\n  <div class=\"title\">\n    <div class=\"title-main\">{title}</div>\n    {#if titleDesc != ''}\n      <div class=\"title-des\">{titleDesc}</div>\n    {/if}\n  </div>\n  <div class=\"desc\">\n    <div class=\"desc-title\">\n      {#if desc === 'Switch'}\n        <div class=\"switch\" style=\"margin-top: {titleDesc === '' ? '2px' : '8.5px'};\">\n          <Switch check={cellCheck} />\n        </div>\n      {:else}\n        {desc}\n      {/if}\n    </div>\n  </div>\n  {#if arrow}\n    <div class=\"arrow\" style=\"line-height: {titleDesc === '' ? '26px' : '39px'};\">\n      <span style=\"position: relative; top: -1px;\">\n        <ArrowRightSLine size=\"20\" style=\"vertical-align: middle;\" />\n      </span>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .cell {\n    background-color: #fff;\n    font-size: 16px;\n    padding: 13px 10px;\n    border-radius: 8px;\n    display: flex;\n    margin: 10px auto;\n  }\n  .title {\n    flex: auto;\n  }\n  .title-main {\n    height: 26px;\n    line-height: 26px;\n  }\n  .title-des {\n    font-size: 10px;\n    color: #999;\n  }\n  .desc {\n    height: 26px;\n    flex: auto;\n    display: table;\n  }\n  .desc-title {\n    vertical-align: middle;\n    display: table-cell;\n    text-align: right;\n    color: #666;\n    margin: 2px auto;\n  }\n  .switch {\n    margin-top: 2px;\n    height: 22px;\n  }\n  .arrow {\n    height: 26px;\n    line-height: 26px;\n    width: 20px;\n  }\n</style>\n",
    "<div class=\"diveder\" />\n\n<style>\n  .diveder {\n    margin: 5px auto;\n    height: 1px;\n    background-color: rgba(197, 197, 197, 0.3);\n  }\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  export let label = 'label';\n  export let type = 'text';\n  export let maxlength = 15;\n  export let placeholder = null;\n  export let value = '';\n  export let rightBtn = false;\n  export let btnText = '获取验证码';\n  $: defatltPlaceholder = '请输入' + label;\n  let inputDom;\n\n  const dispatch = createEventDispatcher();\n\n  onMount(() => {\n    setTimeout(function () {\n      inputDom.scrollIntoView(true);\n      inputDom.scrollIntoViewIfNeeded();\n    }, 300);\n    inputDom.type = type;\n  });\n  function setInput() {\n    dispatch('setInput', {\n      value,\n    });\n  }\n  function btnClick() {\n    dispatch('setBtn');\n  }\n</script>\n\n<div class=\"box\">\n  <div class=\"label\">{label}</div>\n  <input\n    bind:value\n    bind:this={inputDom}\n    {maxlength}\n    on:input={setInput}\n    placeholder={placeholder ? placeholder : defatltPlaceholder}\n    style=\"width:{rightBtn ? '75%' : '100%'}\"\n  />\n  {#if rightBtn}\n    <span class=\"right-btn\" on:click={btnClick}>{btnText}</span>\n  {/if}\n</div>\n\n<style>\n  .right-btn {\n    font-size: 10px;\n    border-radius: 4px;\n    border: 1px solid rgb(182, 182, 182);\n    line-height: 24px;\n    padding: 0 4px;\n    float: right;\n  }\n  .box {\n    width: 80%;\n    margin: auto;\n    padding: 14px;\n    overflow: hidden;\n  }\n  .label {\n    font-size: 14px;\n    margin-bottom: 6px;\n    color: rgb(139, 139, 139);\n  }\n  input {\n    padding: 0;\n    box-shadow: none;\n    outline: none;\n    -webkit-appearance: none;\n    border-radius: 0;\n    font-size: 18px;\n    line-height: 24px;\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    width: 100%;\n    background: none;\n    border-bottom: 1px solid var(--secondary-dark-text-color);\n  }\n  input::-webkit-input-placeholder {\n    font-size: 16px;\n  }\n  input:focus {\n    box-shadow: none;\n    outline: none;\n    -webkit-appearance: none;\n    border-radius: 0;\n    border-bottom: 1px solid var(--primary-text-color);\n  }\n</style>\n",
    "<script>\n  import { pop } from 'svelte-stack-router';\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\n  import { ArrowLeftLine } from 'svelte-remixicon';\n\n  import { ripple } from '../../utils/common';\n\n  export let title = 'Title';\n  export let leftEvent = false;\n  export let transparent = false;\n  export let fixed = true;\n  export let alphaNumber = 1;\n  export let dark = false;\n  export let rightIcons = [];\n  export let isRefresh = false; //是否刷新中\n\n  let leftDom;\n  let rightDoms;\n\n  onMount(() => {\n    if (leftDom) ripple(leftDom);\n    if (rightDoms) {\n      ripple(rightDoms);\n    }\n    return () => {\n      rightDoms = null;\n    };\n  });\n\n  afterUpdate(() => {\n    if (rightDoms) {\n      ripple(rightDoms, true);\n    }\n  });\n\n  const dispatch = createEventDispatcher();\n\n  function setLeftClick() {\n    dispatch('setLeftClick');\n  }\n  function iconClick(id) {\n    dispatch('setRightIconClick', { id });\n  }\n</script>\n\n<div\n  class=\"nav secondary\"\n  style=\"background-color:rgba(255, 255, 255, {transparent ? alphaNumber : 1})\"\n  class:transparent\n  class:fixed={transparent ? true : fixed}\n>\n  <div\n    bind:this={leftDom}\n    class=\"left\"\n    style=\"color:rgba({transparent ? 255 * (1 - alphaNumber) : 0}, {transparent\n      ? 255 * (1 - alphaNumber)\n      : 0}, {transparent ? 255 * (1 - alphaNumber) : 0}, 1)\"\n    class:transparent\n    on:click={() => {\n      if (leftEvent) {\n        setLeftClick();\n      } else {\n        pop();\n      }\n    }}\n  >\n    <ArrowLeftLine size=\"22\" style=\"vertical-align: middle\" />\n  </div>\n  <div\n    class=\"center\"\n    class:dark\n    style=\"color:rgba({transparent ? 255 * (1 - alphaNumber) : 0}, {transparent\n      ? 255 * (1 - alphaNumber)\n      : 0}, {transparent ? 255 * (1 - alphaNumber) : 0}, 1)\"\n  >\n    {title}\n  </div>\n  <div class=\"right\" bind:this={rightDoms}>\n    {#if rightIcons.length > 0}\n      {#each rightIcons as rightIcon}\n        <div class=\"right-item\" on:click={() => iconClick(rightIcon.id)}>\n          <span class:rotate-icon={rightIcon.id === 'RefreshLine' && isRefresh}>\n            <svelte:component this={rightIcon.icon} size=\"22\" style=\"vertical-align: middle\" />\n          </span>\n        </div>\n      {/each}\n    {/if}\n  </div>\n</div>\n\n<style>\n  .rotate-icon {\n    display: inline-block;\n    -webkit-animation: myRotate 2s linear infinite;\n    animation: myRotate 2s linear infinite;\n  }\n  @keyframes myRotate {\n    0% {\n      transform: rotate(0deg);\n    }\n    50% {\n      transform: rotate(180deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  .dark {\n    color: #fff;\n  }\n  .transparent {\n    background-color: transparent;\n  }\n  .fixed {\n    position: fixed;\n    top: 0;\n  }\n  .nav {\n    width: 100%;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    height: 50px;\n    font-size: 16px;\n    line-height: 50px;\n    z-index: 99;\n    background-color: #fff;\n  }\n  .left {\n    height: 50px;\n    line-height: 50px;\n    flex: 1;\n  }\n  .center {\n    line-height: 50px;\n    text-align: left;\n    flex: 5;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  .right {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n  }\n  .right-item {\n    flex: 1;\n    height: 50px;\n    line-height: 50px;\n    padding: 0 10px;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let bottomHeight = 0; //距离底部的距离临界值开始刷新\n  export let items = [];\n  export let paginationHeight = 0;\n  export let hasMore = true;\n  export let grid = 1;\n  let paginationDom;\n  let paginationBoxDom;\n\n  // 加载更多触发器 默认隐藏\n  const dispatch = createEventDispatcher();\n\n  // 加载更多触发器 事件\n  let loadData = function () {\n    if (!items || items.length == 0) return;\n    // 变量scrollTop是滚动条滚动时，滚动条上端距离顶部的距离\n    const scrollTop = paginationBoxDom.scrollTop;\n    //变量windowHeight是可视区的高度\n    const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\n    //变量scrollHeight是滚动条的总高度（当前可滚动的页面的总高度）\n    const scrollHeight = paginationDom.scrollHeight;\n    // 滚动条到底部;\n    if (scrollTop + windowHeight + bottomHeight >= scrollHeight) {\n      dispatch('load');\n    }\n  };\n  //防抖\n  function debounce(fn, delay) {\n    let timer = null;\n    return function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        //模拟触发change事件\n        fn.apply(this, arguments);\n        // 清空计时器\n        timer = null;\n      }, delay);\n    };\n  }\n  // 节流\n  function throttle(fn, delay = 50) {\n    let timer = null;\n    return function () {\n      if (timer) {\n        return;\n      }\n      timer = setTimeout(() => {\n        fn.apply(this, arguments);\n        timer = null;\n      }, delay);\n    };\n  }\n</script>\n\n<!-- 加载更多触发器 - end -->\n<div\n  class=\"pagination-box\"\n  style=\"height:{paginationHeight}px\"\n  on:scroll={throttle(debounce(loadData, 500))}\n  bind:this={paginationBoxDom}\n>\n  <div bind:this={paginationDom}>\n    {#if items.length > 0}\n      {#if grid > 1}\n        <div class=\"grid-box\" style=\"grid-template-columns: repeat({grid}, {300 / grid}px);\">\n          {#each items as item, index}\n            <slot {item} {index} />\n          {/each}\n        </div>\n      {:else}\n        {#each items as item, index}\n          <slot {item} {index} />\n        {/each}\n      {/if}\n    {/if}\n  </div>\n  {#if hasMore}\n    <div class=\"no-more\">\n      <div>\n        <embed width=\"40\" height=\"40\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\n      </div>\n      <span class=\"no-more-text\">😤 别急啊，在加载了...</span>\n    </div>\n  {:else}\n    <div class=\"no-more no-more-text\">😤 别滑了，到底啦！</div>\n  {/if}\n</div>\n\n<style>\n  .pagination-box {\n    overflow-y: auto;\n    padding-top: 10px;\n  }\n  .pagination-box:global(::-webkit-scrollbar) {\n    width: 0 !important;\n  }\n  .no-more {\n    margin: 20px;\n    text-align: center;\n  }\n  .no-more-text {\n    color: #888;\n  }\n  .grid-box {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(1, 300px);\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  import Divider from \"./Divider.svelte\";\n\n  export let list = [];\n  export let title = \"请选择\";\n  export let isShow = false;\n\n  const dispatch = createEventDispatcher();\n\n  function liClickFun(index, item) {\n    dispatch(\"PickerClick\", {\n      index,\n      item,\n    });\n  }\n  function changeShowFun() {\n    isShow = false;\n    dispatch(\"ChangeShow\", {\n      isShow,\n    });\n  }\n</script>\n\n<div class=\"pick-mask\" on:click={changeShowFun} style=\"display: {isShow ? 'block' : 'none'};\">\n  <div class=\"pick\" style=\"bottom:{isShow ? '0px' : '-350px'}\">\n    <div class=\"btn\">\n      <!-- <div class=\"btn-item btn-left\">取消</div> -->\n      <div class=\"btn-item btn-center\">{title}</div>\n      <!-- <div class=\"btn-item btn-right\">确定</div> -->\n    </div>\n    <Divider />\n    <div class=\"roller\">\n      {#each list as l, i}\n        <div class=\"li\" on:click={() => liClickFun(i, l)}>{l.name}</div>\n      {/each}\n    </div>\n  </div>\n</div>\n\n<style>\n  .pick-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2000;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n  .pick {\n    font-size: 16px;\n    position: fixed;\n    bottom: 0px;\n    z-index: 2001;\n    background-color: #fff;\n    max-height: 250px;\n    width: 100%;\n    padding-bottom: 20px;\n  }\n  .btn {\n    height: 39px;\n    line-height: 39px;\n    display: flex;\n  }\n  .btn-item {\n    flex: 1;\n    padding: 10px;\n    color: var(--primary-text-color);\n  }\n  .btn-center {\n    text-align: center;\n    color: #777;\n  }\n\n  .roller {\n    overflow-y: scroll;\n    max-height: 200px;\n    width: 100%;\n    padding: 10px;\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .li {\n    background-color: #eeeeee;\n    line-height: 24px;\n    font-size: 12px;\n    margin: 4px 8px 4px 0;\n    padding: 4px 8px;\n    border-radius: 4px;\n  }\n</style>\n",
    "<script>\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n\n  export let min = 0;\n  export let max = 100;\n  export let step = 1;\n  export let current = 0;\n  export let timeCurrent = 0;\n  let currentLong = 0;\n  let slider;\n  let scale = 0;\n  let movePoint = 20;\n\n  const dispatch = createEventDispatcher();\n\n  onMount(() => {\n    scale = slider.clientWidth / (max / step);\n  });\n  afterUpdate(() => {\n    currentLong = current;\n  });\n  function setCurrent() {\n    dispatch('setCurrent', {\n      current,\n    });\n  }\n  function setTimeCurrent() {\n    dispatch('setTimeCurrent', {\n      timeCurrent,\n    });\n  }\n  function handleClick(e) {\n    const distance = e.clientX - slider.getBoundingClientRect().left;\n    const value = Math.round(distance / scale) * step;\n    current = currentLong = value;\n    setCurrent();\n  }\n  function touchStart(e) {\n    movePoint = e.changedTouches[0].clientX;\n  }\n  function touchEnd(e) {\n    movePoint = e.changedTouches[0].clientX;\n    if (movePoint <= 20) {\n      current = timeCurrent = currentLong = min;\n    } else if (movePoint >= 355) {\n      current = timeCurrent = currentLong = max;\n    } else {\n      current = timeCurrent = currentLong = ((movePoint - 20) / 335) * 100;\n    }\n    setCurrent();\n    setTimeCurrent();\n  }\n  function touchMove(e) {\n    movePoint = e.changedTouches[0].clientX;\n    if (movePoint <= 20) {\n      timeCurrent = currentLong = min;\n    } else if (movePoint >= 355) {\n      timeCurrent = currentLong = max;\n    } else {\n      timeCurrent = currentLong = ((movePoint - 20) / 335) * 100;\n    }\n    setTimeCurrent();\n  }\n</script>\n\n<div\n  bind:this={slider}\n  class=\"slider\"\n  on:click={handleClick}\n  on:touchstart={touchStart}\n  on:touchmove={touchMove}\n  on:touchend={touchEnd}\n>\n  <div class=\"rail\">\n    <div class=\"ball\" style=\"left:calc({(currentLong / max) * 100}% - 7px)\" />\n    <div class=\"fill\" style=\"transform:scaleX({currentLong / max})\" />\n  </div>\n</div>\n\n<style>\n  .slider {\n    position: relative;\n    width: 100%;\n    height: 20px;\n    display: flex;\n    align-items: center;\n  }\n  .rail {\n    width: 100%;\n    height: 4px;\n    overflow: hidden;\n    border-radius: 2px;\n    background: rgba(255, 255, 255, 0.4);\n  }\n  .fill {\n    width: 100%;\n    height: 4px;\n    border-radius: 2px;\n    background: #fff;\n    transform: scaleX(0);\n    transform-origin: left;\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n  }\n  .ball {\n    width: 14px;\n    height: 14px;\n    border-radius: 10px;\n    background: #fff;\n    position: absolute;\n    top: calc(50% - 7px);\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { CheckboxBlankCircleLine, RadioButtonLine } from \"svelte-remixicon\";\n\n  export let radioData = [];\n  export let active = 0;\n\n  const dispatch = createEventDispatcher();\n\n  function selectFun(index) {\n    active = index;\n    dispatch(\"RadioClick\", { active });\n  }\n</script>\n\n<div class=\"box\">\n  {#each radioData as item, i}\n    <div class=\"item\" on:click={() => selectFun(i)}>\n      <div class=\"left\">\n        {#if active === i}\n          <RadioButtonLine size=\"20\" color=\"var(--primary-text-color)\" style=\"vertical-align: middle;\" />\n        {:else}\n          <CheckboxBlankCircleLine size=\"20\" color=\"rgb(214, 214, 214)\" style=\"vertical-align: middle;\" />\n        {/if}\n      </div>\n      <div class=\"text\">\n        {item.text}\n        <div class=\"desc\">{item.desc}</div>\n      </div>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .box {\n    background-color: #fff;\n    font-size: 16px;\n    border-radius: 8px;\n    padding: 20px 10px 1px;\n    margin: 20px auto;\n  }\n  .item {\n    margin-bottom: 20px;\n    display: flex;\n  }\n  .left {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n  }\n  .text {\n    line-height: 20px;\n  }\n  .desc {\n    font-size: 10px;\n    color: #b8b8b8;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let check = false;\n  const dispatch = createEventDispatcher();\n  function setChange() {\n    dispatch('switchClick', {\n      check: !check,\n    });\n  }\n</script>\n\n<div\n  class=\"box\"\n  on:click={setChange}\n  style=\"background-color:{check ? 'var(--primary-text-color)' : 'rgb(177, 177, 177)'}\"\n>\n  <div class=\"ball\" style=\"left: {check ? '25px' : '1px'};\" />\n</div>\n\n<style>\n  .box {\n    display: inline-block;\n    width: 46px;\n    height: 22px;\n    background-color: rgb(177, 177, 177);\n    position: relative;\n    border-radius: 11px;\n    transition: all 0.3s ease;\n    -webkit-transition: all 0.3s ease;\n  }\n  .ball {\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    background-color: #fff;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    transition: all 0.3s ease;\n    -webkit-transition: all 0.3s ease;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { ThumbUpFill, Compass3Fill, AccountCircleFill } from 'svelte-remixicon';\n\n  import { ripple } from '../../utils/common';\n  import { isHomePageStore, tabbarActive } from '../../store/common';\n\n  const navDatas = [\n    {\n      icon: ThumbUpFill,\n      text: '推荐',\n      path: '/love',\n    },\n    {\n      icon: Compass3Fill,\n      text: '发现',\n      path: '/discover',\n    },\n    {\n      icon: AccountCircleFill,\n      text: '我的',\n      path: '/mine',\n    },\n  ];\n  let tabDoms = [];\n  onMount(() => {\n    if (tabDoms.length > 0) {\n      for (let r = 0; r < tabDoms.length; r++) {\n        ripple(tabDoms[r]);\n      }\n    }\n  });\n</script>\n\n<div class=\"secondary nav\" style=\"bottom: {$isHomePageStore ? '0px' : 'calc(-55px - env(safe-area-inset-bottom))'};\">\n  {#each navDatas as navData, i}\n    <div\n      class=\"nav-item\"\n      class:active={$tabbarActive === i}\n      on:click={() => {\n        tabbarActive.set(i);\n      }}\n      bind:this={tabDoms[i]}\n    >\n      <div>\n        <svelte:component this={navData.icon} size=\"24px\" />\n      </div>\n      <div class=\"nav-text\">{navData.text}</div>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .nav {\n    z-index: 599;\n    border-top: 1px solid rgba(197, 197, 197, 0.4);\n    width: 100%;\n    height: 55px;\n    position: fixed;\n    bottom: 0px;\n    display: flex;\n    text-align: center;\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n    transition: all 0.4s ease-in-out;\n    -webkit-transition: all 0.4s ease-in-out;\n  }\n  .nav-item {\n    display: block;\n    font-size: 12.8px;\n    padding: 6.4px 0 9.6px;\n    flex: 1;\n  }\n  .nav-text {\n    margin-top: 3.2px;\n  }\n  .active {\n    color: var(--primary-text-color);\n  }\n</style>\n",
    "<script>\n  export let tipTextList = \"\";\n</script>\n\n<div>\n  {#each tipTextList as tipText}\n    <div class=\"tip\">{tipText}</div>\n  {/each}\n</div>\n\n<style>\n  .tip {\n    font-size: 12px;\n    color: rgb(141, 141, 141);\n    text-align: justify;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\n  import { ArrowRightSLine } from 'svelte-remixicon';\n\n  import { ripple } from '../../utils/common';\n\n  export let title = 'Title';\n  export let isShowRight = false;\n  export let iconText = '更多';\n  let titleDom;\n  const dispatch = createEventDispatcher();\n  function setTitleClick() {\n    dispatch('TitleClick');\n  }\n</script>\n\n<div class=\"title\" on:click={setTitleClick} bind:this={titleDom}>\n  <div>{title}</div>\n  {#if isShowRight}\n    <div class=\"title-right\">\n      {iconText}\n      <span class=\"title-icon\">\n        <ArrowRightSLine size=\"24\" style=\"vertical-align: middle;\" />\n      </span>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .title-right {\n    line-height: 24px;\n    border-radius: 10px;\n    font-size: 14px;\n    color: #666;\n    height: 24px;\n    text-align: center;\n    margin-right: 20px;\n  }\n  .title {\n    text-align: left;\n    margin-left: 20px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-between;\n  }\n  .title-icon {\n    position: relative;\n    top: -2px;\n  }\n</style>\n",
    "<script>\n  import md from '../../README.md';\n  import { NavBar } from '../components/base';\n</script>\n\n<NavBar title=\"关于\" />\n<div class=\"about\">\n  <div id=\"markdown\">{@html md}</div>\n</div>\n\n<style>\n  .about {\n    padding: 50px 0px 70px;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { onResume } from \"svelte-stack-router\";\n\n  import Songer from \"../components/Singer.svelte\";\n  import { NavBar } from \"../components/base\";\n\n  import { defaultResumableStore } from \"../store/common\";\n\n  import { likedArtists } from \"../api/user\";\n\n  $: collectSongers = [];\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      likedArtistsFun();\n    }\n  });\n  onMount(() => {\n    likedArtistsFun();\n  });\n  //获取收藏的歌手\n  async function likedArtistsFun() {\n    const res = await likedArtists({ limit: 2000 });\n    if (res.code === 200) {\n      collectSongers = res.data;\n    }\n  }\n</script>\n\n<NavBar title=\"收藏的歌手\" />\n<div class=\"page\">\n  {#if collectSongers.length > 0}\n    <div class=\"songer-box\">\n      {#each collectSongers as songer}\n        <Songer {songer} coverSize={200} />\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .songer-box {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(4, 75px);\n    padding: 0 20px;\n  }\n  .page {\n    font-size: 16px;\n    padding: 50px 0px 70px;\n  }\n</style>\n",
    "<script>\n  import { onMount, afterUpdate } from \"svelte\";\n  import Lazy from \"svelte-lazy\";\n  import { push, onResume, search } from \"svelte-stack-router\";\n  import {\n    PlayCircleLine,\n    ChatHeartFill,\n    ChatHeartLine,\n  } from \"svelte-remixicon\";\n\n  import { NavBar, Title, Button } from \"../components/base\";\n  import SongList from \"../components/SongList.svelte\";\n\n  import {\n    defaultResumableStore,\n    isLoginStore,\n    currentDetailSongerIdStore,\n    coverImgUrlStore,\n    defaultCover,\n  } from \"../store/common\";\n  import {\n    currentSongStore,\n    isPlaying,\n    currentPlayListStore,\n    currentSongIndexStore,\n    isFMPlaying,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n\n  import { getSongerDetail, getSongerTop, followAArtist } from \"../api/songer\";\n  import { getSongUrl } from \"../api/song\";\n  import { formatURL, parseQuery, imageURL } from \"../utils/common\";\n\n  const { id } = parseQuery($search);\n\n  $: coverImgUrl = defaultCover;\n  $: name = \"--\";\n  $: description = \"暂无描述\";\n  $: mvSize = 0;\n  $: musicSize = 0;\n  $: albumSize = 0;\n  $: hotSongs = [];\n  $: collect = false;\n  $: currentSongerId = id; //当前歌手 ID，用于计算更新页面\n\n  onResume(() => {\n    const { id } = parseQuery($search);\n    currentSongerId = id;\n    if (!$defaultResumableStore) {\n      allMount();\n    }\n  });\n  onMount(() => {\n    allMount();\n  });\n  // afterUpdate(() => {\n  //   if (currentSongerId !== $currentDetailSongerIdStore) {\n  //     allMount();\n  //   }\n  // });\n  function allMount() {\n    getSongerDetailFun();\n    getSongerTopFun();\n    if ($isLoginStore) {\n      const ids = JSON.parse(localStorage.getItem(\"useLoveSongerIds\"));\n      collect = ids.includes($currentDetailSongerIdStore);\n    } else {\n      collect = false;\n    }\n  }\n  async function getSongerDetailFun() {\n    const res = await getSongerDetail(currentSongerId);\n    if (res.code === 200) {\n      name = res.data.artist.name;\n      coverImgUrl = res.data.user\n        ? res.data.user.avatarUrl\n        : res.data.artist.cover;\n      description = res.data.artist.briefDesc;\n      mvSize = res.data.artist.mvSize;\n      musicSize = res.data.artist.musicSize;\n      albumSize = res.data.artist.albumSize;\n    }\n  }\n  async function getSongerTopFun() {\n    const res = await getSongerTop(currentSongerId);\n    if (res.code === 200) {\n      hotSongs = res.songs;\n    }\n  }\n  function toDescFun() {\n    if (description != \"\") {\n      push(\"/songerDesc?\" + $currentDetailSongerIdStore);\n    }\n  }\n  function playListFun(index) {\n    playRepeatModelStore.set(\"repeat\");\n    isFMPlaying.set(false);\n    localStorage.setItem(\"isFMPlay\", \"0\");\n    currentPlayListStore.set(hotSongs);\n    let ids = [];\n    for (let r = 0; r < hotSongs.length; r++) {\n      ids.push(hotSongs[r].id);\n    }\n    localStorage.setItem(\"localPlayList\", JSON.stringify(ids));\n    currentSongIndexStore.set(index);\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n  }\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        currentSongStore.set(song);\n        localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n      } else {\n        Toast(\n          `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n          2000\n        );\n      }\n    }\n  }\n  async function loveSongerFun() {\n    const res = await followAArtist({\n      id: $currentDetailSongerIdStore,\n      t: collect ? 0 : 1,\n    });\n    if (res.code === 200) {\n      const ids = JSON.parse(localStorage.getItem(\"useLoveSongerIds\"));\n      if (collect) {\n        let i = ids.indexOf(Number($currentDetailSongerIdStore));\n        ids.splice(i, 1);\n      } else {\n        ids.unshift(Number($currentDetailSongerIdStore));\n      }\n      localStorage.setItem(\"useLoveSongerIds\", JSON.stringify(ids));\n      collect = !collect;\n    }\n  }\n</script>\n\n<NavBar title={name} dark={true} />\n<div class=\"page\">\n  <div class=\"cover-box\">\n    <div class=\"cover-bg\">\n      <div class=\"cover\">\n        <Lazy height={140}>\n          <img\n            class=\"img-cover\"\n            src={imageURL(coverImgUrl, { size: 400 })}\n            alt=\"\"\n          />\n        </Lazy>\n      </div>\n      <div class=\"info\">\n        <div class=\"name\">{name}</div>\n        <div class=\"song-count\">\n          {musicSize} 首歌 • {albumSize} 张专辑 • {mvSize} 个 MV\n        </div>\n        <div class=\"desc\" on:click={toDescFun}>{description}</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"btn\">\n    <div class=\"play\">\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\n        <span class=\"icon\">\n          <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\n        </span>\n        播放全部\n      </Button>\n    </div>\n    {#if $isLoginStore}\n      <div class=\"random\">\n        <Button\n          type={collect ? \"default\" : \"primary\"}\n          on:BtnClick={loveSongerFun}\n        >\n          <span class=\"icon\">\n            {#if collect}\n              <ChatHeartLine size=\"20\" style=\"vertical-align: middle\" />\n            {:else}\n              <ChatHeartFill size=\"20\" style=\"vertical-align: middle\" />\n            {/if}\n          </span>\n          {collect ? \"取消收藏\" : \"收藏歌手\"}\n        </Button>\n      </div>\n    {/if}\n  </div>\n  <div>\n    <Title\n      title={`热门 ${hotSongs.length} 首`}\n      isShowRight={hotSongs.length === 50}\n      on:TitleClick={() => {\n        coverImgUrlStore.set(formatURL(coverImgUrl));\n        push(\"/moreSong?name=\" + name + \"&id=\" + currentSongerId);\n      }}\n    />\n    <SongList songList={hotSongs} />\n  </div>\n</div>\n\n<style>\n  .icon {\n    position: relative;\n    top: -2px;\n  }\n  .btn {\n    width: 100%;\n    display: flex;\n    margin-top: 10px;\n  }\n  .play {\n    padding: 0px 10px 10px 20px;\n    flex: 1;\n  }\n  .random {\n    padding: 0px 20px 10px 20px;\n    flex: 1;\n  }\n  .page {\n    padding: 50px 0 70px;\n    font-size: 16px;\n  }\n  .cover-box {\n    padding: 0 20px;\n  }\n  .cover-bg {\n    font-size: 12px;\n    padding: 20px 0px;\n    display: flex;\n  }\n  .cover {\n    width: 150px;\n    height: 150px;\n    border-radius: 150px;\n    overflow: hidden;\n    flex: 0 0 150px;\n    background-color: #fff;\n  }\n  .img-cover {\n    border-radius: 6px;\n    width: 150px;\n    height: 150px;\n    object-fit: cover;\n  }\n  .info {\n    padding-top: 6px;\n    margin-left: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  .name {\n    font-size: 24px;\n    max-width: 192px;\n    font-weight: bold;\n  }\n  .song-count {\n    font-size: 12px;\n  }\n  .desc {\n    padding: 10px 0;\n    font-size: 12px;\n    max-height: 57px;\n    text-align: justify;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 5;\n    color: rgb(116, 116, 116);\n  }\n</style>\n",
    "<script>\n  import { NavBar, Radio, Tip } from \"../components/base\";\n\n  import { musicQualityStore } from \"../store/common\";\n\n  let radioData = [\n    { text: \"普通\", desc: \"128K\" },\n    { text: \"较高\", desc: \"192K\" },\n    { text: \"极高\", desc: \"320K\" },\n    { text: \"无损\", desc: \"FLAC\" },\n  ];\n  let tipTextList = [\n    \"提示：\",\n    \"1、音质越高相对应所需流量也越高。FLAC 格式对网络要求较高，一首歌曲文件几十 M 甚至超过 100M。\",\n    \"2、一般来说，达到较高音质（192K）非专业设备就已经听不出差距了，如果用的是普通蓝牙耳机，那就更没必要开启高音质了。\",\n    \"3、若当前账号无法播放高音质，或音乐资源无当前音质，将自动匹配下一级别音质。\",\n    \"4、所选音质将在下一次切换歌曲生效。\",\n  ];\n  let active = Number($musicQualityStore);\n\n  function getActiveFun(e) {\n    musicQualityStore.set(e.detail.active.toString());\n    localStorage.setItem(\"musicQuality\", e.detail.active.toString());\n  }\n</script>\n\n<NavBar title=\"播放音质\" />\n<div class=\"br-page\">\n  <Radio {radioData} on:RadioClick={getActiveFun} {active} />\n  <Tip {tipTextList} />\n</div>\n\n<style>\n  .br-page {\n    padding: 50px 20px 70px;\n    font-size: 16px;\n  }\n</style>\n",
    "<script>\n  import { onMount, afterUpdate } from \"svelte\";\n  import { search } from \"svelte-stack-router\";\n  import { ThumbUpLine, ThumbUpFill } from \"svelte-remixicon\";\n\n  import { isLoginStore } from \"../store/common\";\n  import { getHotComment, likeComment } from \"../api/song\";\n  import { NavBar, Divider, Pagination } from \"../components/base\";\n  import {\n    formatTime,\n    Toast,\n    tranNumber,\n    emojiToImg,\n    imageURL,\n    parseQuery,\n  } from \"../utils/common\";\n\n  $: totalCount = 0;\n  $: hotComments = [];\n  $: currentSongId = 0; //当前歌曲 ID，用于计算更新页面\n  $: hasMore = true;\n  $: offset = 0;\n  $: paginationHeight = 0;\n\n  onMount(() => {\n    const { id } = parseQuery($search);\n    currentSongId = id;\n    paginationHeight =\n      document.documentElement.clientHeight || document.body.clientHeight - 120;\n    getHotCommentFun(0);\n  });\n  afterUpdate(() => {\n    const { id } = parseQuery($search);\n    if (id && currentSongId !== id) {\n      currentSongId = id;\n      hotComments = [];\n      offset = 0;\n      hasMore = true;\n      getHotCommentFun(offset);\n    }\n  });\n  async function getHotCommentFun(offset) {\n    console.debug('getHotCommentFun', currentSongId)\n    const res = await getHotComment(currentSongId, offset);\n    if (res.code === 200) {\n      totalCount = res.total;\n      hotComments = hotComments.concat(res.hotComments);\n      hasMore = res.hasMore;\n      // 去除云村编辑部的广告\n      hotComments = hotComments.filter(\n        (item) => item.user.nickname !== \"云村评论编辑部\"\n      );\n      for (let r = 0; r < hotComments.length; r++) {\n        //处理 emoji 表情显示\n        hotComments[r].content = emojiToImg(hotComments[r].content);\n      }\n    }\n  }\n  //\n  async function commentClickFun(commentId, liked) {\n    if (!$isLoginStore) return Toast(\"请登录\");\n    const res = await likeComment(currentSongId, commentId, 0, liked ? 0 : 1);\n    if (res.code === 200) {\n      for (let y = 0; y < hotComments.length; y++) {\n        if (hotComments[y].commentId === commentId) {\n          hotComments[y].liked = !liked;\n        }\n      }\n    }\n  }\n</script>\n\n<NavBar title={`热门评论（${totalCount || 0}）`} />\n<div class=\"comment-page\">\n  <Pagination\n    bottomHeight={70}\n    {paginationHeight}\n    items={hotComments}\n    let:item\n    let:index\n    {hasMore}\n    on:load={() => {\n      if (hasMore) {\n        offset = hotComments.length;\n        getHotCommentFun(offset);\n      }\n    }}\n  >\n    <div>\n      <div class=\"comment\">\n        <!-- <div class=\"floor\">{index + 1}楼</div> -->\n        <div class=\"top\">\n          <div class=\"user\">\n            <div class=\"cover\">\n              <img src={imageURL(item.user.avatarUrl, { size: 50 })} alt=\"\" />\n            </div>\n            <div class=\"info\">\n              <div class=\"name\">\n                {item.user.nickname}\n                {#if item.user.authStatus === 1}\n                  <span class=\"vip\">\n                    <img class=\"authStatus\" src=\"/images/auth.png\" alt=\"\" />\n                  </span>\n                {/if}\n                {#if item.user.vipType !== 0}\n                  <span class=\"vip\">\n                    <img\n                      class=\"cvip\"\n                      src={`/images/vip/${item.user.vipRights.redVipLevel}.png`}\n                      alt=\"\"\n                    />\n                  </span>\n                {/if}\n              </div>\n              <div class=\"time\">\n                {formatTime(item.time, \"yyyy-MM-dd hh:mm:ss\")}\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"like\"\n            on:click={() => commentClickFun(item.commentId, item.liked)}\n            style=\"color:{item.liked ? 'var(--primary-text-color)' : '#666'}\"\n          >\n            <span class=\"liked-span\">\n              {#if item.liked}\n                <ThumbUpFill\n                  size=\"12\"\n                  style=\"vertical-align: middle;margin-left:4px;\"\n                />\n              {:else}\n                <ThumbUpLine\n                  size=\"12\"\n                  style=\"vertical-align: middle;margin-left:4px\"\n                />\n              {/if}\n            </span>{tranNumber(item.likedCount)}\n          </div>\n        </div>\n        <div class=\"content\">\n          {@html item.content}\n          {#if item.beReplied && item.beReplied.length > 0}\n            <div class=\"beReplied\">\n              @ {item.beReplied[0].user.nickname}：{item.beReplied[0].content}\n            </div>\n          {/if}\n        </div>\n      </div>\n      <Divider />\n    </div>\n  </Pagination>\n</div>\n\n<style>\n  .cvip {\n    width: 29.1667px;\n    height: 10px;\n  }\n  .authStatus {\n    width: 10px;\n    height: 10px;\n  }\n  .beReplied {\n    color: #8a8a8a;\n    font-size: 10px;\n    padding: 4px;\n    margin-top: 4px;\n    border-radius: 4px;\n    background-color: #ebebeb;\n  }\n  .comment-page {\n    padding: 50px 10px 70px;\n    font-size: 16px;\n    color: #333333;\n  }\n  .comment {\n    margin: 20px auto;\n  }\n  .top {\n    display: flex;\n    justify-content: space-between;\n  }\n  .cover {\n    width: 30px;\n    height: 30px;\n    border-radius: 15px;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n  .cover img {\n    width: 100%;\n  }\n  .user {\n    display: flex;\n    justify-content: flex-start;\n    font-size: 12px;\n  }\n  .info {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  .time {\n    font-size: 10px;\n    color: #888;\n  }\n  .like {\n    color: #666;\n    font-size: 12px;\n    line-height: 30px;\n  }\n  .liked-span {\n    position: relative;\n    top: -2px;\n  }\n  .content {\n    text-align: justify;\n    margin-top: 10px;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { push } from 'svelte-stack-router';\n  import { SearchLine } from 'svelte-remixicon';\n\n  import { Title, Button } from '../components/base';\n  import TopTitle from '../components/TopTitle.svelte';\n  import ListGrid from '../components/ListGrid.svelte';\n  import Songer from '../components/Singer.svelte';\n\n  import { isHomePageStore, isLoginStore } from '../store/common';\n\n  import {\n    topPlaylist,\n    toplists,\n    highQualityPlaylist,\n    playlistCatlist,\n    playlistHotCatlist,\n    highQualityCat,\n  } from '../api/playlist';\n  import { topArtists } from '../api/songer';\n\n  let topPlayList = [];\n  let highquality = [];\n  let offList = [];\n  let topOrderList = [];\n  let topTitleRightList = {\n    type: 'icon',\n    path: SearchLine,\n  };\n  $: allList = [];\n  $: active1 = 0;\n  $: tab2list = [];\n  $: active2 = 0;\n  $: categories = {};\n  $: HotCatlist = [];\n  $: hotSongers = [];\n  $: cat = '';\n  $: heigcat = '';\n  $: heigtab2list = ['默认'];\n  $: heigActive = 0;\n\n  onMount(() => {\n    allMount();\n  });\n  function allMount() {\n    playlistHotCatlistFun();\n    highQualityCatFun();\n    offPlaylistFun();\n    toplistsFun();\n    topArtistsFun();\n  }\n  //获取热门歌单分类\n  async function playlistHotCatlistFun() {\n    const res = await playlistHotCatlist();\n    if (res.code === 200) {\n      HotCatlist = res.tags;\n      HotCatlist.unshift({ name: '默认', category: 0 });\n      playlistCatlistFun();\n    }\n  }\n  //获取精品歌单分类\n  async function highQualityCatFun() {\n    const res = await highQualityCat();\n    if (res.code === 200) {\n      for (let r = 0; r < res.tags.length; r++) {\n        heigtab2list.push(res.tags[r].name);\n      }\n      heigcat = heigtab2list[0];\n      highQualityPlaylistFun(heigcat);\n    }\n  }\n  //获取歌单分类\n  async function playlistCatlistFun() {\n    const res = await playlistCatlist();\n    if (res.code === 200) {\n      categories = res.categories;\n      categories['5'] = '热门';\n      allList = dealWithData(res.sub);\n      allList.unshift({ category: 5, allData: HotCatlist });\n      active1 = allList[0].category;\n      tab2list = allList.filter(item => item.category === active1)[0].allData;\n      active2 = 0;\n      cat = tab2list[0].name;\n      topPlaylistFun(tab2list[0].name);\n    }\n  }\n  //热门歌单\n  async function topPlaylistFun(cat) {\n    const res = await topPlaylist({ limit: 6, cat: cat === '默认' ? '全部' : cat });\n    if (res.code === 200) {\n      topPlayList = res.playlists;\n    }\n  }\n  //精品歌单\n  async function highQualityPlaylistFun(cat) {\n    const res = await highQualityPlaylist({ limit: 6, cat: cat === '默认' ? '全部' : cat });\n    if (res.code === 200) {\n      highquality = res.playlists;\n    }\n  }\n  //官方歌单\n  async function offPlaylistFun() {\n    const res = await topPlaylist({ limit: 6, cat: '官方' });\n    if (res.code === 200) {\n      offList = res.playlists;\n    }\n  }\n  //排行榜\n  async function toplistsFun() {\n    const res = await toplists();\n    if (res.code === 200) {\n      topOrderList = res.list;\n    }\n  }\n  //热门歌手\n  async function topArtistsFun() {\n    const res = await topArtists(9);\n    if (res.code === 200) {\n      hotSongers = res.artists;\n    }\n  }\n  // 查看全部热门歌手\n  function hotSongersFun() {\n    isHomePageStore.set(false);\n    push('/moreSonger');\n  }\n  function topClickFun(event) {\n    if (event.detail.index === 0) {\n      isHomePageStore.set(false);\n      push('/search');\n    }\n  }\n  function dealWithData(data) {\n    let c = [];\n    let d = {};\n    data.forEach(element => {\n      if (!d[element.category]) {\n        c.push({\n          category: element.category,\n          allData: [element],\n        });\n        d[element.category] = element;\n      } else {\n        c.forEach(ele => {\n          if (ele.category == element.category) {\n            ele.allData.push(element);\n          }\n        });\n      }\n    });\n    return c;\n  }\n</script>\n\n<TopTitle title=\"发现\" desc=\"歌单广场\" {topTitleRightList} on:IconClick={topClickFun} />\n<div class=\"page\">\n  {#if topPlayList.length > 0}\n    <div style=\"margin-top: 10px;\">\n      <ListGrid\n        title={tab2list.length > 0 ? `${tab2list[active2].name} - 精选歌单` : `默认-精选歌单`}\n        playList={topPlayList}\n        on:titleClick={() => {\n          isHomePageStore.set(false);\n          push('/moreList?cat=' + cat + '&type=top');\n        }}\n      >\n        <div>\n          <div class=\"tab-1-box\">\n            {#each allList as category}\n              <div\n                class=\"tab1\"\n                class:tab1-active={active1 === category.category}\n                on:click={() => {\n                  active1 = category.category;\n                  tab2list = allList.filter(item => item.category === active1)[0].allData;\n                  active2 = 0;\n                  cat = tab2list[0].name;\n                  topPlaylistFun(tab2list[0].name);\n                }}\n              >\n                {categories[category.category]}\n              </div>\n            {/each}\n          </div>\n          <div class=\"tab-2-box\">\n            {#each tab2list as tab, i}\n              <span\n                class=\"tab2\"\n                class:tab1-active={active2 === i}\n                on:click={() => {\n                  active2 = i;\n                  cat = tab.name;\n                  topPlaylistFun(tab.name);\n                }}\n              >\n                {tab.name}\n              </span>\n            {/each}\n            <div class=\"mask\" />\n          </div>\n        </div>\n      </ListGrid>\n    </div>\n  {/if}\n  {#if offList.length > 0}\n    <div class=\"list-grid\">\n      <ListGrid\n        title=\"官方歌单\"\n        playList={offList}\n        on:titleClick={() => {\n          isHomePageStore.set(false);\n          push('/moreList?cat=官方');\n        }}\n      />\n    </div>\n  {/if}\n  {#if topOrderList.length > 0}\n    <div class=\"list-grid\">\n      <ListGrid title=\"排行榜\" isShowMore={false} playList={topOrderList} />\n    </div>\n  {/if}\n  {#if hotSongers.length > 0}\n    <Title title=\"热门歌手\" isShowRight={true} on:TitleClick={hotSongersFun} />\n    <div class=\"songer-box\">\n      {#each hotSongers as songer}\n        <Songer {songer} coverSize={330} />\n      {/each}\n    </div>\n  {/if}\n  {#if highquality.length > 0}\n    <div class=\"list-grid\">\n      <ListGrid\n        title={heigtab2list.length > 0 ? `${heigtab2list[heigActive]} - 精品歌单` : `默认-精品歌单`}\n        playList={highquality}\n        isShowMore={highquality.length < 6 ? false : true}\n        on:titleClick={() => {\n          isHomePageStore.set(false);\n          push('/moreList?cat=' + heigcat + '&type=high');\n        }}\n      >\n        <div class=\"tab-2-box\">\n          {#each heigtab2list as tab, i}\n            <span\n              class=\"tab2\"\n              class:tab1-active={heigActive === i}\n              on:click={() => {\n                heigActive = i;\n                heigcat = tab;\n                highQualityPlaylistFun(tab);\n              }}\n            >\n              {tab}\n            </span>\n          {/each}\n          <div class=\"mask\" />\n        </div>\n      </ListGrid>\n    </div>\n  {/if}\n</div>\n\n<style>\n\n  .songer-box {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(3, 100px);\n    padding: 0 20px;\n  }\n  .list-grid {\n    margin-top: 30px;\n  }\n  .page {\n    padding-bottom: 120px;\n    font-size: 16px;\n  }\n  .tab-1-box {\n    display: flex;\n    padding: 0px 20px;\n    font-size: 12px;\n    justify-content: space-between;\n  }\n  .tab1 {\n    background-color: #fff;\n    border-radius: 4px;\n    padding: 4px 0;\n    width: 50px;\n    text-align: center;\n  }\n  .tab-2-box {\n    width: 100%;\n    overflow-x: auto;\n    white-space: nowrap;\n    display: flex;\n    font-size: 12px;\n  }\n  .tab-2-box:global(::-webkit-scrollbar) {\n    width: 0 !important;\n  }\n  .tab2 {\n    background-color: #fff;\n    border-radius: 4px;\n    padding: 4px 10px;\n    margin: 10px;\n  }\n  .tab-2-box > :global(:first-child) {\n    margin-left: 20px;\n  }\n  .tab-2-box > :global(:nth-last-child(2)) {\n    margin-right: 40px;\n  }\n  .tab1-active {\n    background-color: var(--primary-text-color);\n    color: #fff;\n  }\n  .mask {\n    position: absolute;\n    right: 0;\n    width: 40px;\n    height: 40px;\n    background-color: #f4f4f4;\n    -webkit-mask: linear-gradient(to left, #000, transparent);\n    mask: linear-gradient(to left, #000, transparent);\n  }\n</style>\n",
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import { pop, search } from \"svelte-stack-router\";\n  import md5 from \"crypto-js/md5\";\n  import { LinksLine } from \"svelte-remixicon\";\n  import QrCode from \"svelte-qrcode\";\n\n  import { NavBar, Input, Button } from \"../components/base\";\n\n  import { isHomePageStore, isLoginStore } from \"../store/common\";\n  import { playIsMinStore } from \"../store/play\";\n  import {\n    userInfoStore,\n    userLikedSongIdsStore,\n    userLikedPlaylistStore,\n  } from \"../store/user\";\n\n  import {\n    loginWithPhone,\n    loginWithEmail,\n    loginQrCodeKey,\n    loginQrCodeCreate,\n    loginQrCodeCheck,\n  } from \"../api/auth\";\n  import {\n    userPlaylist,\n    userLikedSongsIDs,\n    likedArtists,\n    userAccount,\n    sendSmsCode,\n  } from \"../api/user\";\n\n  import { setCookies, Alert, Toast, parseQuery } from \"../utils/common\";\n\n  let { type = \"phone\" } = parseQuery($search);\n\n  let timerLogin = null;\n\n  let phone = \"\";\n  let phone_code = \"\";\n  let phone_password = \"\";\n\n  let email = \"\";\n  let email_password = \"\";\n\n  $: phoneType = \"code\"; //code--短信验证，pwd--密码验证\n  let tiptext =\n    \"您的密码会进行 MD5 加密后再传输到网易云 API。本应用不会传输您的账号数据到任何非网易云音乐官方服务器。\";\n  $: loginType =\n    type === \"qr\" ? \"二维码登录\" : type === \"phone\" ? \"手机号登录\" : \"邮箱登录\";\n  $: qrImg = \"\";\n  $: qrTip = \"请扫码\";\n  $: btnText = \"获取验证码\";\n\n  function isPhone(phone) {\n    //手机号正则\n    let mPattern = /^1[3-9]\\d{9}$/;\n    //返回 true or false\n    return mPattern.test(phone);\n  }\n\n  function loginSuccFun(res) {\n    //登录成功\n    setCookies(res.cookie);\n    isLoginStore.set(true);\n    userInfoStore.set(res);\n    localStorage.setItem(\"isLogin\", true);\n    localStorage.setItem(\"userInfo\", JSON.stringify(res));\n    setTimeout(() => pop(), 100);\n    // userPlaylistFun(res);\n  }\n  //手机号登录\n  async function doPhoneLogin() {\n    if (!isPhone(phone)) {\n      return Toast(\"请输入正确的手机号\");\n    }\n    if (phoneType === \"code\" && phone_code.length != 4) {\n      return Toast(\"请输入四位验证码\");\n    }\n\n    let params = {};\n    if (phoneType === \"code\") {\n      //验证码验证\n      params = {\n        phone,\n        captcha: phone_code,\n        password: \"fakePassword\",\n      };\n    } else {\n      //密码验证\n      params = {\n        phone,\n        md5_password: phone_password,\n        password: \"fakePassword\",\n      };\n    }\n    const res = await loginWithPhone(params);\n    if (res.code === 200) {\n      loginSuccFun(res);\n    } else {\n      Alert(\"登录不成功, 请重新登录。\");\n    }\n  }\n  //邮箱登录\n  async function doEmailLogin() {\n    const res = await loginWithEmail({\n      email,\n      md5_password: email_password,\n      password: \"fakePassword\",\n    });\n    if (res.code === 200) {\n      loginSuccFun(res);\n    } else {\n      Alert(\"登录不成功, 请重新登录。\");\n    }\n  }\n  onMount(() => {\n    isHomePageStore.set(false);\n    playIsMinStore.set(false);\n  });\n  onDestroy(() => {\n    playIsMinStore.set(true);\n  });\n  function set_phone_password(e) {\n    phone_password = md5(e.detail.value).toString();\n  }\n  function set_phone_code(e) {\n    phone_code = e.detail.value.toString();\n  }\n  function set_email_password(e) {\n    email_password = md5(e.detail.value).toString();\n  }\n  function getPhone(e) {\n    phone = e.detail.value;\n  }\n  function set_email_assress(e) {\n    email = e.detail.value;\n  }\n\n  // async function userPlaylistFun(login) {\n  //   //获取用户收藏歌单ID列表,用于判断是否已经收藏\n  //   const res = await userPlaylist({\n  //     uid: login.account.id,\n  //     limit: 10000,\n  //     offset: 0,\n  //   });\n  //   if (res.code === 200) {\n  //     let ids = [];\n  //     for (let i = 0; i < res.playlist.length; i++) {\n  //       ids.push(res.playlist[i].id);\n  //     }\n\n  //     if (\n  //       res.playlist[0].creator.userId === $userInfoStore.account.id &&\n  //       res.playlist[0].name.substr(-5) === \"喜欢的音乐\"\n  //     ) {\n  //       userLikedPlaylistStore.set(res.playlist[0].id);\n  //       localStorage.setItem(\"userLikeListId\", res.playlist[0].id);\n  //     }\n\n  //     localStorage.setItem(\"usePlayListIds\", JSON.stringify(ids));\n  //     userLikedSongsIDsFun(login);\n  //   } else {\n  //     Alert(\"获取收藏歌单失败\");\n  //   }\n  // }\n  // async function userLikedSongsIDsFun(login) {\n  //   //获取用户喜爱歌曲ID列表,用于判断是否已经收藏\n  //   const res = await userLikedSongsIDs(login.account.id);\n  //   if (res.code === 200) {\n  //     let ids = [];\n  //     for (let i = 0; i < res.ids.length; i++) {\n  //       ids.push(res.ids[i]);\n  //     }\n  //     isLoginStore.set(true);\n  //     localStorage.setItem(\"isLogin\", true);\n  //     userLikedSongIdsStore.set(JSON.stringify(ids));\n  //     localStorage.setItem(\"useLoveSongIds\", JSON.stringify(ids));\n  //     likedArtistsFun();\n  //   } else {\n  //     alert(\"获取喜爱歌曲失败\");\n  //   }\n  // }\n  // //获取收藏的歌手\n  // async function likedArtistsFun() {\n  //   const res = await likedArtists({ limit: 2000 });\n  //   if (res.code === 200) {\n  //     let ids = [];\n  //     for (let i = 0; i < res.data.length; i++) {\n  //       ids.push(res.data[i].id);\n  //     }\n  //     localStorage.setItem(\"useLoveSongerIds\", JSON.stringify(ids));\n  //     setTimeout(() => {\n  //       pop();\n  //     }, 100);\n  //   } else {\n  //     alert(\"获取喜爱歌手失败\");\n  //   }\n  // }\n  async function qrLoginFun() {\n    type = \"qr\";\n    const res = await loginQrCodeKey();\n    if (res.code === 200) {\n      loginQrCodeCreateFun(res.data.unikey);\n    }\n  }\n  async function loginQrCodeCreateFun(key) {\n    const res = await loginQrCodeCreate({\n      key,\n    });\n    if (res.code === 200) {\n      qrImg = res.data.qrurl;\n      timerLogin = setInterval(() => {\n        loginQrCodeCheckFun(key);\n      }, 1000);\n    }\n  }\n  async function loginQrCodeCheckFun(key) {\n    const res = await loginQrCodeCheck(key);\n    if (res.code === 800) {\n      qrTip = res.message;\n    } else if (res.code === 801) {\n      qrTip = res.message;\n    } else if (res.code === 802) {\n      qrTip = res.message;\n    } else if (res.code === 803) {\n      clearInterval(timerLogin);\n      setTimeout(() => {\n        userAccountFun(res.cookie);\n      }, 300);\n    } else {\n      clearInterval(timerLogin);\n    }\n  }\n  async function userAccountFun(cookie) {\n    const res = await userAccount(cookie);\n    if (res.code === 200) {\n      let newres = res;\n      newres.cookie = cookie;\n      loginSuccFun(newres);\n    }\n  }\n  async function sendSmsCodeFun() {\n    if (btnText === \"获取验证码\") {\n      if (!isPhone(phone)) {\n        Toast(\"请输入正确的手机号\");\n      } else {\n        const res = await sendSmsCode(phone);\n        if (res.code === 200) {\n          Toast(\n            \"验证码已发送至\" +\n              phone.substring(phone.length - 4) +\n              \"，请注意查收！\",\n            2000\n          );\n          setinter60();\n        }\n      }\n    }\n  }\n  function setinter60() {\n    let time = 59;\n    let myTimer = setInterval(() => {\n      time--;\n      if (time === 0) {\n        clearInterval(myTimer);\n        btnText = \"获取验证码\";\n      } else {\n        btnText = time + \"s 后重发\";\n      }\n    }, 1000);\n  }\n</script>\n\n<NavBar title={loginType} />\n<div class=\"login-page\">\n  <div class=\"desc\">请使用网易云音乐账号登录</div>\n  <div class=\"lead\">\n    <div class=\"netease\">\n      <img src=\"/images/nm_logo.png\" alt=\"\" />\n    </div>\n    <div class=\"arr\">\n      <LinksLine />\n    </div>\n    <div class=\"simple\"><img src=\"/images/sm_logo.png\" alt=\"\" /></div>\n  </div>\n  {#if type === \"qr\"}\n    <div class=\"qr\">\n      <div class=\"qr-tip\">{qrTip}</div>\n      <div class=\"qrcode\">\n        <QrCode value={qrImg} />\n      </div>\n      <div class=\"tip\">\n        直接使用网易云音乐 APP 扫码登录，或截图保存之后使用网易云音乐 APP\n        扫码登录。\n      </div>\n    </div>\n  {/if}\n  {#if type === \"phone\"}\n    <div class=\"phone\">\n      <Input label=\"手机号\" type=\"tel\" maxlength=\"11\" on:setInput={getPhone} />\n      {#if phoneType === \"pwd\"}\n        <Input\n          label=\"密码\"\n          type=\"password\"\n          maxlength=\"40\"\n          bind:phone_password\n          on:setInput={set_phone_password}\n        />\n      {/if}\n      {#if phoneType === \"code\"}\n        <Input\n          label=\"验证码\"\n          type=\"tel\"\n          maxlength=\"4\"\n          bind:phone_code\n          rightBtn={true}\n          {btnText}\n          on:setInput={set_phone_code}\n          on:setBtn={sendSmsCodeFun}\n        />\n      {/if}\n      <div class=\"phone-switch\">\n        {#if phoneType === \"pwd\"}\n          <span\n            on:click={() => {\n              phoneType = \"code\";\n            }}\n          >\n            短信验证\n          </span>{/if}\n        {#if phoneType === \"code\"}\n          <span\n            on:click={() => {\n              phoneType = \"pwd\";\n            }}\n          >\n            密码验证\n          </span>\n        {/if}\n      </div>\n      <div class=\"btn\">\n        <Button on:BtnClick={doPhoneLogin} type=\"primary\">登录</Button>\n      </div>\n      {#if phoneType === \"pwd\"}\n        <div class=\"tip\">{tiptext}</div>\n      {/if}\n    </div>\n  {/if}\n\n  {#if type === \"email\"}\n    <div class=\"email\">\n      <Input\n        label=\"邮箱\"\n        maxlength={30}\n        type=\"text\"\n        on:setInput={set_email_assress}\n      />\n      <Input\n        label=\"密码\"\n        type=\"password\"\n        maxlength=\"40\"\n        bind:email_password\n        on:setInput={set_email_password}\n      />\n      <div class=\"btn\">\n        <Button on:BtnClick={doEmailLogin} type=\"primary\">登录</Button>\n      </div>\n      <div class=\"tip\">{tiptext}</div>\n    </div>\n  {/if}\n\n  <div class=\"type-switch\">\n    {#if type !== \"phone\"}\n      <span\n        on:click={() => {\n          clearInterval(timerLogin);\n          type = \"phone\";\n        }}\n      >\n        手机号登录\n      </span>\n    {/if}\n\n    {#if type !== \"qr\"}\n      <span on:click={qrLoginFun}> 二维码登录 </span>\n    {/if}\n\n    {#if type !== \"email\"}\n      <span\n        on:click={() => {\n          type = \"email\";\n          clearInterval(timerLogin);\n        }}\n      >\n        邮箱登录\n      </span>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .desc {\n    font-size: 12px;\n    text-align: center;\n    color: #666;\n    margin: 20px;\n  }\n  .qr-tip {\n    text-align: center;\n    margin: 20px auto;\n  }\n  .login-page {\n    padding-top: 50px;\n    font-size: 16px;\n  }\n  .btn {\n    margin: 10px auto;\n    width: 80%;\n  }\n  .qr {\n    text-align: center;\n  }\n  .qrcode {\n    margin: auto;\n    width: 200px;\n    height: 200px;\n    background: cornflowerblue;\n  }\n  .tip {\n    width: 80%;\n    text-align: justify;\n    font-size: 12px;\n    line-height: 16px;\n    margin: 20px auto;\n    word-break: break-all;\n  }\n  .lead {\n    text-align: center;\n    align-items: center;\n    margin: 20px auto;\n    width: 50%;\n    display: flex;\n    justify-content: center;\n  }\n  .netease {\n    flex: 1.5;\n  }\n  img {\n    width: 100%;\n  }\n  .arr {\n    color: rgb(139, 139, 139);\n    flex: 1;\n  }\n  .simple {\n    flex: 1.5;\n  }\n  .phone-switch {\n    margin: 20px;\n    text-align: center;\n    color: var(--primary-text-color);\n  }\n  .type-switch {\n    position: fixed;\n    width: 100%;\n    bottom: 40px;\n    text-align: center;\n    color: var(--primary-text-color);\n    padding-bottom: constant(safe-area-inset-bottom);\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n\n  .type-switch span + .type-switch span::before {\n    content: \" | \";\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { push } from \"svelte-stack-router\";\n  import {\n    RadioFill,\n    RefreshLine,\n    Calendar2Fill,\n  } from \"svelte-remixicon\";\n\n  import TopTitle from \"../components/TopTitle.svelte\";\n  import { Button } from \"../components/base\";\n  import ListGrid from \"../components/ListGrid.svelte\";\n  import SongList from \"../components/SongList.svelte\";\n  import Songer from \"../components/Singer.svelte\";\n\n  import { isLoginStore, defaultCover } from \"../store/common\";\n  import {\n    playIsMaxStore,\n    isPlaying,\n    currentSongStore,\n    currentPlayListStore,\n    currentSongIndexStore,\n    playerTop,\n    FMPlayStore,\n    isFMPlaying,\n    FMPlayNextStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import { isHomePageStore } from \"../store/common\";\n  import { dailyRecommendTracksStore } from \"../store/playList\";\n  import {\n    userInfoStore,\n    userLikedArtistsStore,\n    userLikedSongIdsStore,\n    userLikedPlaylistStore,\n  } from \"../store/user\";\n\n  import {\n    dailyRecommendTracks,\n    getSimiPlaylist,\n    dailyRecommendPlaylist,\n    getPlaylistDetail,\n  } from \"../api/playlist\";\n  import {\n    getSongUrl,\n    personalFM,\n    getSongDetail,\n    getSimiSong,\n  } from \"../api/song\";\n  import { similarArtists, getSongerDetail } from \"../api/songer\";\n  import {\n    songerListToStr,\n    Toast,\n    ripple,\n    fullWidth,\n    formatURL,\n    imageURL,\n  } from \"../utils/common\";\n\n  import { sync } from '../helper/user';\n\n  let dailyRecommendPlayList = []; //每日歌单推荐\n  let randomLoveSong = {}; //随机一个喜欢歌曲\n  let similarPlayList = []; //相似歌单推荐\n  let randomTenLoveSong = {}; //随机一个喜欢歌曲\n  let similarSongs = []; //相似歌曲推荐\n  let topTitleRightList = {\n    type: \"icon\",\n    path: RefreshLine,\n  };\n  let FMDom;\n  let todayDom;\n  $: isRefresh = false;\n  $: simiSonger = {};\n  $: simiSongers = [];\n\n  const fetchData = async () => {\n    if (!$isLoginStore) return;\n    await sync($userInfoStore);\n    dailyRecommendTracksFun();\n    dailyRecommendPlaylistFun();\n    personalFMFun(true);\n\n    console.log(\"userLikedSongIdsStore:\", $userLikedSongIdsStore);\n    console.log(\"userLikedArtistsStore:\", $userLikedArtistsStore);\n    console.log(\"userLikedPlaylistStore:\", $userLikedPlaylistStore);\n\n    //收藏随机歌手一位\n    const randomSongIndex = Math.floor(\n      Math.random() * $userLikedSongIdsStore.length\n    );\n    const randomSong = $userLikedSongIdsStore[randomSongIndex];\n    if (randomSong) {\n      getSongDetailFun(randomSong);\n      getSimiPlaylistFun(randomSong);\n    }\n\n    const randomArtistIndex = Math.floor(\n      Math.random() * $userLikedArtistsStore.length\n    );\n    const randomArtist = $userLikedArtistsStore[randomArtistIndex];\n    if (randomArtist) {\n      getSongerDetailFun(randomArtist);\n      similarArtistsFun(randomArtist);\n    }\n  };\n\n  onMount(() => {\n    if (FMDom) {\n      ripple(FMDom);\n    }\n    if (todayDom) {\n      ripple(todayDom);\n    }\n    fetchData();\n  });\n\n  /**\n   * 播放私人FM\n   */\n  function playFMRadio() {\n    if ($FMPlayStore.id === $currentSongStore.id) {\n      window.audioDOM.play();\n      isPlaying.set(true);\n      playerTop.set(\"0px\");\n      playIsMaxStore.set(true);\n    } else {\n      isFMPlaying.set(true);\n      localStorage.setItem(\"isFMPlay\", \"1\");\n      getSongUrlFun($FMPlayStore);\n    }\n  }\n  /**\n   * 请求私人FM\n   * @param first\n   */\n  async function personalFMFun(first) {\n    //first 是否是第一次请求私人FM\n    const res = await personalFM();\n    if (res.code === 200) {\n      const [song1, song2] = res.data;\n\n      song1.al = song1.album;\n      song1.ar = song1.artists;\n      song1.alia = song1.alias;\n\n      song2.al = song2.album;\n      song2.ar = song2.artists;\n      song2.alia = song2.alias;\n      if (first) {\n        FMPlayStore.set(song1);\n        FMPlayNextStore.set(song2);\n        // localStorage.setItem(\"FMPlay\", JSON.stringify($FMPlayStore));\n      } else {\n        FMPlayStore.set(song1);\n      }\n    }\n  }\n  //每日推荐歌曲\n  async function dailyRecommendTracksFun() {\n    const res = await dailyRecommendTracks();\n    if (res.code === 200) {\n      dailyRecommendTracksStore.set(res.data.dailySongs);\n    }\n  }\n  //每日推荐歌单\n  async function dailyRecommendPlaylistFun() {\n    const res = await dailyRecommendPlaylist();\n    if (res.code !== 200) return;\n    const { recommend } = res;\n    const [playlist] = recommend;\n    const { name } = playlist;\n    const playlistDetail = await getPlaylistDetail(playlist.id);\n    Object.assign(playlist, playlistDetail.playlist);\n    playlist.name = name;\n\n    for (let i = 0; i < recommend.length; i++) {\n      const list = recommend[i];\n      const { name, copywriter, tracks } = list;\n      const isRadar =\n        copywriter === \"猜你喜欢\" && name.indexOf(\"私人雷达\") !== -1;\n      if (isRadar && tracks) {\n        list.copywriter = name;\n        list.name = `从《${tracks[0].name}》开始听吧`;\n      }\n      list.playCount = list.playcount;\n      list.coverImgUrl =\n        list.picUrl || list.coverImgUrl || list.tracks[0].al.picUrl;\n    }\n    dailyRecommendPlayList = recommend;\n    console.debug(\"dailyRecommendPlayList\", dailyRecommendPlayList);\n    // 喜欢歌曲最新20首随机一首\n    const randomIndexTen = Math.round(Math.random() * 20);\n    randomTenLoveSong = playlistDetail.playlist.tracks[randomIndexTen];\n    if (randomTenLoveSong) getSimiSongFun(randomTenLoveSong.id);\n  }\n  //请求歌曲详情\n  async function getSongDetailFun(id) {\n    if (!id) return;\n    const res = await getSongDetail(id); //获取歌单详情\n    if (res.code === 200) {\n      randomLoveSong = res.songs[0];\n    }\n  }\n  //请求相似歌单\n  async function getSimiPlaylistFun(id) {\n    if (!id) return;\n    const res = await getSimiPlaylist(id); //获取歌单详情\n    if (res.code === 200) {\n      similarPlayList = res.playlists;\n    }\n  }\n  //请求相似歌曲\n  async function getSimiSongFun(id) {\n    const res = await getSimiSong(id); //获取歌单详情\n    if (res.code === 200) {\n      if (isRefresh) isRefresh = false;\n      for (let t = 0; t < res.songs.length; t++) {\n        res.songs[t].al = res.songs[t].album;\n        res.songs[t].ar = res.songs[t].artists;\n      }\n      similarSongs = res.songs;\n    }\n  }\n  //获取歌曲URL\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id);\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($isFMPlaying) {\n          currentPlayListStore.set([song]);\n          currentSongIndexStore.set(0);\n          currentSongStore.set(song);\n          song.al = song.album;\n          song.ar = song.artists;\n          song.alia = song.alias;\n          FMPlayStore.set(song);\n          localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        }\n      } else {\n        Toast(\n          `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n          2000\n        );\n      }\n    }\n  }\n  //获取相似歌手\n  async function similarArtistsFun(id) {\n    const res = await similarArtists(id);\n    if (res.code === 200) {\n      let newSongerIds = [];\n      for (let e = 0; e < res.artists.length; e++) {\n        newSongerIds.push(res.artists[e].id);\n      }\n      let artists = distinct(newSongerIds, $userLikedArtistsStore); //交集\n      for (let t = 0; t < artists.length; t++) {\n        for (let p = 0; p < res.artists.length; p++) {\n          if (artists[t] === res.artists[p].id) {\n            res.artists.splice(p, 1);\n          }\n        }\n      }\n      simiSongers =\n        res.artists.length > 6 ? res.artists.slice(0, 6) : res.artists;\n    }\n  }\n  //获取随机歌手信息\n  async function getSongerDetailFun(id) {\n    const res = await getSongerDetail(id);\n    if (res.code === 200) {\n      simiSonger = res.data.artist;\n    }\n  }\n  //数组去重\n  function distinct(A, B) {\n    let aSet = new Set(A);\n    let bSet = new Set(B);\n    //差集\n    // let differenceSet = new Set([...aSet].filter(x => !bSet.has(x)));\n    // return Array.from(differenceSet);\n    // 交集;\n    let intersection = new Set([...aSet].filter((x) => bSet.has(x)));\n    return Array.from(intersection);\n  }\n\n\n  function clickRefresh(event) {\n    if (event.detail.index === 0) {\n      fetchData();\n    }\n  }\n\n  /**\n   * 今日推荐歌曲\n  */\n  function gotoDailyRecommendTracks() {\n    isHomePageStore.set(false);\n    push(\"/daily\");\n  }\n</script>\n\n<div class=\"love\">\n  {#if $isLoginStore}\n    <div class=\"login-box\">\n      <TopTitle\n        title=\"推荐\"\n        desc=\"专属推荐\"\n        {topTitleRightList}\n        {isRefresh}\n        on:IconClick={clickRefresh}\n      />\n      <div class=\"login\">\n        <div\n          class=\"today\"\n          on:click={gotoDailyRecommendTracks}\n          bind:this={todayDom}\n        >\n          <div\n            class=\"today-img-box\"\n            style=\"width: {fullWidth() -\n              40}px;background-image:url({$dailyRecommendTracksStore.length !==\n            0\n              ? imageURL($dailyRecommendTracksStore[0].al.picUrl, { size: 800 })\n              : defaultCover})\"\n          />\n          <div class=\"day-box\">\n            <div class=\"day\">今日推荐</div>\n            <div class=\"name-list\">\n              <div class=\"name\">\n                {$dailyRecommendTracksStore.length !== 0\n                  ? $dailyRecommendTracksStore[0].name\n                  : \"\"}\n              </div>\n              <div class=\"songer\">\n                {$dailyRecommendTracksStore.length !== 0\n                  ? songerListToStr($dailyRecommendTracksStore[0].ar)\n                  : \"\"}\n              </div>\n              <div class=\"calendar\">\n                <span style=\"position:relative;top:2px \">\n                  <Calendar2Fill size=\"14\" />\n                </span>{`${\n                  new Date().getMonth() + 1\n                }月${new Date().getDate()}日`}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"fm-box\"\n          on:click={playFMRadio}\n          style=\"background:url({$FMPlayStore.album\n            ? imageURL($FMPlayStore.album.blurPicUrl, { width: 80 })\n            : ''})\"\n          bind:this={FMDom}\n        >\n          <div class=\"fm\">\n            <div class=\"fm-cover\">\n              <img\n                class=\"fm-cover-img\"\n                src={$FMPlayStore.album\n                  ? imageURL($FMPlayStore.album.blurPicUrl, { size: 240 })\n                  : \"\"}\n                alt=\"\"\n              />\n            </div>\n            <div class=\"fm-info\">\n              {#if $isFMPlaying && $isPlaying && $currentSongStore.id === $FMPlayStore.id}\n                <div class=\"fm-play-motion\">\n                  <div class=\"pull_down pull_down1\" />\n                  <div class=\"pull_down pull_down2\" />\n                  <div class=\"pull_down pull_down3\" />\n                  <div class=\"pull_down pull_down4\" />\n                  <div class=\"pull_down pull_down5\" />\n                  <div class=\"pull_down pull_down6\" />\n                  <div class=\"pull_down pull_down7\" />\n                  <div class=\"pull_down pull_down8\" />\n                  <div class=\"pull_down pull_down9\" />\n                  <div class=\"pull_down pull_down10\" />\n                </div>\n              {/if}\n              <div class=\"fm-name\">\n                {$FMPlayStore.name ? $FMPlayStore.name : \"\"}\n                <span class=\"alia\">\n                  {$FMPlayStore.alia && $FMPlayStore.alia.length > 0\n                    ? `(${$FMPlayStore.alia[0]})`\n                    : \"\"}\n                </span>\n              </div>\n              <div class=\"fm-songer\">\n                {$FMPlayStore.artists\n                  ? songerListToStr($FMPlayStore.artists)\n                  : \"\"}\n                {#if $FMPlayStore.al}\n                  <span>\n                    {$FMPlayStore.al.name === \"\"\n                      ? \"\"\n                      : `- ${$FMPlayStore.al.name}`}\n                    <!-- {$FMPlayStore.al === true}\n                  {$FMPlayStore.album === true} -->\n                    <!-- {$FMPlayStore.al\n                    ? $FMPlayStore.al.name === \"\"\n                      ? \"\"\n                      : `- ${$FMPlayStore.al.name}`\n                    : $FMPlayStore.album.name === \"\"\n                    ? \"\"\n                    : `- ${$FMPlayStore.album.name}`} -->\n                  </span>\n                {/if}\n              </div>\n              <div class=\"fm-icon\">\n                <span style=\"position:relative;top:2px \">\n                  <RadioFill size=\"14\" />\n                </span>\n                私人 FM\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"list-grid\">\n          <ListGrid\n            title=\"每日歌单推荐\"\n            isShowMore={false}\n            playList={dailyRecommendPlayList}\n          />\n        </div>\n        {#if similarSongs.length > 0}\n          <div class=\"simiTitle\">相似歌曲推荐</div>\n          <div class=\"desc\">根据单曲《{randomTenLoveSong.name}》推荐</div>\n          <SongList songList={similarSongs} />\n        {/if}\n        {#if similarPlayList.length > 0}\n          <div class=\"list-grid\">\n            <ListGrid\n              title=\"相似歌单推荐\"\n              isShowMore={false}\n              isShowTip={true}\n              tipTextList={[`根据单曲《${randomLoveSong.name}》推荐`]}\n              playList={similarPlayList}\n            />\n          </div>\n        {/if}\n        {#if simiSongers.length > 0 && simiSonger.name}\n          <div class=\"simiTitle\">相似歌手推荐</div>\n          <div class=\"desc\">根据【{simiSonger.name}】推荐</div>\n          <div class=\"songer-box\">\n            {#each simiSongers as songer}\n              <Songer {songer} coverSize={330} />\n            {/each}\n          </div>\n        {/if}\n      </div>\n    </div>\n  {:else}\n    <div>\n      <TopTitle\n        title=\"推荐\"\n        desc=\"专属推荐\"\n        topTitleRightList={{ type: \"text\", text: \"\" }}\n      />\n      <div class=\"noLogin\">\n        <div>\n          <img class=\"login-img\" src=\"images/login.png\" alt=\"\" />\n        </div>\n        <div class=\"tip\">推荐功能需要登录</div>\n        <div class=\"login-btn\">\n          <Button\n            type=\"primary\"\n            on:BtnClick={() => {\n              isHomePageStore.set(false);\n              push(\"/login\");\n            }}\n          >\n            立即登录\n          </Button>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .songer-box {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(3, 100px);\n    padding: 0 20px;\n  }\n  .alia {\n    color: rgb(255, 255, 255, 0.7);\n    font-size: 14px;\n    font-weight: normal;\n  }\n  .fm-songer {\n    color: rgb(255, 255, 255, 0.7);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n  }\n  .simiTitle {\n    margin-top: 20px;\n    text-align: left;\n    margin-left: 20px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  .desc {\n    font-size: 12px;\n    color: rgb(141, 141, 141);\n    text-align: justify;\n    margin: 10px 0;\n    padding: 0 20px;\n  }\n  .list-grid {\n    margin-top: 30px;\n  }\n  .fm-play-motion {\n    position: absolute;\n    width: 100%;\n    height: 74px;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n  }\n  .pull_down {\n    flex: 1;\n    height: 6px;\n    margin: 0px 6px;\n    border-top-left-radius: 20px;\n    border-top-right-radius: 20px;\n    background: rgba(255, 255, 255, 0.1);\n  }\n  .pull_down1 {\n    -webkit-animation: jumpY1 1.5s infinite ease-in-out;\n    -o-animation: jumpY1 1.5s infinite ease-in-out;\n    animation: jumpY1 1.5s infinite ease-in-out;\n  }\n  .pull_down2 {\n    -webkit-animation: jumpY2 1.2s infinite ease-in-out;\n    -o-animation: jumpY2 1.2s infinite ease-in-out;\n    animation: jumpY2 1.2s infinite ease-in-out;\n  }\n  .pull_down3 {\n    -webkit-animation: jumpY3 1s infinite ease-in-out;\n    -o-animation: jumpY3 1s infinite ease-in-out;\n    animation: jumpY3 1s infinite ease-in-out;\n  }\n  .pull_down4 {\n    -webkit-animation: jumpY4 1.1s infinite ease-in-out;\n    -o-animation: jumpY4 1.1s infinite ease-in-out;\n    animation: jumpY4 1.1s infinite ease-in-out;\n  }\n  .pull_down5 {\n    -webkit-animation: jumpY5 1.6 infinite ease-in-out;\n    -o-animation: jumpY5 1.6s infinite ease-in-out;\n    animation: jumpY5 1.6s infinite ease-in-out;\n  }\n  .pull_down6 {\n    -webkit-animation: jumpY6 1.5s infinite ease-in-out;\n    -o-animation: jumpY6 1.5s infinite ease-in-out;\n    animation: jumpY6 1.5s infinite ease-in-out;\n  }\n  .pull_down7 {\n    -webkit-animation: jumpY7 1.7s infinite ease-in-out;\n    -o-animation: jumpY7 1.7s infinite ease-in-out;\n    animation: jumpY7 1.7s infinite ease-in-out;\n  }\n  .pull_down8 {\n    -webkit-animation: jumpY8 1.9s infinite ease-in-out;\n    -o-animation: jumpY8 1.9s infinite ease-in-out;\n    animation: jumpY8 1.9s infinite ease-in-out;\n  }\n  .pull_down9 {\n    -webkit-animation: jumpY9 1.1s infinite ease-in-out;\n    -o-animation: jumpY9 1.1s infinite ease-in-out;\n    animation: jumpY9 1.1s infinite ease-in-out;\n  }\n  .pull_down10 {\n    -webkit-animation: jumpY10 1.5s infinite ease-in-out;\n    -o-animation: jumpY10 1.5s infinite ease-in-out;\n    animation: jumpY10 1.5s infinite ease-in-out;\n  }\n  @keyframes jumpY1 {\n    0% {\n      height: 74px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 74px;\n    }\n  }\n  @keyframes jumpY2 {\n    0% {\n      height: 44px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 44px;\n    }\n  }\n  @keyframes jumpY3 {\n    0% {\n      height: 30px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 30px;\n    }\n  }\n  @keyframes jumpY4 {\n    0% {\n      height: 51px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 51px;\n    }\n  }\n  @keyframes jumpY5 {\n    0% {\n      height: 51px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 51px;\n    }\n  }\n  @keyframes jumpY6 {\n    0% {\n      height: 61px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 61px;\n    }\n  }\n  @keyframes jumpY7 {\n    0% {\n      height: 47px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 47px;\n    }\n  }\n  @keyframes jumpY8 {\n    0% {\n      height: 21px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 21px;\n    }\n  }\n  @keyframes jumpY9 {\n    0% {\n      height: 61px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 61px;\n    }\n  }\n  @keyframes jumpY10 {\n    0% {\n      height: 49px;\n    }\n    50% {\n      height: 6px;\n    }\n    100% {\n      height: 49px;\n    }\n  }\n  .noLogin {\n    width: 80%;\n    margin: auto;\n  }\n  .login-img {\n    width: 80%;\n  }\n  .tip {\n    margin: 20px 0;\n    font-size: 18px;\n    text-align: center;\n  }\n  .login {\n    text-align: center;\n  }\n  .login-box {\n    top: 0px;\n    position: relative;\n  }\n  .love {\n    font-size: 14px;\n    margin-bottom: constant(safe-area-inset-bottom);\n    margin-bottom: env(safe-area-inset-bottom);\n    padding-bottom: 120px;\n  }\n  .today {\n    margin: 0 20px;\n    border-radius: 10px;\n    color: #fff;\n    overflow: hidden;\n    transform: rotate(0deg);\n    position: relative;\n  }\n  .today-img-box {\n    height: 335px;\n    width: 335px;\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -3;\n    animation: move 40s infinite;\n    background-image: url(\"/images/defaultCover.png\");\n    -webkit-animation: move 40s infinite;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n  @keyframes move {\n    0% {\n      transform: translateY(-47%);\n    }\n    50% {\n      transform: translateY(0);\n    }\n    100% {\n      transform: translateY(-47%);\n    }\n  }\n  .day-box {\n    height: 180px;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-image: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 0%,\n      rgba(0, 0, 0, 0.1) 20%,\n      rgba(0, 0, 0, 0.2) 40%,\n      rgba(0, 0, 0, 0.3) 60%,\n      rgba(0, 0, 0, 0.5) 100%\n    );\n  }\n  .day {\n    flex: 1;\n    font-size: 40px;\n    line-height: 90px;\n    font-weight: bold;\n  }\n  .name {\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: bold;\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  .name-list {\n    flex: 1;\n    padding: 10px;\n    font-size: 14px;\n    text-align: left;\n  }\n  .fm {\n    display: flex;\n    background: rgba(0, 0, 0, 0.4);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    padding: 10px;\n    border-radius: 10px;\n  }\n  .fm-box {\n    margin: 0 20px;\n    color: #fff;\n    border-radius: 10px;\n    margin-top: 20px;\n    background: url(\"\");\n    background-size: cover !important;\n    background-position: 50% 50% !important;\n  }\n  .fm-cover {\n    flex: 1;\n    height: 74px;\n    width: 74px;\n    overflow: hidden;\n    border-radius: 5px;\n  }\n  .fm-cover-img {\n    width: 100%;\n    border-radius: 5px;\n  }\n  .fm-info {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-left: 10px;\n    text-align: left;\n    flex: 3;\n  }\n  .fm-name {\n    font-size: 18px;\n    font-weight: bold;\n    white-space: normal;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  .fm-icon {\n    text-align: right;\n    font-size: 12px;\n  }\n  .calendar {\n    text-align: right;\n  }\n</style>\n",
    "<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { onResume } from 'svelte-stack-router';\n  import { PlayCircleLine, ShuffleLine, SearchLine, RefreshLine } from 'svelte-remixicon';\n\n  import { Button, NavBar } from '../components/base';\n  import SongList from '../components/SongList.svelte';\n\n  import { isHomePageStore, isLoadingStore, defaultResumableStore } from '../store/common';\n  import { userInfoStore, userLikedPlaylistStore } from '../store/user';\n  import {\n    currentSongStore,\n    isPlaying,\n    currentPlayListStore,\n    currentSongIndexStore,\n    isFMPlaying,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from '../store/play';\n\n  import { getSongUrl, getSongDetail } from '../api/song';\n  import { getPlaylistDetail } from '../api/playlist';\n\n  import { Toast, cutArray, songerListToStr, formatURL } from '../utils/common';\n\n  let inputDom;\n  $: keywords = '';\n  $: isSearch = false;\n  $: songList = [];\n  $: searchSongList = []; //搜索过滤之后的歌曲列表\n  $: isRefresh = false;\n\n  let rightIcons = [\n    {\n      id: 'SearchLine',\n      icon: SearchLine,\n    },\n  ];\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      songList = [];\n      isSearch = false;\n      searchSongList = [];\n      keywords = '';\n      isHomePageStore.set(false);\n      getPlaylistDetailFun();\n    }\n  });\n  onMount(() => {\n    isHomePageStore.set(false);\n    getPlaylistDetailFun();\n  });\n  onDestroy(() => {\n    isHomePageStore.set(true);\n  });\n  function inputchange(e) {\n    setTimeout(() => {\n      //采用延时进行节流\n      if (!e.target.isNeedPrevent && e.target.oldValue !== e.target.value) {\n        //判断输入是否完成以及值是否变化\n        e.target.oldValue = e.target.value;\n        keywords = e.target.value;\n        searchFun();\n      }\n    }, 100);\n  }\n  //搜索\n  function searchFun() {\n    if (keywords.trim() != '') {\n      // inputDom.blur();\n      searchSongList = songList.filter(\n        item =>\n          item.name.indexOf(keywords) > -1 ||\n          songerListToStr(item.ar).indexOf(keywords) > -1 ||\n          songerListToStr(item.alia, false).indexOf(keywords) > -1\n      );\n    }\n  }\n  //请求歌单详情\n  async function getPlaylistDetailFun() {\n    const res = await getPlaylistDetail($userLikedPlaylistStore); //获取歌单详情\n    if (res.code === 200) {\n      isLoadingStore.set(true);\n      let songIdList = [];\n      for (let i = 0; i < res.playlist.trackIds.length; i++) {\n        songIdList.push(res.playlist.trackIds[i].id);\n      }\n      let cutSongIdList = cutArray(songIdList);\n      for (let t = 0; t < cutSongIdList.length; t++) {\n        await getSongDetailFun(cutSongIdList[t].join(','), t === cutSongIdList.length - 1);\n      }\n    }\n  }\n  //所有获取歌曲详情\n  async function getSongDetailFun(songIds, last) {\n    const res = await getSongDetail(songIds);\n    if (res.code === 200) {\n      songList = songList.concat(res.songs);\n      if (last) {\n        isRefresh = false;\n      }\n    }\n  }\n  //顺序播放\n  function playListFun(index) {\n    isFMPlaying.set(false);\n    localStorage.setItem('isFMPlay', '0');\n    currentPlayListStore.set(songList);\n    let ids = [];\n    for (let r = 0; r < songList.length; r++) {\n      ids.push(songList[r].id);\n    }\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\n    currentSongIndexStore.set(index);\n    playRepeatModelStore.set('repeat');\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n  }\n  //随机播放\n  function playListShuffleFun() {\n    isFMPlaying.set(false);\n    localStorage.setItem('isFMPlay', '0');\n    currentPlayListStore.set(songList);\n    let ids = [];\n    for (let r = 0; r < songList.length; r++) {\n      ids.push(songList[r].id);\n    }\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\n    let index = Math.floor(Math.random() * ($currentPlayListStore.length - 1));\n    playRepeatModelStore.set('shuffle');\n    currentSongIndexStore.set(index);\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n  }\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set('试听');\n        } else if (res.data[0].type === 'flac') {\n          currentSongQualityStore.set('FLAC');\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        currentSongStore.set(song);\n        localStorage.setItem('currentSong', JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n      } else {\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\n      }\n    }\n  }\n  function rightClickFun(e) {\n    if (e.detail.id === 'SearchLine' && isSearch) {\n      isSearch = false;\n    } else if (e.detail.id === 'SearchLine' && !isSearch) {\n      isSearch = true;\n      setTimeout(() => {\n        inputDom.focus();\n        inputDom.addEventListener('compositionstart', function (e) {\n          //非直接的文字输入时（键盘输入中文的拼音）\n          e.target.isNeedPrevent = true;\n        });\n        inputDom.addEventListener('compositionend', function (e) {\n          //直接输入文字后（键盘选择真实的汉字）\n          e.target.isNeedPrevent = false;\n        });\n        inputDom.addEventListener('input', inputchange);\n        inputDom.addEventListener('keydown', function (e) {\n          if (e.key === 'Enter') {\n            inputDom.blur();\n            searchFun();\n          }\n        });\n      }, 100);\n    }\n  }\n</script>\n\n<NavBar\n  title={$userInfoStore.profile.nickname + '喜欢的歌曲'}\n  {isRefresh}\n  {rightIcons}\n  on:setRightIconClick={rightClickFun}\n/>\n<div class=\"play-list\">\n  {#if isSearch}\n    <div class=\"input-box\">\n      <form action=\"JavaScript:void 0\">\n        <input bind:this={inputDom} placeholder=\"请输入关键字\" type=\"search\" value={keywords} />\n      </form>\n      <button\n        on:click={() => {\n          inputDom.blur();\n          searchFun();\n        }}\n        style=\"background-color: {keywords === '' ? 'rgb(224, 224, 224)' : 'var(--primary-text-color)'};\n        color:{keywords === '' ? '#666' : '#fff'}\"\n      >\n        搜索\n      </button>\n    </div>\n  {/if}\n  <div class=\"today-title\">我喜欢的音乐</div>\n  <div class=\"today-desc\">\n    共 {songList.length} 首\n    {#if isSearch && keywords != ''}\n      ，其中 <span>{searchSongList.length}</span> 首包含『{keywords}』\n    {/if}\n  </div>\n  {#if isSearch && keywords != ''}\n    <div />\n  {:else}\n    <div class=\"btn\">\n      <div class=\"play\">\n        <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\n          <span class=\"icon\">\n            <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\n          </span>\n          顺序播放\n        </Button>\n      </div>\n      <div class=\"play\">\n        <Button type=\"primary\" on:BtnClick={playListShuffleFun}>\n          <span class=\"icon\">\n            <ShuffleLine size=\"20\" style=\"vertical-align: middle\" />\n          </span>\n          随机播放\n        </Button>\n      </div>\n    </div>\n  {/if}\n  <div>\n    {#if isSearch && keywords != ''}\n      <SongList songList={searchSongList} />\n    {:else}\n      <SongList {songList} />\n    {/if}\n  </div>\n</div>\n\n<style>\n  .input-box {\n    margin: 10px auto;\n    font-size: 20px;\n    display: flex;\n    padding: 0 20px;\n  }\n  .input-box form {\n    flex: auto;\n  }\n  .input-box form input {\n    width: 100%;\n    margin: 0;\n    padding: 0 5px;\n    border: none;\n    height: 30px;\n    box-sizing: border-box;\n    line-height: 10px;\n    border-radius: 4px;\n    font-size: 14px;\n    outline: none;\n    -webkit-appearance: none;\n  }\n  .input-box input:focus {\n    border: 1px solid var(--primary-text-color);\n  }\n  .input-box input:active {\n    border: 1px solid var(--primary-text-color);\n  }\n  .input-box button {\n    border: none;\n    padding: 0 8px;\n    border-radius: 4px;\n    margin-left: 10px;\n    width: 48px;\n    height: 30px;\n    line-height: 30px;\n    font-size: 14px;\n    background-color: rgb(224, 224, 224);\n  }\n  .today-title {\n    text-align: center;\n    font-size: 46px;\n    color: var(--primary-text-color);\n    margin: 20px auto;\n    font-weight: bold;\n  }\n  .today-desc {\n    text-align: center;\n    font-size: 12px;\n    margin-bottom: 10px;\n  }\n  .icon {\n    position: relative;\n    top: -2px;\n  }\n  .btn {\n    width: 100%;\n    display: flex;\n    margin-bottom: 10px;\n  }\n  .play {\n    padding: 0px 20px 10px 20px;\n    flex: 1;\n  }\n  .play-list {\n    padding-top: 50px;\n    padding-bottom: 70px;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { push } from \"svelte-stack-router\";\n  import {\n    RefreshLine,\n    ArrowRightSLine,\n    PlayFill,\n    HeartPulseFill,\n  } from \"svelte-remixicon\";\n\n  import { Button, Title } from \"../components/base\";\n  import TopTitle from \"../components/TopTitle.svelte\";\n  import ListGrid from \"../components/ListGrid.svelte\";\n  import Songer from \"../components/Singer.svelte\";\n\n  import { getSongDetail, getSongUrl } from \"../api/song\";\n  import { userPlaylist, likedArtists } from \"../api/user\";\n  import { getPlaylistDetail, intelligenceList } from \"../api/playlist\";\n\n  import {\n    currentSongStore,\n    isPlaying,\n    currentSongIndexStore,\n    currentPlayListStore,\n    isFMPlaying,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import { isLoginStore, isHomePageStore } from \"../store/common\";\n  import {\n    userInfoStore,\n    userLikedArtistsStore,\n    userLikedSongIdsStore,\n    userLikedPlaylistStore,\n  } from \"../store/user\";\n\n  import { sync, userLikedArtistsFun } from \"../helper/user\";\n  import { Toast, Alert, ripple, formatURL, imageURL } from \"../utils/common\";\n\n  let loveSongDom;\n  let infoDom;\n  $: randomList = [];\n  $: collectList = [];\n  $: createList = [];\n  $: randomFontSize = [];\n  $: randomTop = [];\n  $: randomleft = [];\n  $: randomIds = [];\n  $: randomAll = [];\n  $: isRequsetSucc = false;\n  $: isRefresh = false;\n  $: collectSongers = []; //收藏的歌手\n  let topTitleRightList = {\n    type: \"icon\",\n    path: RefreshLine,\n  };\n  onMount(() => {\n    if (infoDom) {\n      ripple(infoDom);\n    }\n    allOnMount();\n  });\n  //初始化页面事件\n  async function allOnMount() {\n    if (!$isLoginStore) return;\n    await sync($userInfoStore);\n    randomFontSize = getRandom(10, 30, 10);\n    randomTop = getRandom(0, 200, 10);\n    randomleft = getRandom(-50, 300, 10);\n    randomIds = getRandom(0, $userLikedSongIdsStore.length, 10);\n    const ids = randomIds.map((i) => $userLikedSongIdsStore[i]);\n    getSongDetailFun(ids);\n    userPlaylistFun();\n    likedArtistsFun();\n  }\n\n   //获取收藏的歌手\n   async function likedArtistsFun() {\n    const res = await likedArtists({ limit: 6 });\n    if (res.code === 200) {\n      collectSongers = res.data;\n    }\n  }\n\n  // 全部歌手\n  function collectSongersFun() {\n    isHomePageStore.set(false);\n    push(\"/allCollectSongers\");\n  }\n  //获取用户收藏歌单ID列表\n  async function userPlaylistFun() {\n    const res = await userPlaylist({ uid: $userInfoStore.account.id });\n    if (res.code === 200) {\n      isRefresh = false;\n      let createListL = [];\n      let collectListL = [];\n      //去除喜欢的音乐\n      if (\n        res.playlist[0].creator.userId === $userInfoStore.account.id &&\n        res.playlist[0].name.substr(-5) === \"喜欢的音乐\"\n      ) {\n        userLikedPlaylistStore.set(res.playlist[0].id);\n        res.playlist.splice(0, 1);\n      }\n      for (let i = 0; i < res.playlist.length; i++) {\n        if (res.playlist[i].creator.userId === $userInfoStore.account.id) {\n          createListL.push(res.playlist[i]);\n        } else {\n          collectListL.push(res.playlist[i]);\n        }\n      }\n      //创建的\n      createList =\n        createListL.length >= 10 ? createListL.slice(0, 10) : createListL;\n      //收藏的\n      collectList =\n        collectListL.length >= 10 ? collectListL.slice(0, 10) : collectListL;\n    } else {\n      Toast(\"获取收藏歌单失败\");\n    }\n  }\n  //获取指定数量、指定范围内随机数\n  function getRandom(n, m, sum) {\n    let arr = [];\n    for (let i = 0; i < sum; i++) {\n      arr.push(Math.floor(Math.random() * (m - n + 1) + n));\n    }\n    return arr;\n  }\n  //所有获取歌曲详情\n  async function getSongDetailFun(songIds) {\n    songIds = songIds.filter(Boolean).join(\",\");\n    isRequsetSucc = false;\n    const res = await getSongDetail(songIds, true);\n    if (res.code === 200) {\n      randomList = res.songs;\n      randomAll = [];\n      for (let u = 0; u < randomList.length; u++) {\n        randomAll.push({\n          name: randomList[u].name,\n          size: randomFontSize[u],\n          top: randomTop[u],\n          left: randomleft[u],\n          img: randomList[u].al.picUrl,\n          id: randomList[u].id,\n        });\n      }\n      isRequsetSucc = true;\n    }\n  }\n  //刷新\n  function topClickFun(event) {\n    if (event.detail.index === 0) {\n      allOnMount();\n    }\n  }\n  //去喜欢歌曲页面\n  function goToLoveListFun() {\n    isHomePageStore.set(false);\n    push(\"/loveListDetail\");\n  }\n  //创建歌单全部\n  function createTitleFun() {\n    isHomePageStore.set(false);\n    push(\"/myAllPlayList?create\");\n  }\n  //收藏歌单全部\n  function collectTitleFun() {\n    isHomePageStore.set(false);\n    push(\"/myAllPlayList?collect\");\n  }\n  //去设置页面\n  function toSettingFun() {\n    isHomePageStore.set(false);\n    push(\"/setting\");\n  }\n  //快速播放\n  function quickPlayFun(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    getPlaylistDetailFun();\n  }\n  //心动模式\n  async function heartPlayFun(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    //从喜欢的歌曲id中随机出一首开启心动模式\n    const randomLikeSongIndex = Math.floor(\n      Math.random() * $userLikedSongIdsStore.length\n    );\n    const randomLikeSongId = $userLikedSongIdsStore[randomLikeSongIndex];\n    const res = await intelligenceList({\n      id: randomLikeSongId,\n      pid: $userLikedPlaylistStore,\n    });\n    if (res.code === 200) {\n      getSongUrl(randomLikeSongId);\n      let songsInfoList = [];\n      for (let r = 0; r < res.data.length; r++) {\n        songsInfoList.push(res.data[r].songInfo);\n      }\n      getFirstDetail(randomLikeSongId, songsInfoList);\n    }\n  }\n  async function getFirstDetail(randomLikeSongId, data) {\n    const res = await getSongDetail(randomLikeSongId, true);\n    if (res.code === 200) {\n      let songs = [res.songs[0], ...data];\n      currentPlayListStore.set(songs);\n      let ids = [];\n      for (let r = 0; r < songs.length; r++) {\n        ids.push(songs[r].id);\n      }\n      localStorage.setItem(\"localPlayList\", JSON.stringify(ids));\n      playListFun(true);\n    }\n  }\n  //请求歌单详情\n  async function getPlaylistDetailFun() {\n    const res = await getPlaylistDetail($userLikedPlaylistStore); //获取歌单详情\n    if (res.code === 200) {\n      let songIdList = [];\n      for (let i = 0; i < res.playlist.trackIds.length; i++) {\n        songIdList.push(res.playlist.trackIds[i].id);\n      }\n      if (songIdList.length > 400) {\n        Toast(\"歌曲较多，拼命加载中，请稍等！\", 2000);\n      }\n      getQuickSongDetailFun(songIdList.join(\",\"));\n      getSongUrl(songIdList[0]);\n    }\n  }\n  //获取所有歌曲详情\n  async function getQuickSongDetailFun(songIds) {\n    const res = await getSongDetail(songIds);\n    if (res.code === 200) {\n      currentPlayListStore.set(res.songs);\n      playListFun(false);\n    }\n  }\n  //播放列表\n  function playListFun(isHeart) {\n    isFMPlaying.set(false);\n    localStorage.setItem(\"isFMPlay\", \"0\");\n    currentSongIndexStore.set(0);\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore], isHeart);\n  }\n  async function getSongUrlFun(song, isHeart) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        currentSongStore.set(song);\n        localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        isHeart\n          ? playRepeatModelStore.set(\"heart\")\n          : playRepeatModelStore.set(\"repeat\");\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n      } else {\n        Alert(\n          isHeart\n            ? `😂 心动模式随机的第一首「${song.name}」无法播放！可能是版权原因......吧！请重新开启心动模式。`\n            : `😂 真不巧，您喜欢歌单的第一首--「${song.name}」就无法播放！可能是版权原因......吧！请进入音乐列表选择后面的歌曲播放。`\n        );\n      }\n    }\n  }\n</script>\n\n<TopTitle\n  title=\"我的\"\n  desc=\"曲库与设置\"\n  {isRefresh}\n  topTitleRightList={$isLoginStore ? topTitleRightList : null}\n  on:IconClick={topClickFun}\n/>\n<div class=\"mine\">\n  {#if $isLoginStore}\n    <div class=\"login\">\n      <div class=\"info-box\" on:click={toSettingFun} bind:this={infoDom}>\n        <div class=\"left\">\n          <div class=\"avatar\">\n            <img\n              src={imageURL($userInfoStore.profile.avatarUrl, { size: 180 })}\n              alt=\"\"\n            />\n          </div>\n          <div class=\"info\">\n            <div class=\"nicename\">{$userInfoStore.profile.nickname}</div>\n            <div class=\"signature\">\n              {$userInfoStore.profile.signature || \"\"}\n            </div>\n            <div class=\"tag\">\n              {#if $userInfoStore.account.vipType !== 0}\n                <span class=\"vip\">\n                  <img class=\"cvip\" src=\"/images/vip/vip.png\" alt=\"\" />\n                  <span class=\"vip-text\">黑胶VIP</span>\n                </span>\n              {:else}\n                <span v-else class=\"text\">\n                  {$userInfoStore.profile.signature}\n                </span>\n              {/if}\n            </div>\n          </div>\n        </div>\n        <div class=\"more\">\n          <ArrowRightSLine size=\"26\" style=\"vertical-align: middle\" />\n        </div>\n      </div>\n      <div\n        class=\"love-song-box\"\n        style=\"background-image: url({imageURL(\n          $userInfoStore.profile.avatarUrl,\n          { size: 180 }\n        )});\"\n      >\n        <div class=\"love-song\" on:click={goToLoveListFun}>\n          <div class=\"love-title\">\n            <div class=\"love-title-text\">\n              我喜欢的音乐<span class=\"love-title-number\"\n                >{$userLikedSongIdsStore.length}首</span\n              >\n            </div>\n          </div>\n          <div class=\"random\">\n            {#if isRequsetSucc}\n              {#each randomAll as item, i}\n                <div\n                  class=\"random-item\"\n                  style=\"height:{item.size}px;line-height:{item.size}px;top: {i *\n                    26}px;left: {item.left}px;font-size:{item.size}px;\"\n                >\n                  <img\n                    class=\"random-img\"\n                    style=\"width:{item.size}px;height:{item.size}px;top:{item.size /\n                      8}px\"\n                    src={imageURL(item.img, { size: 100 })}\n                    alt=\"\"\n                  />\n                  {item.name}\n                </div>\n              {/each}\n            {:else}\n              <span\n                style=\"line-height: 100px;position: relative;left: 50%;margin-left: -50px;top:40px\"\n              >\n                <embed\n                  width=\"100\"\n                  height=\"100\"\n                  src=\"/images/Ripple.svg\"\n                  type=\"image/svg+xml\"\n                />\n              </span>\n            {/if}\n          </div>\n          <div class=\"quick-btn\">\n            <div class=\"quick-btn-item\" on:click={quickPlayFun}>\n              <PlayFill size=\"24\" style=\"vertical-align: middle\" />\n            </div>\n            <div class=\"quick-btn-item\" on:click={heartPlayFun}>\n              <span\n                class:heart-beat={$playRepeatModelStore === \"heart\" &&\n                  $isPlaying}\n              >\n                <HeartPulseFill size=\"24\" style=\"vertical-align: middle\" />\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      {#if collectList.length > 0}\n        <div class=\"list-grid\">\n          <ListGrid\n            title=\"收藏的歌单\"\n            playList={collectList}\n            iconText=\"全部\"\n            on:titleClick={collectTitleFun}\n          />\n        </div>\n      {/if}\n      {#if createList.length > 0}\n        <div class=\"list-grid\">\n          <ListGrid\n            title=\"创建的歌单\"\n            playList={createList}\n            iconText=\"全部\"\n            on:titleClick={createTitleFun}\n          />\n        </div>\n      {/if}\n      {#if collectSongers.length > 0}\n        <Title\n          title=\"收藏的歌手\"\n          iconText=\"全部\"\n          isShowRight={true}\n          on:TitleClick={collectSongersFun}\n        />\n        <div class=\"songer-box\">\n          {#each collectSongers as songer}\n            <Songer {songer} coverSize={330} />\n          {/each}\n        </div>\n      {/if}\n    </div>\n  {:else}\n    <div class=\"noLogin\">\n      <div>\n        <img class=\"login-img\" src=\"images/login.png\" alt=\"\" />\n      </div>\n      <div class=\"tip\">账号信息需要登录</div>\n      <div class=\"login-btn\">\n        <Button\n          type=\"primary\"\n          on:BtnClick={() => {\n            isHomePageStore.set(false);\n            push(\"/login\");\n          }}\n        >\n          立即登录\n        </Button>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .songer-box {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(3, 100px);\n    padding: 0 20px;\n  }\n  .list-grid {\n    margin-top: 30px;\n  }\n  .quick-btn {\n    z-index: 5;\n    display: flex;\n    justify-content: space-between;\n  }\n  .quick-btn-item {\n    width: 50px;\n    height: 50px;\n    margin: 10px;\n    border-radius: 25px;\n    background-color: rgba(255, 255, 255, 0.5);\n    color: var(--primary-text-color);\n    text-align: center;\n    line-height: 50px;\n  }\n  .nicename {\n    font-weight: bold;\n    font-size: 16px;\n  }\n  .signature {\n    font-size: 12px;\n    color: #666;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n    max-width: 200px;\n  }\n  .more {\n    line-height: 62px;\n  }\n  .cvip {\n    width: 24px;\n    height: 12px;\n  }\n  .vip-text {\n    position: relative;\n    top: -2px;\n    font-size: 12px;\n  }\n  .mine {\n    font-size: 14px;\n    padding-bottom: 120px;\n  }\n  .info-box {\n    padding: 10px;\n    display: flex;\n    margin: auto 20px;\n    justify-content: space-between;\n    background-color: #fff;\n    border-radius: 10px;\n  }\n  .left {\n    display: flex;\n  }\n  .avatar {\n    width: 60px;\n    height: 60px;\n    margin-right: 10px;\n    border-radius: 50%;\n    overflow: hidden;\n    border: rgb(214, 214, 214) solid 1px;\n  }\n  .avatar img {\n    width: 100%;\n  }\n  .info {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  .love-song-box {\n    border-radius: 10px;\n    object-fit: cover;\n    background-position: center;\n    margin: 20px;\n    height: 335px;\n    overflow: hidden;\n    background-size: 100%;\n  }\n  .love-song {\n    height: 335px;\n    border-radius: 10px;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    backdrop-filter: blur(14px);\n    -webkit-backdrop-filter: blur(14px);\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n  .random {\n    flex: 8;\n    width: 100%;\n    object-fit: cover;\n    color: #fff;\n    position: relative;\n    font-size: 16px;\n  }\n  .random-item {\n    position: absolute;\n    left: 100px;\n    white-space: nowrap;\n    animation: move 60s infinite;\n    -webkit-animation: move 60s infinite;\n  }\n  @keyframes move {\n    0% {\n      transform: translateX(-50%);\n    }\n    50% {\n      transform: translateX(50%);\n    }\n    100% {\n      transform: translateX(-50%);\n    }\n  }\n  .random-img {\n    border-radius: 10%;\n    position: relative;\n  }\n  .love-title {\n    flex: 2;\n    font-size: 36px;\n    text-align: center;\n    color: #fff;\n  }\n  .love-title-text {\n    font-weight: bold;\n    line-height: 67px;\n  }\n  .love-title-number {\n    font-size: 16px;\n    margin-left: 6px;\n    line-height: 67px;\n  }\n  .noLogin {\n    width: 80%;\n    margin: auto;\n  }\n  .login-img {\n    width: 80%;\n  }\n  .tip {\n    margin: 20px 0;\n    font-size: 18px;\n    text-align: center;\n  }\n  .heart-beat {\n    display: inline-block;\n    /* // 一个完整动画的持续时间 */\n    animation-duration: 1s;\n    /* // 动画循环次数：无限循环 */\n    animation-iteration-count: infinite;\n    /* // 调用的动画名，对应上面的 .heart-bounce */\n    animation-name: heart-bounce;\n  }\n  @keyframes heart-bounce {\n    from {\n      transform: scale(1);\n    }\n    12% {\n      transform: scale(1.02);\n    }\n    20% {\n      transform: scale(0.99);\n    }\n    28% {\n      transform: scale(0.98);\n    }\n    32% {\n      transform: scale(1.2);\n    }\n    38% {\n      transform: scale(0.96);\n    }\n    50% {\n      transform: scale(1);\n    }\n    58% {\n      transform: scale(0.98);\n    }\n    70% {\n      transform: scale(0.9);\n    }\n    80% {\n      transform: scale(0.98);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { onResume, search } from 'svelte-stack-router';\n  import Lazy from 'svelte-lazy';\n\n  import { NavBar, Pagination } from '../components/base';\n  import MiniPlayListCover from '../components/Album.svelte';\n\n  import { defaultResumableStore } from '../store/common';\n\n  import { topPlaylist, highQualityPlaylist } from '../api/playlist';\n\n  import { parseQuery } from '../utils/common';\n\n  $: playList = [];\n  $: hasMore = true;\n  $: offset = 0;\n  $: paginationHeight = 0;\n  $: searchObj = {};\n  $: before = 0;\n  let limit = 20;\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      playList = [];\n      hasMore = true;\n      offset = 0;\n      paginationHeight = 0;\n      before = 0;\n      searchObj = {};\n      allMount();\n    }\n  });\n  onMount(() => {\n    allMount();\n  });\n  function allMount() {\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\n    searchObj = parseQuery($search);\n    if (searchObj.type === 'high') {\n      highQualityPlaylistFun(searchObj.cat);\n    } else {\n      topPlaylistFun(searchObj.cat);\n    }\n  }\n  //热门歌单\n  async function topPlaylistFun(cat) {\n    const res = await topPlaylist({ limit, cat: cat === '默认' ? '全部' : cat, offset });\n    if (res.code === 200) {\n      playList = playList.concat(res.playlists);\n      hasMore = res.more;\n    }\n  }\n  //精品歌单\n  async function highQualityPlaylistFun(cat) {\n    const res = await highQualityPlaylist({ limit, cat: cat === '默认' ? '全部' : cat, before });\n    if (res.code === 200) {\n      playList = playList.concat(res.playlists);\n      hasMore = res.more;\n    }\n  }\n</script>\n\n<NavBar\n  title={searchObj.cat === '官方' ? '官方歌单' : `${searchObj.cat} - ${searchObj.type === 'top' ? '精选' : '精品'}歌单`}\n/>\n<div class=\"comment-page\">\n  <Pagination\n    bottomHeight={70}\n    {paginationHeight}\n    items={playList}\n    let:item\n    let:index\n    {hasMore}\n    grid={2}\n    on:load={() => {\n      if (hasMore) {\n        if (searchObj.type === 'high') {\n          before = playList.slice(-1)[0].updateTime;\n          highQualityPlaylistFun(searchObj.cat);\n        } else {\n          offset = playList.length;\n          topPlaylistFun(searchObj.cat);\n        }\n      }\n    }}\n  >\n    <MiniPlayListCover\n      name={item.name}\n      coverImgUrl={item.coverImgUrl}\n      id={item.id}\n      width={150}\n      playCount={item.playCount}\n      trackCount={item.trackCount}\n    />\n  </Pagination>\n</div>\n\n<style>\n  .comment-page {\n    padding: 50px 20px;\n    font-size: 16px;\n    color: #333333;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { onResume, search } from 'svelte-stack-router';\n\n  import { NavBar, Pagination } from '../components/base';\n  import Song from '../components/Song.svelte';\n\n  import { defaultResumableStore, coverImgUrlStore } from '../store/common';\n  import {\n    currentSongStore,\n    isPlaying,\n    currentPlayListStore,\n    currentSongIndexStore,\n    isFMPlaying,\n    currentSongQualityStore,\n  } from '../store/play';\n\n  import { getAllSongs } from '../api/songer';\n  import { getSongUrl } from '../api/song';\n\n  import { parseQuery, Toast, fullWidth, formatURL } from '../utils/common';\n\n  $: songList = [];\n  $: hasMore = true;\n  $: offset = 0;\n  $: paginationHeight = 0;\n  let limit = 20;\n  $: searchObj = {};\n  let typeList = [\n    { index: 0, type: 'hot', text: '最热' },\n    { index: 1, type: 'time', text: '最近' },\n  ];\n  $: active = 0;\n  $: order = typeList[0].type;\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      songList = [];\n      hasMore = true;\n      offset = 0;\n      active = 0;\n      order = 'hot';\n      searchObj = parseQuery($search);\n      paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\n      getAllSongsFun(0, order);\n    }\n  });\n\n  onMount(() => {\n    searchObj = parseQuery($search);\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\n    getAllSongsFun(0, order);\n  });\n  //热门歌手\n  async function getAllSongsFun(offset, order) {\n    const res = await getAllSongs(searchObj.id, order, limit, offset);\n    if (res.code === 200) {\n      songList = songList.concat(res.songs);\n      hasMore = res.more;\n    }\n  }\n  function playListFun(index) {\n    isFMPlaying.set(false);\n    localStorage.setItem('isFMPlay', '0');\n    let newcurrentPlayList = $currentPlayListStore;\n    let newPlayListIds = [];\n    for (let r = 0; r < newcurrentPlayList.length; r++) {\n      newPlayListIds.push(newcurrentPlayList[r].id);\n    }\n    if (newPlayListIds.includes(songList[index].id)) {\n      currentSongIndexStore.set(newPlayListIds.indexOf(songList[index].id));\n      getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n    } else {\n      newcurrentPlayList.splice($currentSongIndexStore + 1, 0, songList[index]);\n      currentPlayListStore.set(newcurrentPlayList);\n      let ids = [];\n      for (let r = 0; r < newcurrentPlayList.length; r++) {\n        ids.push(newcurrentPlayList[r].id);\n      }\n      localStorage.setItem('localPlayList', JSON.stringify(ids));\n      currentSongIndexStore.set($currentSongIndexStore + 1);\n      getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n    }\n  }\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set('试听');\n        } else if (res.data[0].type === 'flac') {\n          currentSongQualityStore.set('FLAC');\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        song.al.picUrl = $coverImgUrlStore;\n        currentSongStore.set(song);\n        localStorage.setItem('currentSong', JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n      } else {\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\n      }\n    }\n  }\n  function getSongClick(event) {\n    playListFun(event.detail.index);\n  }\n</script>\n\n<NavBar title={`${searchObj.name}的全部歌曲`} />\n\n<div class=\"comment-page\">\n  <div class=\"type\">\n    {#each typeList as t}\n      <div\n        class=\"type-item\"\n        class:active={active === t.index}\n        on:click={() => {\n          active = t.index;\n          order = t.type;\n          songList = [];\n          hasMore = true;\n          offset = 0;\n          getAllSongsFun(offset, order);\n        }}\n      >\n        {t.text}\n      </div>\n    {/each}\n  </div>\n  <div class=\"active-line\" style=\"left: {20 + ((fullWidth() - 40) / 2) * active}px;\" />\n  <div style=\"margin-top:40px\">\n    <Pagination\n      bottomHeight={70}\n      {paginationHeight}\n      items={songList}\n      let:item\n      let:index\n      {hasMore}\n      on:load={() => {\n        if (hasMore) {\n          offset = songList.length;\n          getAllSongsFun(offset, order);\n        }\n      }}\n    >\n      <Song song={item} {index} customCoverUrl={$coverImgUrlStore + '?param=100y100'} on:songClick={getSongClick} />\n    </Pagination>\n  </div>\n</div>\n\n<style>\n  .comment-page {\n    padding: 50px 0;\n    font-size: 16px;\n    color: #333333;\n  }\n  .type {\n    background-color: #fff;\n    position: fixed;\n    top: 50px;\n    width: 100%;\n    display: flex;\n    z-index: 50;\n  }\n  .type-item {\n    font-weight: bold;\n    padding: 10px 0 8px;\n    text-align: center;\n    flex: 1;\n  }\n  .active {\n    color: var(--primary-text-color);\n  }\n  .active-line {\n    position: fixed;\n    top: 86px;\n    margin-bottom: 10px;\n    height: 2px;\n    width: 167.5px;\n    background-color: var(--primary-text-color);\n    left: 0px;\n    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\n    -webkit-transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { onResume } from 'svelte-stack-router';\n\n  import { NavBar, Pagination } from '../components/base';\n  import Songer from '../components/Singer.svelte';\n\n  import { defaultResumableStore } from '../store/common';\n\n  import { topArtists } from '../api/songer';\n\n  $: hotSongers = [];\n  $: hasMore = true;\n  $: offset = 0;\n  $: paginationHeight = 0;\n  let limit = 20;\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      hotSongers = [];\n      hasMore = true;\n      offset = 0;\n      paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\n      topArtistsFun();\n    }\n  });\n\n  onMount(() => {\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\n    topArtistsFun(0);\n  });\n  //热门歌手\n  async function topArtistsFun(offset) {\n    const res = await topArtists(limit, offset);\n    if (res.code === 200) {\n      hotSongers = hotSongers.concat(res.artists);\n      hasMore = res.more;\n    }\n  }\n</script>\n\n<NavBar title={`热门歌手 ${hotSongers.length} 位`} />\n<div class=\"comment-page\">\n  <Pagination\n    bottomHeight={70}\n    {paginationHeight}\n    items={hotSongers}\n    let:item\n    let:index\n    {hasMore}\n    grid={3}\n    on:load={() => {\n      if (hasMore) {\n        offset = hotSongers.length;\n        topArtistsFun(offset);\n      }\n    }}\n  >\n    <Songer songer={item} coverSize={200} />\n  </Pagination>\n</div>\n\n<style>\n  .comment-page {\n    padding: 50px 20px;\n    font-size: 16px;\n    color: #333333;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import Lazy from 'svelte-lazy';\n  import { search, onResume } from 'svelte-stack-router';\n\n  import { NavBar } from '../components/base';\n  import MiniPlayListCover from '../components/Album.svelte';\n\n  import { userPlaylist } from '../api/user';\n\n  import { userInfoStore } from '../store/user';\n  import { defaultResumableStore } from '../store/common';\n\n  import { Alert } from '../utils/common';\n\n  $: playList = [];\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      userPlaylistFun();\n    }\n  });\n\n  onMount(() => {\n    userPlaylistFun();\n  });\n  //获取用户收藏歌单ID列表\n  async function userPlaylistFun(login) {\n    const res = await userPlaylist({\n      uid: $userInfoStore.account.id,\n    });\n    if (res.code === 200) {\n      let createListL = [];\n      let collectListL = [];\n      //去除喜欢的音乐\n      if (\n        res.playlist[0].creator.userId === $userInfoStore.account.id &&\n        res.playlist[0].name.substr(-5) === '喜欢的音乐'\n      ) {\n        res.playlist.splice(0, 1);\n      }\n      for (let i = 0; i < res.playlist.length; i++) {\n        if (res.playlist[i].creator.userId === $userInfoStore.account.id) {\n          createListL.push(res.playlist[i]);\n        } else {\n          collectListL.push(res.playlist[i]);\n        }\n      }\n      playList = $search === '?create' ? createListL : collectListL;\n    } else {\n      Alert('获取收藏歌单失败');\n    }\n  }\n</script>\n\n<NavBar title={$search === '?create' ? '创建的歌单' : '收藏的歌单'} />\n\n<div class=\"play-list-page\">\n  {#each playList as play}\n    <Lazy height={180}>\n      <MiniPlayListCover\n        name={play.name}\n        coverImgUrl={play.coverImgUrl}\n        id={play.id}\n        playCount={play.playCount}\n        trackCount={play.trackCount}\n      />\n    </Lazy>\n  {/each}\n</div>\n\n<style>\n  .play-list-page {\n    padding: 60px 20px 70px;\n    font-size: 16px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n  .play-list-page:after {\n    content: '';\n    width: 105px;\n  }\n</style>\n",
    "<script>\n  import { onMount, afterUpdate } from \"svelte\";\n  import Lazy from \"svelte-lazy\";\n  import { onResume, search } from \"svelte-stack-router\";\n  import {\n    PlayCircleLine,\n    ChatHeartFill,\n    ChatHeartLine,\n  } from \"svelte-remixicon\";\n\n  import { Button, NavBar } from \"../components/base\";\n  import SongList from \"../components/SongList.svelte\";\n\n  import {\n    isLoginStore,\n    isLoadingStore,\n    defaultResumableStore,\n    defaultCover,\n  } from \"../store/common\";\n  import {\n    currentSongStore,\n    isPlaying,\n    currentPlayListStore,\n    currentSongIndexStore,\n    isFMPlaying,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import { userInfoStore } from \"../store/user\";\n\n  import { getPlaylistDetail, subscribePlaylist } from \"../api/playlist\";\n  import { getSongUrl, getSongDetail } from \"../api/song\";\n\n  import {\n    formatTime,\n    Toast,\n    cutArray,\n    parseQuery,\n    formatURL,\n    imageURL,\n  } from \"../utils/common\";\n\n  let coverDom;\n  $: playlistId = 0;\n  $: collect = false;\n  $: title = \"歌单详情\";\n  $: description = \"\";\n  $: alphaNumber = 0; //NavBar透明度的值\n  $: songList = [];\n  $: coverImgUrl = defaultCover;\n  $: name = \"歌单名称\";\n  $: updateTime = new Date().getTime();\n  $: creator = {\n    nickname: \"创建者\",\n    avatarUrl: defaultCover,\n    id: 0,\n  };\n\n  onMount(() => {\n    setTimeout(() => {\n      const { id } = parseQuery($search);\n      playlistId = id;\n      console.debug(\"onMount\", playlistId);\n      getPlaylistDetailFun();\n    }, 300);\n  });\n\n  onResume(() => {\n    const { id } = parseQuery($search);\n    if (!$defaultResumableStore) {\n      playlistId = id;\n      songList = [];\n      getPlaylistDetailFun();\n    }\n  });\n\n  async function getPlaylistDetailFun() {\n    console.debug(\"getPlaylistDetail\", playlistId);\n    const res = await getPlaylistDetail(playlistId); //获取歌单详情\n    if (res.code === 200) {\n      isLoadingStore.set(true);\n\n      const { trackIds } = res.playlist;\n\n      name = title = res.playlist.name;\n      creator = res.playlist.creator;\n      description = res.playlist.description;\n      coverImgUrl = res.playlist.coverImgUrl;\n      updateTime = res.playlist.updateTime;\n\n      const songIdList = trackIds.map((trackIdInfo) => trackIdInfo.id);\n      let cutSongIdList = cutArray(songIdList);\n      for (let t = 0; t < cutSongIdList.length; t++) {\n        await getSongDetailFun(cutSongIdList[t]);\n      }\n    }\n  }\n  async function getSongDetailFun(songIds) {\n    if (Array.isArray(songIds)) songIds = songIds.join(\",\");\n    const res = await getSongDetail(songIds); //所有获取歌曲详情\n    if (res.code === 200) {\n      songList = songList.concat(res.songs);\n    }\n  }\n  function scroll() {\n    const coverToTop = coverDom.getBoundingClientRect().top; //滑动时coverDom到顶部的距离，用于计算上滑时NavBar透明度。\n    if (coverToTop > -50 && coverToTop <= 0) {\n      alphaNumber = Math.abs(coverToTop) / 50;\n    } else {\n      alphaNumber = 1;\n    }\n    if (coverToTop > 0) {\n      alphaNumber = 0;\n    }\n  }\n\n  const playURL = (url) => {\n    window.audioDOM.src = url;\n    window.audioDOM.play();\n  };\n\n  const playSong = (song) => {\n    currentSongStore.set(song);\n    localStorage.setItem(\"currentSong\", JSON.stringify(song));\n    playURL(song.url);\n  };\n\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code !== 200) return;\n    if (res.data[0].url) {\n      song.url = formatURL(res.data[0].url);\n      if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n        currentSongQualityStore.set(\"试听\");\n      } else if (res.data[0].type === \"flac\") {\n        currentSongQualityStore.set(\"FLAC\");\n      } else {\n        currentSongQualityStore.set(res.data[0].br);\n      }\n      playSong(song);\n      isPlaying.set(true);\n      // if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n      //   getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n    } else {\n      Toast(\n        `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n        2000\n      );\n    }\n  }\n  function playListFun(index) {\n    playRepeatModelStore.set(\"repeat\");\n    isFMPlaying.set(false);\n    localStorage.setItem(\"isFMPlay\", \"0\");\n    currentPlayListStore.set(songList);\n    const ids = songList.map((song) => song.id);\n    localStorage.setItem(\"localPlayList\", JSON.stringify(ids));\n\n    currentSongIndexStore.set(index);\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n  }\n  async function subscribe() {\n    console.log(\"subscribe\", playlistId);\n    const res = await subscribePlaylist(playlistId, !collect);\n    if (res.code === 200) {\n      collect = !collect;\n    }\n  }\n</script>\n\n<svelte:window on:scroll={scroll} />\n<NavBar {title} transparent={true} dark={true} {alphaNumber} />\n<div class=\"play-list\">\n  <div\n    class=\"cover-box\"\n    bind:this={coverDom}\n    style=\"background: url({imageURL(coverImgUrl, { size: 450 })});\"\n  >\n    <div class=\"cover-bg\">\n      <div class=\"cover\">\n        <Lazy height={140}>\n          <img\n            class=\"img-cover\"\n            src={imageURL(coverImgUrl, { size: 450 })}\n            alt=\"\"\n          />\n        </Lazy>\n      </div>\n      <div class=\"info\">\n        <div class=\"name\">{name}</div>\n        <div class=\"creater\">\n          <img\n            class=\"creatorImg\"\n            src={imageURL(creator.avatarUrl, { size: 60 })}\n            alt=\"\"\n          />\n          <span class=\"creatertext\">{creator.nickname}</span>\n        </div>\n        <div class=\"update\">\n          更新于{formatTime(updateTime)} &#8226 {songList\n            ? songList.length\n            : 0}首\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"desc\">{description}</div>\n  <div class=\"btn\">\n    <div\n      class=\"play\"\n      style=\"margin-right: {$isLoginStore &&\n      creator.userId != $userInfoStore.account.id\n        ? 20\n        : 0}px;\"\n    >\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\n        <span class=\"icon\">\n          <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\n        </span>\n        播放歌单\n      </Button>\n    </div>\n    {#if $isLoginStore && creator.userId != $userInfoStore.account.id}\n      <div class=\"random\">\n        <Button type={collect ? \"default\" : \"primary\"} on:BtnClick={subscribe}>\n          <span class=\"icon\">\n            {#if collect}\n              <ChatHeartLine size=\"20\" style=\"vertical-align: middle\" />\n            {:else}\n              <ChatHeartFill size=\"20\" style=\"vertical-align: middle\" />\n            {/if}\n          </span>\n          {collect ? \"取消收藏\" : \"收藏歌单\"}\n        </Button>\n      </div>\n    {/if}\n  </div>\n  <div>\n    <SongList {songList} />\n  </div>\n</div>\n\n<style>\n  .icon {\n    position: relative;\n    top: -2px;\n  }\n  .btn {\n    display: flex;\n    margin-bottom: 10px;\n    padding: 0 20px;\n    flex-basis: 20px;\n  }\n  .play {\n    margin-right: 20px;\n    flex: 1;\n  }\n  .random {\n    flex: 1;\n  }\n  .cover-box {\n    background-position: center !important;\n  }\n  .cover-bg {\n    font-size: 12px;\n    padding: 60px 20px 20px;\n    display: flex;\n    color: #fff;\n    background: rgba(0, 0, 0, 0.3);\n    backdrop-filter: blur(20px);\n    -webkit-backdrop-filter: blur(20px);\n  }\n  .img-cover {\n    border-radius: 6px;\n    width: 140px;\n    height: 140px;\n    object-fit: cover;\n  }\n  .cover {\n    flex: 2;\n  }\n  .info {\n    padding-top: 6px;\n    flex: 3;\n    align-items: center;\n    margin-left: 10px;\n    position: relative;\n  }\n  .name {\n    font-size: 18px;\n    max-width: 192px;\n    font-weight: bold;\n  }\n  .creater {\n    margin-top: 8px;\n    align-items: center;\n    line-height: 24px;\n  }\n  .creatorImg {\n    border-radius: 4px;\n    width: 24px;\n    height: 24px;\n    margin-right: 4px;\n  }\n  .creatertext {\n    position: relative;\n    top: -8px;\n  }\n  .update {\n    position: absolute;\n    bottom: 6px;\n  }\n  .desc {\n    margin: 10px 20px;\n    font-size: 12px;\n    max-height: 60px;\n    overflow-y: auto;\n    text-align: justify;\n    color: rgb(116, 116, 116);\n  }\n  .desc:global(::-webkit-scrollbar) {\n    width: 0 !important;\n  }\n  .play-list {\n    padding-bottom: 70px;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { DeleteBinLine } from 'svelte-remixicon';\n\n  import { NavBar } from '../components/base';\n  import Songer from '../components/Singer.svelte';\n  import MiniPlayListCover from '../components/Album.svelte';\n  import SongList from '../components/SongList.svelte';\n\n  import { search } from '../api/others';\n  import { getSongDetail } from '../api/song';\n\n  import { ripple, fullWidth } from '../utils/common';\n\n  let inputDom;\n  let keywords = '';\n  let songers = [];\n  $: songs = [];\n  let playLists = [];\n  let typeList = [\n    { index: 0, type: 0, text: '综合' },\n    { index: 1, type: 1, text: '单曲' },\n    { index: 2, type: 100, text: '歌手' },\n    { index: 3, type: 1000, text: '歌单' },\n  ];\n  $: active = 0;\n  $: type = typeList[0].type;\n  $: searchkeywordList = localStorage.getItem('searchkeywords')\n    ? [...new Set(localStorage.getItem('searchkeywords').split('|&&|'))].filter(function (s) {\n        return s && s.trim();\n      })\n    : [];\n  $: searchkeywordList10 =\n    searchkeywordList.length > 10\n      ? searchkeywordList.slice(0, 10).filter(function (s) {\n          return s && s.trim();\n        })\n      : searchkeywordList.filter(function (s) {\n          return s && s.trim();\n        });\n  $: isShowResult = false;\n  let typeDoms;\n\n  onMount(() => {\n    if (typeDoms) ripple(typeDoms, true);\n    inputDom.addEventListener('compositionstart', function (e) {\n      //非直接的文字输入时（键盘输入中文的拼音）\n      e.target.isNeedPrevent = true;\n    });\n    inputDom.addEventListener('compositionend', function (e) {\n      //直接输入文字后（键盘选择真实的汉字）\n      e.target.isNeedPrevent = false;\n    });\n    inputDom.addEventListener('input', inputchange);\n    inputDom.addEventListener('keydown', function (e) {\n      if (e.key === 'Enter') searchFun();\n    });\n  });\n  function inputchange(e) {\n    setTimeout(() => {\n      //采用延时进行节流\n      if (!e.target.isNeedPrevent && e.target.oldValue !== e.target.value) {\n        //判断输入是否完成以及值是否变化\n        e.target.oldValue = e.target.value;\n        keywords = e.target.value;\n      }\n    }, 10);\n  }\n  //搜索\n  function searchFun() {\n    if (keywords.trim() != '') {\n      inputDom.blur();\n      let searchkeywords = localStorage.getItem('searchkeywords') ? localStorage.getItem('searchkeywords') : '';\n      if (searchkeywords.indexOf(keywords) != -1) {\n        //有\n        searchkeywords = `${keywords}|&&|` + searchkeywords.replace(`${keywords}|&&|`, '');\n      } else {\n        searchkeywords = `${keywords}|&&|` + searchkeywords;\n      }\n      searchkeywordList = searchkeywords.split('|&&|');\n      localStorage.setItem('searchkeywords', searchkeywords);\n      if (type === 0) {\n        //搜索综合\n        searchApiFun(typeList[1].type, false);\n        searchApiFun(typeList[2].type, false);\n        searchApiFun(typeList[3].type, false);\n      } else {\n        searchApiFun(type, true);\n      }\n    }\n  }\n  function quickSearchFun(key) {\n    keywords = key;\n    searchFun();\n  }\n  function clearSearchFun() {\n    searchkeywordList10 = [];\n    localStorage.removeItem('searchkeywords');\n  }\n  //开始搜索\n  async function searchApiFun(type, isMore) {\n    const res = await search({ keywords, type, limit: isMore ? 30 : 6 });\n    if (res.code === 200) {\n      isShowResult = true;\n      switch (type) {\n        case 1:\n          let songIdList = [];\n          for (let i = 0; i < res.result.songs.length; i++) {\n            songIdList.push(res.result.songs[i].id);\n          }\n          getSongDetailFun(songIdList.join(','));\n          break;\n        case 100:\n          songers = res.result.artists;\n          break;\n        case 1000:\n          playLists = res.result.playlists;\n          break;\n        default:\n          console.log('未知类型');\n          break;\n      }\n    }\n  }\n  //获取所有歌曲详情\n  async function getSongDetailFun(songIds) {\n    const res = await getSongDetail(songIds);\n    if (res.code === 200) {\n      songs = res.songs;\n    }\n  }\n  //数组去重\n  function uniqe(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr.indexOf(arr[i]) == i) {\n        temp.push(arr[i]);\n      }\n    }\n    return temp;\n  }\n</script>\n\n<NavBar title=\"搜索\" />\n<div class=\"search-page\">\n  <div class=\"input-box\">\n    <form action=\"JavaScript:void 0\">\n      <input bind:this={inputDom} placeholder=\"请输入关键字\" type=\"search\" value={keywords} />\n    </form>\n    <button\n      on:click={() => searchFun()}\n      style=\"background-color: {keywords === '' ? 'rgb(224, 224, 224)' : 'var(--primary-text-color)'};\n        color:{keywords === '' ? '#666' : '#fff'}\"\n    >\n      搜索\n    </button>\n  </div>\n  <div class=\"searchkeyword\">\n    {#each searchkeywordList10.filter(function (s) {\n      return s && s.trim();\n    }) as item}\n      <span class=\"key-item\" on:click={() => quickSearchFun(item)}>\n        {item}\n      </span>\n    {/each}\n    {#if searchkeywordList10.filter(function (s) {\n      return s && s.trim();\n    }).length > 0}\n      <span class=\"key-item\" on:click={clearSearchFun}>\n        <DeleteBinLine size=\"12\" style=\"vertical-align: middle\" />\n      </span>\n    {/if}\n  </div>\n  <div class=\"type\" bind:this={typeDoms}>\n    {#each typeList as t}\n      <div\n        class=\"type-item\"\n        class:active={active === t.index}\n        on:click={() => {\n          active = t.index;\n          type = t.type;\n          searchFun();\n        }}\n      >\n        {t.text}\n      </div>\n    {/each}\n  </div>\n  <div class=\"active-line\" style=\"left: {20 + ((fullWidth() - 40) / 4) * active}px;\" />\n  {#if isShowResult}\n    <div class=\"result-box\">\n      <!-- 综合 -->\n      <div class=\"result all-box\" style=\"display: {active === 0 ? 'block' : 'none'};\">\n        <div class=\"songer-title\">单曲</div>\n        <div class=\"reault-song\">\n          <div class=\"song-box\">\n            <SongList songList={songs} />\n          </div>\n        </div>\n        <!-- <Divider /> -->\n        <div class=\"songer-title\">歌手</div>\n        <div class=\"reault-songer\">\n          {#each songers as songer}\n            <div class=\"songer-box\">\n              <Songer {songer} coverSize={330} />\n            </div>\n          {/each}\n        </div>\n        <!-- <Divider /> -->\n        <div class=\"songer-title\">歌单</div>\n        <div class=\"reault-play-list\">\n          {#each playLists as play}\n            <div class=\"list-box\">\n              <MiniPlayListCover\n                name={play.name}\n                coverImgUrl={play.coverImgUrl}\n                id={play.id}\n                playCount={play.playCount}\n                trackCount={play.trackCount}\n              />\n            </div>\n          {/each}\n        </div>\n      </div>\n      <!-- 单曲 -->\n      <div class=\"result song-box\" style=\"display: {active === 1 ? 'block' : 'none'};\">\n        <div class=\"reault-song\">\n          <div class=\"song-box\">\n            <SongList songList={songs} />\n          </div>\n        </div>\n      </div>\n      <!--歌手 -->\n      <div class=\"result reault-songer-box\" style=\"display: {active === 2 ? 'block' : 'none'};\">\n        <div class=\"reault-songer\">\n          {#each songers as songer}\n            <Songer {songer} coverSize={250} />\n          {/each}\n        </div>\n      </div>\n      <!-- 歌单 -->\n      <div style=\"display: {active === 3 ? 'block' : 'none'};\">\n        <div class=\"reault-play-list\">\n          {#each playLists as play}\n            <MiniPlayListCover\n              name={play.name}\n              coverImgUrl={play.coverImgUrl}\n              id={play.id}\n              playCount={play.playCount}\n              trackCount={play.trackCount}\n            />\n          {/each}\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .searchkeyword {\n    padding: 10px 20px;\n  }\n  .key-item {\n    display: inline-block;\n    font-size: 12px;\n    margin: 4px 8px 4px 0;\n    padding: 4px 8px;\n    border-radius: 4px;\n    background-color: #fff;\n  }\n  .songer-title {\n    margin: 20px auto 10px;\n    font-weight: bold;\n    padding: 0 20px;\n  }\n  .active-line {\n    margin-bottom: 10px;\n    height: 2px;\n    width: 83.75px;\n    background-color: var(--primary-text-color);\n    position: relative;\n    left: 0px;\n    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\n    -webkit-transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\n  }\n  .type {\n    display: flex;\n    padding: 0 20px;\n  }\n  .type-item {\n    font-weight: bold;\n    padding: 10px 0 8px;\n    text-align: center;\n    flex: 1;\n  }\n  .active {\n    color: var(--primary-text-color);\n  }\n  .search-page {\n    font-size: 16px;\n    padding: 50px 0px 70px;\n  }\n  .input-box {\n    margin: 10px auto;\n    font-size: 20px;\n    display: flex;\n    padding: 0 20px;\n  }\n  .input-box form {\n    flex: auto;\n  }\n  .input-box form input {\n    width: 100%;\n    margin: 0;\n    padding: 0 5px;\n    border: none;\n    height: 30px;\n    box-sizing: border-box;\n    line-height: 10px;\n    border-radius: 4px;\n    font-size: 14px;\n    outline: none;\n    -webkit-appearance: none;\n  }\n  .input-box input:focus {\n    border: 1px solid var(--primary-text-color);\n  }\n  .input-box input:active {\n    border: 1px solid var(--primary-text-color);\n  }\n  .input-box button {\n    border: none;\n    padding: 0 8px;\n    border-radius: 4px;\n    margin-left: 10px;\n    width: 48px;\n    height: 30px;\n    line-height: 30px;\n    font-size: 14px;\n    background-color: rgb(224, 224, 224);\n  }\n  .reault-songer {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(3, 100px);\n    padding: 0 20px;\n  }\n  .reault-play-list {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(2, 150px);\n    padding: 0 20px;\n  }\n  .songer-box {\n    padding: 10px 0;\n  }\n</style>\n",
    "<script>\n  import { pop, push } from 'svelte-stack-router';\n\n  import { NavBar, Cell, Button } from '../components/base';\n\n  import { logout } from '../api/user';\n\n  import {\n    restoreScrollStore,\n    musicQualityStore,\n    isShowTranslateStore,\n    isLoginStore,\n    isShowCommentStore,\n  } from '../store/common';\n\n  import { Confirm } from '../utils/common';\n\n  let musicQualityArr = ['普通', '较高', '极高', '无损'];\n\n  function switchScrollFun(e) {\n    restoreScrollStore.set(e.detail.cellCheck);\n    localStorage.setItem('restoreScroll', e.detail.cellCheck ? '1' : '0');\n  }\n  function switchCommentFun(e) {\n    isShowCommentStore.set(e.detail.cellCheck ? '1' : '0');\n    localStorage.setItem('isShowComment', e.detail.cellCheck ? '1' : '0');\n  }\n  function brFun() {\n    push('/brSelect');\n  }\n  function translateFun(e) {\n    isShowTranslateStore.set(e.detail.cellCheck);\n    localStorage.setItem('isShowTranslate', e.detail.cellCheck ? '1' : '0');\n  }\n  function logoutFun() {\n    Confirm('确定退出当前账号？', async () => {\n      const res = await logout();\n      if (res.code === 200) {\n        localStorage.clear();\n        isLoginStore.set(false);\n        clearAllCookie();\n        pop();\n      }\n    });\n  }\n  //清除所有cookie函数\n  function clearAllCookie() {\n    let keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\n    if (keys) {\n      for (let i = keys.length; i--; ) document.cookie = keys[i] + '=0;expires=' + new Date(0).toUTCString();\n    }\n  }\n  function aboutFun() {\n    push('/about');\n  }\n  function versionFun() {\n    push('/version');\n  }\n</script>\n\n<NavBar title=\"设置\" />\n\n<div class=\"setting-page\">\n  <!-- 设置 -->\n  <Cell title=\"播放音质\" on:cellClick={brFun} desc={musicQualityArr[Number($musicQualityStore)]} arrow={true} />\n  <Cell\n    title=\"热评\"\n    on:cellClick={switchCommentFun}\n    desc=\"Switch\"\n    cellCheck={$isShowCommentStore === '0' ? false : true}\n  />\n  <Cell title=\"显示歌词翻译\" on:cellClick={translateFun} desc=\"Switch\" cellCheck={$isShowTranslateStore} />\n  <Cell\n    title=\"自动滚动\"\n    titleDesc=\"导航返回上一页后自动滚动到之前的位置\"\n    on:cellClick={switchScrollFun}\n    desc=\"Switch\"\n    cellCheck={$restoreScrollStore}\n  />\n  <Cell title=\"关于\" on:cellClick={aboutFun} arrow={true} />\n  <Cell title=\"版本记录\" on:cellClick={versionFun} arrow={true} />\n  <div class=\"bottom\">\n    <Button on:BtnClick={logoutFun}>退出登录</Button>\n  </div>\n  <div class=\"version\">V 1.0.1</div>\n</div>\n\n<style>\n  .setting-page {\n    padding: 50px 20px 70px;\n    font-size: 16px;\n  }\n  .bottom {\n    margin: 20px auto;\n  }\n  .version {\n    margin: 20px auto;\n    font-size: 12px;\n    text-align: center;\n    color: rgb(141, 141, 141);\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { search, onResume } from \"svelte-stack-router\";\n\n  import { NavBar } from \"../components/base\";\n\n  import { defaultResumableStore } from \"../store/common\";\n\n  import { getSongerDesc } from \"../api/songer\";\n\n  $: briefDesc = \"\";\n  $: introduction = [];\n  $: topicData = [];\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      getSongerDescFun();\n    }\n  });\n\n  onMount(() => {\n    getSongerDescFun();\n  });\n  async function getSongerDescFun() {\n    const res = await getSongerDesc($search.substr(1));\n    if (res.code === 200) {\n      briefDesc = res.briefDesc;\n      introduction = res.introduction;\n      topicData = res.topicData;\n    }\n  }\n</script>\n\n<NavBar title=\"歌手详情\" dark={true} />\n<div class=\"page\">\n  <div class=\"title\">简介</div>\n  <div class=\"text\">{briefDesc}</div>\n  {#each introduction as i}\n    <div class=\"title\">{i.ti}</div>\n    <div class=\"text\">{@html i.txt}</div>\n  {/each}\n</div>\n\n<style>\n  .page {\n    padding: 50px 20px 70px;\n    font-size: 18px;\n    font-weight: bold;\n    text-align: justify;\n  }\n  .title {\n    margin: 20px 0 10px;\n  }\n  .text {\n    font-weight: normal;\n    font-size: 14px;\n    color: rgb(97, 97, 97);\n    white-space: pre-line;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { PlayCircleLine } from \"svelte-remixicon\";\n  import { onResume } from \"svelte-stack-router\";\n\n  import { Button, NavBar } from \"../components/base\";\n  import SongList from \"../components/SongList.svelte\";\n\n  import { getSongUrl, getSongDetail } from \"../api/song\";\n\n  import {\n    playListDetailStore,\n    dailyRecommendTracksStore,\n  } from \"../store/playList\";\n  import {\n    currentSongStore,\n    isPlaying,\n    currentPlayListStore,\n    currentSongIndexStore,\n    isFMPlaying,\n    playRepeatModelStore,\n    currentSongQualityStore,\n  } from \"../store/play\";\n  import { defaultResumableStore } from \"../store/common\";\n\n  import { formatURL, Toast } from \"../utils/common\";\n\n  $: songList = [];\n\n  onResume(() => {\n    if (!$defaultResumableStore) {\n      let songIdList = [];\n      for (let i = 0; i < $dailyRecommendTracksStore.length; i++) {\n        songIdList.push($dailyRecommendTracksStore[i].id);\n      }\n      getSongDetailFun(songIdList.join(\",\"));\n      getSongUrl(songIdList[0]);\n    }\n  });\n  onMount(() => {\n    let songIdList = [];\n    for (let i = 0; i < $dailyRecommendTracksStore.length; i++) {\n      songIdList.push($dailyRecommendTracksStore[i].id);\n    }\n    getSongDetailFun(songIdList.join(\",\"));\n    getSongUrl(songIdList[0]);\n  });\n  async function getSongDetailFun(songIds) {\n    const res = await getSongDetail(songIds); //所有获取歌曲详情\n    if (res.code === 200) {\n      playListDetailStore.set(res.songs);\n      songList = res.songs;\n    }\n  }\n  function playListFun(index) {\n    playRepeatModelStore.set(\"repeat\");\n    isFMPlaying.set(false);\n    localStorage.setItem(\"isFMPlay\", \"0\");\n    currentPlayListStore.set(songList);\n    let ids = [];\n    for (let r = 0; r < songList.length; r++) {\n      ids.push(songList[r].id);\n    }\n    localStorage.setItem(\"localPlayList\", JSON.stringify(ids));\n    currentSongIndexStore.set(index);\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\n  }\n  async function getSongUrlFun(song) {\n    const res = await getSongUrl(song.id); //获取歌单url\n    if (res.code === 200) {\n      if (res.data[0].url) {\n        song.url = formatURL(res.data[0].url);\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\n          currentSongQualityStore.set(\"试听\");\n        } else if (res.data[0].type === \"flac\") {\n          currentSongQualityStore.set(\"FLAC\");\n        } else {\n          currentSongQualityStore.set(res.data[0].br);\n        }\n        currentSongStore.set(song);\n        localStorage.setItem(\"currentSong\", JSON.stringify(song));\n        window.audioDOM.src = song.url;\n        window.audioDOM.play();\n        isPlaying.set(true);\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\n      } else {\n        Toast(\n          `😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`,\n          2000\n        );\n      }\n    }\n  }\n</script>\n\n<NavBar title=\"今日推荐歌曲\" />\n<div class=\"play-list\">\n  <div class=\"today-title\">今日推荐歌曲</div>\n  <div class=\"today-desc\">\n    根据你的音乐口味生成 {songList.length} 首 · 每天6:00更新\n  </div>\n  <div class=\"btn\">\n    <div class=\"play\">\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\n        <span class=\"icon\">\n          <PlayCircleLine size=\"22\" style=\"vertical-align: middle\" />\n        </span>\n        播放全部\n      </Button>\n    </div>\n  </div>\n  <div>\n    <SongList {songList} />\n  </div>\n</div>\n\n<style>\n  .icon {\n    position: relative;\n    top: -2px;\n  }\n  .today-title {\n    text-align: center;\n    font-size: 46px;\n    color: var(--primary-text-color);\n    margin: 40px auto;\n    font-weight: bold;\n  }\n  .today-desc {\n    text-align: center;\n    font-size: 12px;\n  }\n\n  .btn {\n    width: 100%;\n    display: flex;\n    margin-bottom: 10px;\n  }\n  .play {\n    padding: 0px 20px 10px 20px;\n    flex: 1;\n  }\n  .play-list {\n    padding-top: 50px;\n    padding-bottom: 70px;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}